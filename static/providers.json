[
  {
    "name": "openlibrary",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://openlibrary.org/static/openapi.json",
    "content_type": "application/json",
    "metadata": {
      "description": "Open Library API for accessing book information and catalog data",
      "category": "Books & Literature",
      "last_updated": "2024-01-15",
      "maintainer": "Internet Archive",
      "documentation_url": "https://openlibrary.org/developers/api"
    }
  },
  {
    "name": "newsapi",
    "provider_type": "text",
    "file_path": "./newsapi_manual.json",
    "metadata": {
      "description": "News API for accessing current and historic news articles",
      "category": "News & Media",
      "last_updated": "2024-01-10",
      "maintainer": "NewsAPI.org",
      "documentation_url": "https://newsapi.org/docs"
    }
  },
  {
    "name": "openai",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/openai/openai-openapi/refs/heads/manual_spec/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "OpenAI API for accessing GPT models and AI capabilities",
      "category": "AI & Machine Learning",
      "last_updated": "2024-01-20",
      "maintainer": "OpenAI",
      "documentation_url": "https://platform.openai.com/docs"
    }
  },
  {
    "name": "github",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/github/rest-api-description/main/descriptions/api.github.com/api.github.com.json",
    "content_type": "application/json",
    "metadata": {
      "description": "GitHub REST API for repositories, users, issues, and more",
      "category": "Development & Version Control",
      "last_updated": "2025-01-01",
      "maintainer": "GitHub",
      "documentation_url": "https://docs.github.com/en/rest"
    }
  },
  {
    "name": "pokeapi",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/pokeapi.co/2.0.0/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "RESTful Pokémon API with data about Pokémon, moves, abilities, and more",
      "category": "Gaming & Entertainment",
      "last_updated": "2024-12-01",
      "maintainer": "PokéAPI",
      "documentation_url": "https://pokeapi.co/docs/v2"
    }
  },
  {
    "name": "stripe",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/stripe.com/2020-08-27/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "Stripe payment processing API for online payments and billing",
      "category": "Payments & Finance",
      "last_updated": "2024-11-15",
      "maintainer": "Stripe",
      "documentation_url": "https://stripe.com/docs/api"
    }
  },
  {
    "name": "weatherapi",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/weatherapi.com/1.0.2/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "Weather API providing current weather, forecasts, and historical data",
      "category": "Weather & Climate",
      "last_updated": "2024-10-20",
      "maintainer": "WeatherAPI",
      "documentation_url": "https://www.weatherapi.com/docs/"
    }
  },
  {
    "name": "jsonplaceholder",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/jsonplaceholder.typicode.com/1.0.0/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "Fake REST API for testing and prototyping with posts, users, and comments",
      "category": "Development & Testing",
      "last_updated": "2024-08-15",
      "maintainer": "JSONPlaceholder",
      "documentation_url": "https://jsonplaceholder.typicode.com/"
    }
  },
  {
    "name": "restcountries",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/restcountries.com/3.1/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "REST Countries API providing information about all countries",
      "category": "Geography & Travel",
      "last_updated": "2024-09-10",
      "maintainer": "REST Countries",
      "documentation_url": "https://restcountries.com/"
    }
  },
  {
    "name": "petstore",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/swagger-api/swagger-petstore/master/src/main/resources/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "Swagger Petstore sample API for learning OpenAPI specification",
      "category": "Examples & Samples",
      "last_updated": "2024-07-01",
      "maintainer": "Swagger API",
      "documentation_url": "https://petstore.swagger.io/"
    }
  },
  {
    "name": "alerter_system_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/alertersystem.com/1.7.0/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "<p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>",
      "category": "AI & Machine Learning",
      "last_updated": "2025-08-03",
      "maintainer": "alertersystem.com",
      "documentation_url": "https://alertersystem.com",
      "version": "1.7.0",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "Alerter System API",
      "paths_count": 186,
      "schemas_count": 576
    }
  },
  {
    "name": "anchore_engine_api_server",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/anchore.io/0.1.20/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "This is the Anchore Engine API. Provides the primary external API for users of the service.",
      "category": "Development Tools",
      "last_updated": "2025-08-03",
      "maintainer": "anchore.io",
      "documentation_url": "https://anchore.io",
      "version": "0.1.20",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "Anchore Engine API Server",
      "paths_count": 75,
      "schemas_count": 149
    }
  },
  {
    "name": "apacta",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/apacta.com/0.0.42/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.\n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number&direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n\n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true&sort=Forms.created&direction=DESC&include=Products%2CCreatedBy&limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n\n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse<String> response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true&sort=Forms.created&direction=DESC&include=Products%2CCreatedBy&limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n\n  var xhr = new XMLHttpRequest();\n\n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n\n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true&sort=Forms.created&direction=DESC&include=Products%2CCreatedBy&limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n\n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true&sort=Forms.created&direction=DESC&include=Products%2CCreatedBy&limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n\n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs:\n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers:\n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n\n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n\n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n\n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n\n  payload = \"\"\n\n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n\n  conn.request(\"GET\", \"/api/v1/forms?extended=true&sort=Forms.created&direction=DESC&include=Products%2CCreatedBy&limit=5\", payload, headers)\n\n  res = conn.getresponse()\n  data = res.read()\n\n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true&sort=Forms.created&direction=DESC&include=Products%2CCreatedBy&limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);\n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n\n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true&sort=Forms.created&direction=DESC&include=Products%2CCreatedBy&limit=5\")\n\n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n\n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  <?php\n\n  $request = new HttpRequest();\n  $request->setUrl('https://app.apacta.com/api/v1/forms');\n  $request->setMethod(HTTP_METH_GET);\n\n  $request->setQueryData(array(\n    'extended' => 'true',\n    'sort' => 'Forms.created',\n    'direction' => 'DESC',\n    'include' => 'Products,CreatedBy',\n    'limit' => '5'\n  ));\n\n  $request->setHeaders(array(\n    'accept' => 'application/json',\n    'x-auth-token' => '{INSERT_YOUR_TOKEN}'\n  ));\n\n  try {\n    $response = $request->send();\n\n    echo $response->getBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true&sort=Forms.created&direction=DESC&include=Products%2CCreatedBy&limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n\n```",
      "category": "AI & Machine Learning",
      "last_updated": "2025-08-03",
      "maintainer": "apacta.com",
      "documentation_url": "https://apacta.com",
      "version": "0.0.42",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "Apacta",
      "paths_count": 185,
      "schemas_count": 90
    }
  },
  {
    "name": "api_video",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/api.video/1/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "api.video is an API that encodes on the go to facilitate immediate playback, enhancing viewer streaming experiences across multiple devices and platforms. You can stream live or on-demand online videos within minutes.",
      "category": "Development Tools",
      "last_updated": "2025-08-03",
      "maintainer": "api.video",
      "documentation_url": "https://api.video",
      "version": "1",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "api.video",
      "paths_count": 26,
      "schemas_count": 70
    }
  },
  {
    "name": "swagger_api2cart",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/api2cart.com/1.1/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "API2Cart",
      "category": "Development Tools",
      "last_updated": "2025-08-03",
      "maintainer": "api2cart.com",
      "documentation_url": "http://docs.api2cart.com",
      "version": "1.1",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "Swagger API2Cart",
      "paths_count": 147,
      "schemas_count": 143
    }
  },
  {
    "name": "api2pdf_pdf_generation_powered_by_aws_lambda",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/api2pdf.com/1.0.0/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "\n# Introduction\n[Api2Pdf](https://www.api2pdf.com) is a powerful PDF generation API with no rate limits or file size constraints. Api2Pdf runs on AWS Lambda, a serverless architecture powered by Amazon to scale to millions of requests while being up to 90% cheaper than alternatives. **Supports wkhtmltopdf, Headless Chrome, LibreOffice, and PDF Merge.** You can also generate barcodes with ZXING (Zebra Crossing).\n# SDKs & Client Libraries\nWe've made a number of open source libraries available for the API\n- Python: [https://github.com/api2pdf/api2pdf.python](https://github.com/api2pdf/api2pdf.python)\n- .NET: [https://github.com/api2pdf/api2pdf.dotnet](https://github.com/api2pdf/api2pdf.dotnet)\n- Nodejs: [https://github.com/api2pdf/api2pdf.node](https://github.com/api2pdf/api2pdf.node)\n- PHP: [https://github.com/Api2Pdf/api2pdf.php](https://github.com/Api2Pdf/api2pdf.php)\n- Ruby: (Coming soon)\n# Authorization\nCreate an account at [portal.api2pdf.com](https://portal.api2pdf.com/register) to get an API key.\n\n**Authorize your API calls**\n- GET requests, include apikey=YOUR-API-KEY as a query string parameter\n- POST requests, add **Authorization** to your header.\n``` Authorization: YOUR-API-KEY ```\n\n# Quickstart\nIf you are looking for just a quick call to grab PDFs of a URL, you can do a GET request like:\n``` https://v2018.api2pdf.com/chrome/url?url={UrlToConvert}&apikey={YourApiKey} ```\n\nFor more advanced usage and settings, see the API specification below.\n",
      "category": "AI & Machine Learning",
      "last_updated": "2025-08-03",
      "maintainer": "Support",
      "documentation_url": "https://www.api2pdf.com",
      "version": "1.0.0",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "Api2Pdf - PDF Generation, Powered by AWS Lambda",
      "paths_count": 7,
      "schemas_count": 10
    }
  },
  {
    "name": "app_center_client",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/appcenter.ms/v0.1/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "Microsoft Visual Studio App Center API",
      "category": "Development Tools",
      "last_updated": "2025-08-03",
      "maintainer": "appcenter.ms",
      "documentation_url": "https://appcenter.ms",
      "version": "v0.1",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "App Center Client",
      "paths_count": 266,
      "schemas_count": 783
    }
  },
  {
    "name": "powertools_developer",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/apptigent.com/2021.1.01/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "Apptigent PowerTools Developer Edition is a powerful suite of API endpoints for custom applications running on any stack. Manipulate text, modify collections, format dates and times, convert currency, perform advanced mathematical calculations, shorten URL's, encode strings, convert text to speech, translate content into multiple languages, process images, and more. PowerTools is the ultimate developer toolkit.",
      "category": "Development Tools",
      "last_updated": "2025-08-03",
      "maintainer": "Customer Support",
      "documentation_url": "https://www.apptigent.com/help/",
      "version": "2021.1.01",
      "openapi_version": "3.0.1",
      "quality_score": 100,
      "is_popular": false,
      "title": "PowerTools Developer",
      "paths_count": 88,
      "schemas_count": 69
    }
  },
  {
    "name": "appveyor_rest_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/appveyor.com/1.0.0/swagger.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "AppVeyor is a hosted continuous integration service which runs on Microsoft\nWindows.  The AppVeyor REST API provides a RESTful way to interact with the\nAppVeyor service.  This includes managing projects, builds, deployments,\nand the teams that build them.\n\nAdditional help and discussion of the AppVeyor REST API is available at\nhttp://help.appveyor.com/discussions\n\nThis Swagger definition is an **unofficial** description of the AppVeyor\nREST API maintained at https://github.com/kevinoid/appveyor-swagger\nPlease report any issues or suggestions for this Swagger definition at\nhttps://github.com/kevinoid/appveyor-swagger/issues/new\n\n#### API Conventions\n\nFields which are missing from update operations (`PUT` requests) are\ntypically reset to their default values.  So although most fields are not\ntechnically required, they should usually be specified in practice.\n",
      "category": "AI & Machine Learning",
      "last_updated": "2025-08-03",
      "maintainer": "AppVeyor Team",
      "documentation_url": "https://www.appveyor.com/docs/api/",
      "version": "1.0.0",
      "openapi_version": "2.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "AppVeyor REST API",
      "paths_count": 37,
      "schemas_count": 99
    }
  },
  {
    "name": "art19_content_api_documentation",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/art19.com/1.0.0/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "The ART19 Content API conforms to the [JSON:API specification](http://jsonapi.org).\n\nAPI requests **MUST** use the HTTP Accept header:\n\n`Accept: application/vnd.api+json`\n\nAPI requests **MUST** be authenticated using the HTTP Authorization header:\n\n`Authorization: Token token=\"your-token\", credential=\"your-credential\"`\n\n## General Notes\n\nSome query parameters use unencoded [ and ] characters simply for readability. Defaults, examples, and\npossible values are additionally rendered in double quotes for readability. In practice, query parameters should\nnot have quotes around the values (e.g., `foo=bar` is valid, not `foo=\"bar\"`), and both query parameter keys\nand values must be percent-encoded, per the requirements in [RFC 3986 § 3.4](https://tools.ietf.org/html/rfc3986#section-3.4).\n\n## Rate Limiting\n\nIn order to provide a fair distribution of available resources, all API calls are subject to rate limits.\nIf you exceed the number of API calls per minute granted to your credential, a `429 Too Many Requests`\nerror response will be returned.\n\nIn that case, a `Retry-After` header MAY be included in the response, describing the number of seconds\nafter which a request can be retried.\n\nIf you run into a high number of 429 errors, please reach out to ART19 Support to adjust your rate limit.\n\n### Example\n\nIn the following example the request can be retried after waiting for 21 seconds:\n\n    HTTP/1.1 429 Too Many Requests\n    Content-Type: text/html\n    Retry-After: 21\n\n## Pagination\n\nRequests to collection endpoints **SHOULD** provide pagination parameters.\nSome endpoints **REQUIRE** pagination parameters to be provided.\nWhenever pagination is provided, it **MUST** be valid.\nFailing to provide pagination when it is required or providing wrong or incomplete pagination\nalways results in a `400 Bad Request` error response.\n\nThe page numbering starts with `1` and the maximum page size (if not otherwise documented\non an endpoint) is `100`. Pagination **MUST NOT** be specified if requesting a list of IDs (using an `ids[]` parameter).\n\nProviding invalid values for page number or page size, as well as providing only a page number or only a page size,\nis considered an error. Pagination is provided like this:\n\n`page[number]=1&page[size]=25`\n\nResponses conform to the [JSON:API specification's pagination section](https://jsonapi.org/format/#fetching-pagination)\nby including pagination links. Your requested page size will be carried into the pagination links.\n\n## Sorting\n\nRequests to collection endpoints usually accept a `sort` parameter. Please refer to the\n[JSON:API Specification's sorting section](https://jsonapi.org/format/#fetching-sorting) for further details.\n\n## Relationship Linking\n\nCurrently, resources return all of their relationships, in no particular order, pursuant to how relationships\nshould be returned [according to the JSON:API specification](https://jsonapi.org/format/#document-resource-object-relationships). Consumers of this API\n**MUST NOT** make assumptions about the order of these collections. Even though this data is not currently paginated, consumers **MUST** support\npaginating relationships per the JSON:API specification if this data is important for their application.\n",
      "category": "AI & Machine Learning",
      "last_updated": "2025-08-03",
      "maintainer": "ART19 Engineering Team",
      "documentation_url": "https://art19.com",
      "version": "1.0.0",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "ART19 Content API Documentation",
      "paths_count": 22,
      "schemas_count": 13
    }
  },
  {
    "name": "asana",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/asana.com/1.0/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/developer-docs/master/defs/asana_oas.yaml).",
      "category": "AI & Machine Learning",
      "last_updated": "2025-08-03",
      "maintainer": "Asana Support",
      "documentation_url": "https://asana.com/support",
      "version": "1.0",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "Asana",
      "paths_count": 126,
      "schemas_count": 165
    }
  },
  {
    "name": "business_registries",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/ato.gov.au/0.0.6/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "# Introduction\nThe Business Registries API is built on HTTP. The API is RESTful. It has predictable resource URIs.\n\n  The API is documented in <a target=\"_blank\" href=\"https://github.com/OAI/OpenAPI-Specification\">OpenAPI</a> format.\n  In addition to the standard OpenAPI syntax we use a few\n  <a target=\"_blank\" href=\"https://github.com/Rebilly/ReDoc/blob/master/docs/redoc-vendor-extensions.md\">vendor extensions</a>.\n\n# Overview\nThe following sections describe the resources that make up the Business Registries REST API.\n## Current Version\nBy default, all requests to https://api.abr.ato.gov.au receive the `v1` version of the REST API. We encourage you to explicitly request this version via the `Accept` header.\n\n    Accept: application/vnd.abr-ato.v1+json\n\n## Schema\nAll API access is over HTTPS, and accessed from https://api.abr.ato.gov.au. All data is sent and received as JSON. Blank fields are included.\n\n  All dates use the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format:\n\n    YYYY-MM-DD\n\n  For example: `2017-07-01` (the 1st of July 2017)\n\n  All timestamps use the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format:\n\n    YYYY-MM-DDTHH:MM:SSZ\n\n  For example: `2017-07-01T11:05:06+10:00`\n\n## Timezones\nSome requests allow for specifying timestamps or generate timestamps with time zone information. We apply the following rules, in order of priority, to determine timezone information for API calls.\n### Explicitly provide an ISO 8601 timestamp with timezone information\nFor API calls that allow for a timestamp to be specified, we use that exact timestamp.\n\n  For example: `2017-07-01T11:05:06+10:00`\n\n## Pagination\nInformation about pagination is provided in the [Link](https://tools.ietf.org/html/rfc5988#page-6) header.\n\n  For example:\n\n    Link: <https://api.abr.ato.gov.au/individuals?page=2>; rel=\"next\",\n          <https://api.abr.ato.gov.au/individuals?page=34>; rel=\"last\"\n\n`rel=\"next\"` states that the next page is `page=2`. This makes sense, since by default, all paginated queries start at page `1`. `rel=\"last\"` provides some more information, stating that the last page of results is on `page 34`. Accordingly, we have 33 more pages of information that we can consume.\n## Parameters\nMany API methods take optional parameters:\n\n    GET /individuals/1234/addresses/?addressType='Mailing'\n\nIn this example, the '1234' value is provided for the `:partyId` parameter in the path while `:addressType` is passed in the query string.\nFor POST, PATCH, PUT, and DELETE requests, parameters not included in the URL should be encoded as JSON with a Content-Type of 'application/json'.\n## Metadata\nThe API provides **metadata services** that you can use to discover information about the classifcation schemes and values used by the Registry.\n\n  For example:\n\n    GET /classifications/roles\n\n  Sample response:\n\n    [\n      {\n        \"id\": \"123e4567-e89b-12d3-a456-426655440001\",\n        \"role\": \"Director\",\n        \"roleDescription\": \"An individual responsible for managing a company's ...\",\n        \"relationship\": \"Directorship\",\n        \"reciprocalRole\": \"Company\",\n        \"reciprocalRoleDescription\": \"An incorporated legal entity.\"\n      },\n      {\n        ...\n      }\n    ]\n\n## Root Endpoint\nYou can issue a GET request to the root endpoint (also known as the service root) to get all the endpoint categories that the REST API supports:\n\n    curl https://api.abr.ato.gov.au\n\n## Authentication\nThe Business Registries API supports API Key authentication.\n\n  When you sign up for an account, you are given your first API key. You can generate additional API keys, and delete\n  API keys (as you may need to rotate your keys in the future). You authenticate to the Business Registries API by\n  providing your secret key in the request header.\n\n  **Note:** Some requests will return `404 Not Found`, instead of `403 Permission Denied`. This is to prevent the\n  accidental leakage of information to unauthorised users.\n",
      "category": "AI & Machine Learning",
      "last_updated": "2025-08-03",
      "maintainer": "ato.gov.au",
      "documentation_url": "https://ato.gov.au",
      "version": "0.0.6",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "Business Registries",
      "paths_count": 38,
      "schemas_count": 35
    }
  },
  {
    "name": "authentiq_connect_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/authentiq.io/1.0/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "Authentiq Connect OAuth 2.0 and OpenID Connect API reference.\nLearn about [Authentiq ID](https://www.authentiq.com/) or check out the [Authentiq Connect](https://developers.authentiq.com) developer documentation.\n",
      "category": "Development Tools",
      "last_updated": "2025-08-03",
      "maintainer": "Team Authentiq",
      "documentation_url": "https://developers.authentiq.com/",
      "version": "1.0",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "Authentiq Connect API",
      "paths_count": 6,
      "schemas_count": 7
    }
  },
  {
    "name": "cis_automotive_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/autodealerdata.com/1.0/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "<div style=\"\">This API provides access to our Automotive Data. Use of this API is subject to our <a href=\"https://autodealerdata.com/tos\">Terms of Service</a></div>\n&nbsp;\n<h3 style=\"\">For a quick start guide <a href=\"/APIQuickStart\">click here</a></h3>\n&nbsp;\n<div> If you signed up through RapidAPI make your test calls <a href=\"https://rapidapi.com/competitive-intelligence-solutions-llc-competitive-intelligence-solutions-llc-default/api/cis-automotive\">here</a></div>\n&nbsp;\n<div>The general workflow is to: <br/>&nbsp;<div><strong>1.</strong> Authenticate with your CIS Automotive API Keys to get a Json Web Token (JWT). Do not use RapidAPI keys.</div>\n<div><div><strong>2.</strong> Then use that token as an argument when calling other endpoints.</div>\n&nbsp;\n<div>Equivalent HTTP GET and POST methods are available for some endpoints. </div>\n&nbsp;\n<div>Endpoints may appear more than once on this page if they are associated with multiple tags. eg \"Sales Data\", \"Premium\", \"Pro Plan or Greater\" To see which endpoints are included in different\nplans look under the \"X Plan or Greater\" tags for the respective plan name.</div>\n&nbsp;\n<h3>If you signed up for our API through RapidAPI you can make your test calls <a href=\"https://rapidapi.com/competitive-intelligence-solutions-llc-competitive-intelligence-solutions-llc-default/api/cis-automotive\">on their platform</a>. \nYour RapidAPI credentials will not work on this page.</h3><h3> Do not use your RapidAPI keys on this page.</h3>\n<h3>If you signed up with us and have an account, you must first authenticate with your API Keys \nand retrieve a Json Web Token (JWT) from the /getToken endpoint to access the other endpoints.</h3> \n\n<h3>Your JWT is a required argument to all endpoints.</h3></div>",
      "category": "AI & Machine Learning",
      "last_updated": "2025-08-03",
      "maintainer": "autodealerdata.com",
      "documentation_url": "https://autodealerdata.com",
      "version": "1.0",
      "openapi_version": "3.0.2",
      "quality_score": 100,
      "is_popular": false,
      "title": "CIS Automotive API",
      "paths_count": 34,
      "schemas_count": 31
    }
  },
  {
    "name": "avaza_api_documentation",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/avaza.com/v1/swagger.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "Welcome to the autogenerated documentation & test tool for Avaza's API. <br/><br/><strong>API Security & Authentication</strong><br/>Authentication options include OAuth2 Implicit and Authorization Code flows, and Personal Access Token. All connections should be encrypted over SSL/TLS <br/><br/>You can set up and manage your api authentication credentials from within your Avaza account. (requires Administrator permissions on your Avaza account).<br/><br/> OAuth2 Authorization endpoint: https://any.avaza.com/oauth2/authorize  <br/>OAuth2 Token endpoint: https://any.avaza.com/oauth2/token<br/>Base URL for subsequent API Requests: https://api.avaza.com/ <br/><br/>Blogpost about authenticating with Avaza's API:  https://www.avaza.com/avaza-api-oauth2-authentication/ <br/>Blogpost on using Avaza's webhooks: https://www.avaza.com/avaza-api-webhook-notifications/<br/>The OAuth flow currently issues Access Tokens that last 1 day, and Refresh tokens that last 180 days<br/>The Api respects the security Roles assigned to the authenticating Avaza user and filters the data return appropriately. <br/><br><strong>Support</strong><br/>For API Support, and to request access please contact Avaza Support Team via our support chat. <br/><br/><strong>User Contributed Libraries:</strong><br/>Graciously contributed by 3rd party users like you. <br/>Note these are not tested or endorsesd by Avaza. We encourage you to review before use, and use at own risk.<br/> <ul><li> - <a target='blank' href='https://packagist.org/packages/debiprasad/oauth2-avaza'>PHP OAuth Client Package for Azava API (by Debiprasad Sahoo)</a></li></ul>",
      "category": "Development Tools",
      "last_updated": "2025-08-03",
      "maintainer": "avaza.com",
      "documentation_url": "https://avaza.com",
      "version": "v1",
      "openapi_version": "2.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "Avaza API Documentation",
      "paths_count": 58,
      "schemas_count": 132
    }
  },
  {
    "name": "bbc_nitro_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/bbc.com/1.0.0/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "BBC Nitro is the BBC's application programming interface (API) for BBC Programmes Metadata.",
      "category": "Development Tools",
      "last_updated": "2025-08-03",
      "maintainer": "Open Nitro Project",
      "documentation_url": "https://developer.bbc.co.uk/nitro",
      "version": "1.0.0",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "BBC Nitro API",
      "paths_count": 25,
      "schemas_count": 219
    }
  },
  {
    "name": "bbc_iplayer_business_layer",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/bbci.co.uk/1.0/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "The definitive iPlayer API.",
      "category": "Development Tools",
      "last_updated": "2025-08-03",
      "maintainer": "Open iBL Project",
      "documentation_url": "http://smethur.st/posts/176135860",
      "version": "1.0",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "BBC iPlayer Business Layer",
      "paths_count": 30,
      "schemas_count": 19
    }
  },
  {
    "name": "beezup_merchant_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/beezup.com/2.0/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "# The REST API of BeezUP system\n## Overview\nThe REST APIs provide programmatic access to read and write BeezUP data. \nBasically, with this API you will be able to do everything like you were with your browser on https://go.beezup.com !\n\nThe main features are:\n- Register and manage your account\n- Create and manage and share your stores with your friends/co-workers.\n- Import your product catalog and schedule the auto importation\n- Search the channels your want to use\n- Configure your channels for your catalogs to export your product information:\n    - cost and general settings\n    - category and columns mappings\n    - your will be able to create and manage your custom column\n    - put in place exlusion filters based on simple conditions on your product data\n    - override product values\n    - get product vision for a channel catalog scope\n- Analyze and optimize your performance of your catalogs on all yours channels with different type of reportings by day, channel, category and by product.\n- Automatize your optimisation by using rules!\n- And of course... Manage your orders harvested from all your marketplaces:\n    - Synchronize your orders in an uniformized way\n    - Get the available actions and update the order status\n- ...and more!\n\n## Authentication credentials\nThe public API with the base path **/v2/public** have been put in place to give you an entry point to our system for the user registration, login and lost password. The public API does not require any credentials.\nWe give you the some public list of values and public channels for our public commercial web site [www.beezup.com](http://www.beezup.com).\n\nThe user API with the base path **/v2/user** requires a token which is available on this page:\nhttps://go.beezup.com/Account/MyAccount\n\n## Things to keep in mind\n### API Rate Limits\n- The BeezUP REST API is limited to 100 calls/minute.\n\n### Media type\nThe default media type for requests and responses is application/json. Where noted, some operations support other content types. If no additional content type is mentioned for a specific operation, then the media type is application/json.\n\n### Required content type\nThe required and default encoding for the request and responses is UTF8.\n\n### Required date time format\nAll our date time are formatted in ISO 8601 format: 2014-06-24T16:25:00Z.\n\n### Base URL\nThe Base URL of the BeezUP API Order Management REST API conforms to the following template.\n\nhttps://api.beezup.com\n\nAll URLs returned by the BeezUP API are relative to this base URL, and all requests to the REST API must use this base URL template.\n\nYou can test our API on https://api-docs.beezup.com/swagger-ui\\\\\nYou can contact us on [gitter, #BeezUP/API](https://gitter.im/BeezUP/API)",
      "category": "AI & Machine Learning",
      "last_updated": "2025-08-03",
      "maintainer": "beezup.com",
      "documentation_url": "https://api-docs.beezup.com/",
      "version": "2.0",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "BeezUP Merchant API ",
      "paths_count": 195,
      "schemas_count": 834
    }
  },
  {
    "name": "betfair_exchange_streaming_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/betfair.com/1.0.1423/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "API to receive streamed updates. This is an ssl socket connection of CRLF delimited json messages (see RequestMessage & ResponseMessage)",
      "category": "AI & Machine Learning",
      "last_updated": "2025-08-03",
      "maintainer": "BDP Support",
      "documentation_url": "https://developer.betfair.com/support/",
      "version": "1.0.1423",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "Betfair: Exchange Streaming API",
      "paths_count": 1,
      "schemas_count": 26
    }
  },
  {
    "name": "budgea_api_documentation",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/biapi.pro/2.0/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "# Budgea Development Guides\n\nWelcome to **Budgea**'s documentation.\n\nThis documentation is intended to get you up-and-running with our APIs and advise on the implementation of some regulatory aspects of your application, following the DSP2's guidelines.\n\n## Getting Started\n**IMPORTANT**\nDepending on your status with regard of the DSP2 regulation, **agent** or **partner**, you may call our APIs or simply use our Webview and callbacks to get the financial data of your users.\nAs an **agent**, you are allowed to call directly our APIs and implement your own form to get the user's credentials.\nAs a **partner**, you cannot manipulate the credentials, and have to delegate this step to us through our webview.\n\nThe sections below will document how to use our APIs, make sure you have the **agent** status to do so.\nFor the **partner**, please refer to the section *Webview* and *Callbacks* of this documentation.\n\n### Overview\nYour API is a REST API which requires a communication through https to send and receive JSON documents.\nDuring your tests, we recommend to make calls to the API with curl or any other HTTP client of your choice.\nYou can watch a video demonstration on this [URL](https://asciinema.org/a/FsaFyt3WAPyDm7sfaZPkwal3V).\nFor the examples we'll use the demo API with address `https://demo.biapi.pro`, you should change that name to your API's name.\n\n### Hello World\nLet's start by calling the service `/banks` which lists all available banks.\n```\ncurl https://demo.biapi.pro/2.0/banks/\n```\nTo log in to a bank webpage, you'll need to know for a given bank, the fields your user should fill in the form.\nLet's call a  specific bank and ask for an additional resource *fields*.\n```\ncurl https://demo.biapi.pro/2.0/banks/59?expand=fields\n```\nThe response here concerns only 1 bank (since we specified an id) and the resource _Fields_ is added to the response thanks to the query parameter `expand`.\n\nTo get more interesting things done, you'll need to send authenticated requests.\n\n### Authentication\nThe way to authenticate is by passing the `Authorization: Bearer <token>` header in your request.\nAt the setup a _manage token_ have been generated, you can use this token for now, when creating your user we'll see how to generate a user's token.\n```\ncurl https://demo.biapi.pro/2.0/config \\\n  -H 'Authorization: Bearer <token>'\n```\nThis endpoint will list all the parameters you can change to adapt Budgea to your needs.\n\nWe've covered the very first calls. Before diving deeper, let's see some general information about the APIs.\n\n## Abstract\n\n### API URL\n`https://demo.biapi.pro/2.0`\n\n### Requests format\nData format: **application/x-www-form-urlencoded** or **application/json** (suggested)\n\nAdditional headers: Authorization: User's token (private)\n\n### Responses format\nData format: **application/json** ([http://www.json.org](http://www.json.org/))\nCharset: **UTF-8**\n\n### Resources\nEach call on an endpoint will return resources. The main resources are:\n| Resource            | Description                                                                                                           |\n| ---------------------|:------------------------------------------------------------------------------------------------------------------   |\n|Users                 |Represent a user                                                                                                      |\n|Connection            |A set of data used to authenticate on a website (usually a login and password). There is 1 connection for each website|\n|Account               |A bank account contained in a connection                                                                              |\n|Transaction           |An entry in a bank account                                                                                            |\n|Investment            |An asset in a bank account                                                                                            |\n\nThe chain of resources is as follow: **Users ∈ Connections ∈ Accounts ∈ Transactions or Investments**\n\n### RESTful API\n\nThis API is RESTful, which means it is stateless and each resource is accessed with an unique URI.\n\nSeveral HTTP methods are available:\n\n| Method                  | Description                    |\n| ------------------------|:-------------------------------|\n| GET /resources          | List resources                 |\n| GET /resources/{ID}     | Get a resource from its ID     |\n| POST /resources         | Create a new resource          |\n| POST /resources/{ID}    | Update a resource              |\n| PUT /resources  /{ID}   | Update a resource              |\n| DELETE /resources       | Remove every resources         |\n| DELETE /resources/{ID}  | Delete a resource              |\n\n\nEach resource can contain sub-resources, for example:\n`/users/me/connections/2/accounts/23/transactions/48`\n\n### HTTP response codes\n\n| Code        | Message               | Description                                                                                   |\n| ----------- |:---------------------:|-----------------------------------------------------------------------------------------------|\n| 200         | OK                    |Default response when a GET or POST request has succeed                                        |\n| 202         | Accepted              |For a new connection this code means it is necessary to provide complementary information (2FA)|\n| 204         | No content            |Default response when a POST request succeed without content                                   |\n| 400         | Bad request           |Supplied parameters are incorrect                                                              |\n| 403         | Forbidden             |Invalid token                                                                                  |\n| 500         | Internal Servor Error |Server error                                                                                   |\n| 503         | Service Unavailable   |Service is temporarily unavailable                                                             |\n\n### Errors management\nIn case an error occurs (code 4xx or 5xx), the response can contain a JSON object describing this error:\n```json\n{\n   \"code\": \"authFailure\",\n   \"message\": \"Wrong password\"  // Optional\n}\n```\nIf an error is displayed on the website, Its content is returned in error_message field.\nThe list of all possible errors is listed further down this page.\n\n### Authentication\nA user is authenticated by an access_token which is sent by the API during a call on one of the authentication services, and can be supplied with this header:\n`Authorization: Bearer YYYYYYYYYYYYYYYYYYYYYYYYYYY`\n\n There are two user levels:\n\n    - Normal user, which can only access to his own accounts\n    - Administrator, with extended rights\n\n### Default filters\nDuring a call to an URI which lists resources, some filters can be passed as query parameters:\n\n| Parameter   | Type      | Description                                               |\n| ----------- |:---------:|-----------------------------------------------------------|\n| offset      | Integer   |Offset of the first returned resource                      |\n| limit       | Integer   |Limit number of results                                    |\n| min_date    | Date      |Minimal date (if supported by service), format: YYYY-MM-DD |\n| max_date    | Date      |Maximal date (if supported by service), format: YYYY-MM-DD |\n\n### Extend requests\nDuring a GET on a set of resources or on a unique resource, it is possible to add a parameter expand to the request to extend relations with other resources:\n\n`GET /2.0/users/me/accounts/123?expand=transactions[category],connection`\n\n```json\n{\n   \"id\" : 123\n   \"name\" : \"Compte chèque\"\n   \"balance\" : 1561.15\n   \"transactions\" : [\n      {\n         \"id\" : 9849,\n         \"simplified_wording\" : \"HALL'S BEER\",\n         \"value\" : -513.20,\n         ...\n         \"category\" : {\n            \"id\" : 561,\n            \"name\" : \"Sorties / Bar\",\n            ...\n         }\n       },\n       ...\n   ],\n   \"id_user\" : 1,\n   \"connection\" : {\n      \"id\" : 1518,\n      \"id_bank\" : 41,\n      \"id_user\" : 1,\n      \"error\" : null,\n      ...\n   }\n}\n```\n\n### Request example\n```http\nGET /2.0/banks?offset=0&limit=10&expand=fields\nHost: demo.biapi.pro\nAccept: application/json\nAuthorization: Bearer <token>\n```\n```http\nHTTP/1.1 200 OK\nContent-Type: application/json\nContent-Length: 3026\nServer: Apache\nDate: Fri, 14 Mar 2014 08:24:02 GMT\n\n{\n   \"banks\" : [\n      {\n         \"id_weboob\" : \"bnp\",\n         \"name\" : \"BNP Paribas\",\n         \"id\" : 3,\n         \"hidden\" : false,\n         \"fields\" : [\n            {\n               \"id\" : 1,\n               \"id_bank\" : 3,\n               \"regex\" : \"^[0-9]{5,10}$\",\n               \"name\" : \"login\",\n               \"type\" : \"text\",\n               \"label\" : \"Numéro client\"\n            },\n            {\n               \"id\" : 2,\n               \"id_bank\" : 3,\n               \"regex\" : \"^[0-9]{6}$\",\n               \"name\" : \"password\",\n               \"type\" : \"password\",\n               \"label\" : \"Code secret\"\n            }\n         ]\n      },\n      ...\n   ]\n   \"total\" : 41\n}\n```\n\n### Constants\n#### List of bank account types\n| Type          |Description                        |\n| -----------   |-----------------------------------|\n| checking      |Checking account                   |\n| savings       |Savings account                    |\n| deposit       |Deposit accounts                   |\n| loan          |Loan                               |\n| market        | Market accounts                   |\n| joint         |Joint account                      |\n| card          |Card                               |\n| lifeinsurance |Life insurance accounts            |\n| pee           |Plan Épargne Entreprise            |\n| perco         |Plan Épargne Retraite              |\n| article83     |Article 83                         |\n| rsp           |Réserve spéciale de participation  |\n| pea           |Plan d'épargne en actions          |\n| capitalisation|Contrat de capitalisation          |\n| perp          |Plan d'épargne retraite populaire  |\n| madelin       |Contrat retraite Madelin           |\n| unknown       |Inconnu                            |\n\n#### List of transaction types\n\n| Type         |Description                        |\n| -----------  |-----------------------------------|\n|transfer      |Transfers                          |\n|order         |Orders                             |\n|check         |Checks                             |\n|deposit       |Cash deposit                       |\n|payback       |Payback                            |\n|withdrawal    |Withdrawal                         |\n|loan_payment  |Loan payment                       |\n|bank          |Bank fees                          |\n|card          |Card operation                     |\n|deferred_card |Deferred card operation            |\n|card_summary  |Mensual debit of a deferred card   |\n\n#### List of synchronization errors\n##### Error on Connection object\nThe error field may take one of the below values in case of error when accessing the user space.\n\n| Error                      |Description                                                                                       |\n| -----------------------    |--------------------------------------------------------------------------------------------------|\n|wrongpass                   |The authentication on website has failed                                                          |\n|additionalInformationNeeded |Additional information is needed such as an OTP                                                  |\n|websiteUnavailable          |The website is unavailable, for instance we get a HTTP 503 response when requesting the website   |\n|actionNeeded                |An action is needed on the website by the user, scraping is blocked                               |\n|SCARequired                |An SCA process must be done by updating the connection                               |\n|decoupled                  |Requires a user validation (ex: digital key)|\n|passwordExpired                   |The password has expired and needs to be changed on the website.                                                         |\n|webauthRequired                |A complete authentication process is required by update the connection via redirect                            |\n|bug                         |A bug has occurred during the synchronization. An alert has been sent to Budget Insight           |\n\n#### Error on Account object\nErrors can be filled at the account level in case we access the user's dashboard but some account related data cannot be retrieved.\nFor instance, we may not access the transactions or investments for a specific account.\nGetting an error during an account synchronization does not impact the scraping of other acccounts.\n\n| Error                      |Description                                                                                       |\n| -----------------------    |--------------------------------------------------------------------------------------------------|\n|websiteUnavailable          |The website or a page is unavailable                                                              |\n|actionNeeded                |An action is needed on the website by the user, scraping is blocked                               |\n|bug                         |A bug has occurred during the synchronization. An alert has been sent to Budget Insight           |\n\nNow you know the basics of Budgea API\n- Basic call to retrieve resources\n- Add query parameters to aplly filters\n- Expand resources\n- Authenticated calls\n\nWe're good for the basics! Now let's see how to integrate Budgea in your app and create your first user.\n\n## Integrate Budgea *(protocol or Webview)*\n### The workflow\nUsers of your application exist in the Budgea API.\nEvery User is identified by an access_token which is the shared secret between your application and our API.\n\nThe workflow is as below:\n1. The user is on your application and wants to share his bank accounts or invoices.\n2. A call is made **client side** (browser's javascript or desktop application) to create a temporarily token which will be used to make API calls.\n3. A form is built, allowing the user to select the connector to use (bank or provider, depending on context). Every connector requires different kind of credentials.\n4. A call on the API is made with the temporarily token to add a **Connection** with the credentials supplied by user.\n5. In case of success, the user chooses what bank accounts (**Account**) or subscriptions (**Subscription**) he wants to share with your application.\n6. When he validates the share, the temporarily token is transmitted to your server. This one will call the Budgea API with this token to get a permanent token.\n\n**Note**\nIn case your application works without a server (for example a desktop application), the permanent token can be obtained on the 1st step, by supplying a client_secret to /auth/init and the step 6 is omitted. To get more information, read the protocol.\n\nThere are 3 steps to integrate Budgea in your application:\n1. Provide a way for your users to share their credentials with you\n2. Get the data scraped from Budgea\n3. Be sure to follow the good practices before going into production\n\n### Get credentials from users\nYou have 2 options here:\n- Integrate the Budget Insight's Webview, a turnkey solution to get user's credentials\n- Create your own form following the protocol (must have the *agent* status)\n\n### Budgea webview\n\nThe Budgea webview complements REST API endpoints with web-based services to handle sensitive or complex operations:\n- add a connection (to a bank or a provider), or edit/repare access to a connection;\n- manage connections (add/remove/edit);\n- edit and validate bank transfers (alpha preview).\n\nUsage of the webview is mandatory if you don't hold an Agent status, since you are not allowed to use API endpoints carrying user credentials, and optional otherwise.\n\n#### Implementation guidelines\n\n##### Base URL\n\nThe base URL of all services must be customized:  \n`https://{{domain}}.biapi.pro/2.0/auth/webview/`  \n`https://{{domain}}.biapi.pro/2.0/auth/webview/{{lang}}/`  \n- `{{domain}}`: substitute with you API domain;\n- `{{lang}}`: optionally specify the language of the webview, `en` or `fr` (if not specified, an automatic redirection will be performed following the language of the browser).\n\n##### Browser integration\n\nServices available as part of the webview are designed as parameterized URLs intended to be opened in a web browser. A callback URI must be specified by callers to be notified at the end of the operation flow, similar to OAuth 2 specification.\n\nYou are encouraged to integrate web-based steps in your product following UX best practices:\n- in a web environment, perform a full-page redirect to the URL (using either [HTTP redirect](https://developer.mozilla.org/fr/docs/Web/HTTP/Status/302) or [scripting](https://developer.mozilla.org/fr/docs/Web/API/Location)), and avoid new tabs or popups;\n- in a native Android app, prefer opening the default browser or relying on [Chrome Custom Tabs](https://developer.chrome.com/multidevice/android/customtabs) to integrating a WebView;\n- in a native iOS app, prefer using a [SFSafariViewController](https://developer.apple.com/documentation/safariservices/sfsafariviewcontroller) to integrating a WKWebView.\n\n##### Callback handling\n\nMost flows redirect to a callback URI at the end of the process. Query parameters are added to the URI to identify successful or failed operations.\n\nSuccessful parameters are specific to each flow. In case of an error, the following parameters are added:\n\n| Parameter | Description |\n| - | - |\n| `error` | An lowercase string error code identifying the kind of error that occurred. When the parameter is not present, the response is successful. |\n| `error_description` | A longer string description of the error (not intended for user display). |\n\nCommon error codes include:\n\n| Code | Description |\n| - | - |\n| `access_denied` | The user explicitly cancelled the flow. |\n| `server_error` | Oops, a technical failure occurred during the process. |\n\n**Forward compatibility requirement**: Additional error codes may be added in the future to describe specific cases. When implementing error codes handling, always fallback to a generic case for unknown codes.\n\n##### Browser compatibility\n\nThe webview is designed and tested to work with browsers supported by the Angular framework:  \nhttps://angular.io/guide/browser-support\n\n##### Privacy / GDPR status\n\nThe webview itself does not use any kind of long-term data persistence mechanism such as cookies or local storage, but some authentication or authorization steps may delegate to third-party web services that may implement them.\n\n#### Configuration\n\nYou can configure the appearance and behaviour of the webview by configuring the associated *Client Application* in the console:\n\n| Key | Format | Description |\n| - | - | - |\n| `primary_color` | String | Optional. An accent color (hexadecimal string without '#' prefix) to personalize the UI elements of the webview. If absent, the default color is grey. |\n| `redirect_uri` | String | Optional. A recommended security whitelist configuration. The `redirect_uri` parameter sent to any endpoint of the webview is checked against the configuration, if any. |\n| `config.disable_connector_hints` | Boolean | Optional. This flags hides the list of most-used entries in the connector selection step. The default is `false`, i.e. the list is shown. |\n| `config.use_app_layout` | Boolean | Optional. Use this flag to enable presenting your log as an app icon. The default value is ` false`, i.e. the logo is shown in the top bar of the UI. |\n| `config.disable_accounts_pre_check` | Boolean | Optional. An optional boolean flag to prevent bank accounts to be automatically pre-checked when the user enters the activation step. The default value is ` false`, i.e. the bank accounts are pre-checked. |\n\n#### Endpoints reference\n\n##### Add connection flow\n```\nhttps://{{domain}}.biapi.pro/2.0/auth/webview/{{lang}}/connect\n```\n\nThis flow allows an end-user to add a new connection to the API. The flow handles the following steps:\n- selecting a connector;\n- authenticating & authorizing with the connector, by collecting credentials or delegating;\n- managing consent to aggregate accounts/subscriptions;\n- collecting required information for professional accounts.\n\n###### Endpoint parameters\n\n| Parameter | Description |\n| - | - |\n| `client_id` | Required. The ID of the requesting client application. You can manage client applications of your domain in the admin console. |\n| `redirect_uri` | Required. An absolute callback URI. The webview will redirect to it at the end of the flow. |\n| `code` | Optional. A user-scoped temporary code to use with the Budgea API.<br>If you don't provide a code, a new anonymous user will be created before the connection is added, and you will be returned an access token code scoped to it with the success callback. |\n| `state` | Optional. An opaque string parameter that you can use to carry state across the flow. The parameter will be set \"as is\" on the callback URI. Make sure that the `state` you provide is properly URL-encoded. |\n| `connector_ids` | Optional. A comma-separated list of connector IDs available to pick from.<br>If the parameter is omitted, all active connectors are available.<br>If you pass a single value, the user is not prompted to choose the connector.<br>This parameter is mutually exclusive with `connector_uuids`. |\n| `connector_uuids` | Optional. A comma-separated list of connector UUIDs available to pick from.<br>If the parameter is omitted, all active connectors are available.<br>If you pass a single value, the user is not prompted to choose the connector.<br>This parameter is mutually exclusive with `connector_ids`. |\n| `connector_capabilities` | Optional. A comma-separated list of capabilities to filter available connectors.<br>If the parameter is omitted, `bank` is inferred.<br>If multiple values are provided, only connectors that expose all the requested capabilities are available.<br>To request a bank connection, use `bank`.<br>To request a provider connection, use `document`. |\n| `account_ibans` | Optional. A comma-separated list of IBANs to filter accounts available for activation in a bank connection context. Other accounts will not be selectable. |\n| `account_types` | Optional. A comma-separated list of account types to filter accounts available for activation in a bank connection context. Other accounts will not be selectable. |\n| `account_usages` | Optional. A comma-separated list of account usages to filter accounts available for activation in a bank connection context. Other accounts will not be selectable. |\n\n###### Successful callback parameters\n\n| Parameter | Description |\n| - | - |\n| `connection_id` | The id of the newly created connection. Please note that when redirecting to the callback URI, the accounts and/or subscriptions are available in the API, but bank transactions or documents may still be syncing in background. |\n| `code` | Optional. If a `code` was *not* initially specified, an API code that you must exchange to obtain a permanent access token associated with the newly-created anonymous user holding the connection. The parameter is URL-encoded, make sure to handle it accordingly. |\n| `state` | Optional. Identical to the `state` parameter that was initially specified. |\n\n###### Additional error codes\n\n| Code | Description |\n| - | - |\n| `tos_declined` | The end-user refused to validate the terms of service. |\n\n##### Re-auth / edit connection credentials flow\n\n```\nhttps://{{domain}}.biapi.pro/2.0/auth/webview/{{lang}}/reconnect\n```\n\nThis flow allows an end-user to re-authenticate against a bank or a provider in order to recover an existing connection, or to completely reset credentials associated with a connection.\n\n###### Endpoint parameters\n\n| Parameter | Description |\n| - | - |\n| `client_id` | Required. The ID of the requesting client application. You can manage client applications of your domain in the admin console. |\n| `redirect_uri` | Required. An absolute callback URI. The webview will redirect to it at the end of the flow. |\n| `code` | Required. A user-scoped temporary code to use with the Budgea API. |\n| `connection_id` | Required. The id of the existing connection. |\n| `state` | Optional. An opaque string parameter that you can use to carry state across the flow. The parameter will be set \"as is\" on the callback URI. Make sure that the `state` you provide is properly URL-encoded. |\n| `reset_credentials` | Optional. In the default mode (`false`), the service will try to recover the connection and prompt the user only with outdated or transient information (new password, OTP...).<br>Set the parameter to `true` to force resetting all the credentials associated with the connection. This parameter may not apply to all connectors. |\n\n###### Successful callback parameters\n\nThis flow adds no parameter to the callback URI in case of success, except from `state`.\n\n##### Manage connections\n\n```\nhttps://{{domain}}.biapi.pro/2.0/auth/webview/{{lang}}/manage\n```\nThis flow allows an end-user to manage the connections associated with his account in the API. The user can add new connections, remove existing ones, fix connection errors, reset credentials or activate/deactivate bank accounts.\n\nSupport of `redirect_uri` in this flow is optional, as it can be integrated or presented as a terminal step, without relying on a final redirection.\n\n###### Endpoint parameters\n\n| Parameter | Description |\n| - | - |\n| `client_id` | Required. The ID of the requesting client application. You can manage client applications of your domain in the admin console. |\n| `code` | Required. A user-scoped temporary code to use with the Budgea API. |\n| `redirect_uri` | Optional. An absolute callback URI. When provided, the webview will display a close button that redirects to it. |\n| `state` | Optional. An opaque string parameter that you can use to carry state across the flow when providing a `redirect_uri`. The parameter will be set \"as is\" on the callback URI. Make sure that the `state` you provide is properly URL-encoded. |\n| `connector_capabilities` | Optional. A comma-separated list of capabilities to filter available connectors when adding a new connection.<br>If the parameter is omitted, `bank` is inferred.<br>If multiple values are provided, only connectors that expose all the requested capabilities are available.<br>To request a bank connection, use `bank`.<br>To request a provider connection, use `document`. |\n| `account_types` | Optional. A comma-separated list of account types to filter accounts available for activation on adding a new bank connection or updating existing connections. Other accounts will not be selectable. |\n| `account_usages` | Optional. A comma-separated list of account usages to filter accounts available for activation in a bank connection context. Other accounts will not be selectable. |\n\n###### Callback parameters\n\nThis flow adds no parameter to the callback URI, except from `state`.\n\n##### Execute a bank transfer (preview)\n\n**Disclaimer**: Transfer or payment services are available as a preview, protocols and parameters are subject to change in upcoming beta/final releases.\n\n```\nhttps://{{domain}}.biapi.pro/2.0/auth/webview/{{lang}}/transfer\n```\nThis flow allows an end-user to execute a bank transfer. The flow handles the following steps:\n- if the transfer is not already created, all steps to authenticate with a bank, select the recipient, the emitter account, the amount and label;\n- executing the transfer, including managing SCAs for recipient registration and/or transfer validation.\n\n###### Endpoint parameters\n\n| Parameter | Description |\n| - | - |\n| `client_id` | Required. The ID of the requesting client application. You can manage client applications of your domain in the admin console. |\n| `redirect_uri` | Required. An absolute callback URI. The webview will redirect to it at the end of the flow. |\n| `code` | Required. A user-scoped temporary code to use with the Budgea API.<br>If you don't provide a code, a new anonymous user will be created before a connection is added and the transfer is executed, and you will be returned an access token code scoped to it with the success callback. |\n| `state` | Optional. An opaque string parameter that you can use to carry state across the flow. The parameter will be set \"as is\" on the callback URI. Make sure that the `state` you provide is properly URL-encoded. |\n| `transfer_id`| Optional. The ID of an prepared transfer to be validated in the webview. The user cannot edit anything on the transfer before validation. |\n\n###### Successfull callback parameters\n\n| Parameter | Description |\n| - | - |\n| `transfer_id` | The ID of the transfer that was created and executed. |\n| `code` | Optional. If a `code` was *not* initially specified, an API code that you can exchange to obtain a permanent access token associated with the newly-created anonymous user holding the transfer. The parameter is URL-encoded, make sure to handle it accordingly. |\n| `state` | Optional. Identical to the `state` parameter that was initially specified. |\n\n###### Additional error codes\n\n| Code | Description |\n| - | - |\n| `tos_declined` | The end-user refused to validate the terms of service. |\n\n#### Migrating from v3\n\nWe provide a full backward compatibility layer with current implementations of the webview v3 to ease the transition. All endpoints remains accessible, with the same parameters and callback behaviour. Migration instructions are provided below.\n\n*The v3 compatibility mode is expected to be removed on 31 December 2019.* You should migrate your implementation a soon as possible to new endpoints and parameters.\n\n##### Add connection flow / Edit connection credentials  \n```\n/connect/select\n```\n\nThis endpoint has been superseded by `/connect` (no suffix) for adding a new connection, and `/reconnect` for resetting or updating an existing connection.\n\n| Endpoint parameter | Migration instructions |\n| - | - |\n| `client_id` | No change. |\n| `redirect_uri`, `state` | No change. |\n| `response_type` | This parameter is not used anymore. |\n| `id_connector`, `connectors` | Superseded by `connector_ids` sent to the `/connect` endpoint. |\n| `types` | Superseded by `connector_capabilities` sent to the `/connect` endpoint.<br>Use`connector_capabilities=bank` (bank connection) or `connector_capabilities=document` (provider connection). |\n| `id_connection` | Superseded by `connection_id` sent to the `/reconnect` endpoint. |\n\nPassing the code or access token as an URL fragment is no longer supported, use the `code` query parameter.\n\n| Callback parameter | Migration instructions |\n| - | - |\n| `id_connection` | Superseded by `connection_id`.<br>In the `/reconnect` flow, this parameter is not returned anymore. |\n| `code` | Still named `code`, but in the `/connect` flow the parameter is now **only** added if an anonymous user was created, i.e. the `code` parameter was **not** provided as a query parameter or fragment.<br>In the `/reconnect` flow, this parameter is not returned anymore. |\n| `state` | No change. |\n\n##### Manage connections\n\n```\n/accounts\n```\n\nThis endpoint has been superseded by `/manage`, that now fully allows users to add/remove connections, reset their credentials or recover from error states.\n\n| Endpoint parameter | Migration instructions |\n| - | - |\n| `client_id` | No change. |\n| `redirect_uri`, `state` | No change, these parameters are now optional. |\n| `response_type` | This parameter is not used anymore. |\n| `types` | Superseded by `connector_capabilities`.<br>Use`connector_capabilities=bank` (bank connection) or `connector_capabilities=document` (provider connection). |\n\nPassing the code or access token as an URL fragment is no longer supported, use the `code` query parameter.\n\n| Callback parameter | Migration instructions |\n| - | - |\n| `code` | This parameter is not returned anymore. |\n| `state` | No change. |\n\n##### Behaviour change\n\nIn v3, the `/accounts` flow used to redirect to the `redirect_uri` after a connection addition. This is no longer the case in v4, where redirection is only performed when the user explicitly closes the flow. If you need to perform actions when a connection is added or removed, you should rely on webhooks.\n\n#### Protocol\nThis section describes the protocol used to set bank and provider accounts of a user, in case you don't want to use the webview.\n\nThe idea is to call the following services client-side (with AJAX in case of a web application), to ensure the bank and providers credentials will not be sent to your servers.\n\n1. /auth/init\n```http\nPOST /auth/init\n```\n```json\n{\n   \"auth_token\" : \"fBqjMZbYddebUGlkR445JKPA6pCoRaGb\",\n   \"type\" : \"temporary\",\n   \"expires_in\" : 1800,\n   \"id_user\": 1\n}\n```\nThis service creates a temporarily token, to use in the \"Authorization\" header in next calls to the API\n\nThe returned token has a life-time of 30 minutes, and should be transfered to the API then (cf Permanent Token), so that your server can get a permanent access_token.\n\nIt is possible to generate a permanent token immediately, by calling the service with the manage_token, or by supply parameters client_id and client_secret.\n\n2. /banks or /providers\n```http\nGET /banks?expand=fields\nAuthorization: Bearer <token>\n```\n```json\n{\n   \"hidden\" : false,\n         \"charged\" : true,\n         \"name\" : \"American Express\",\n         \"id\" : 30,\n         \"fields\" : [\n            {\n               \"values\" : [\n                  {\n                     \"label\" : \"Particuliers/Professionnels\",\n                     \"value\" : \"pp\"\n                  },\n                  {\n                     \"value\" : \"ent\",\n                     \"label\" : \"Entreprises\"\n                  }\n               ],\n               \"label\" : \"Type de compte\",\n               \"regex\" : null,\n               \"name\" : \"website\",\n               \"type\" : \"list\"\n            },\n            {\n               \"type\" : \"password\",\n               \"label\" : \"Code secret\",\n               \"name\" : \"password\",\n               \"regex\" : \"^[0-9]{6}$\"\n            }\n         ],\n      },\n      ...\n   ],\n   \"total\" : 44,\n}\n```\nYou get a list of connectors, and all associated fields needed to build the form at step 3.\nYou can also use that list to show to your user, all available banks.\n\n3. /users/me/connections\nMake a POST request and supply the id_bank (ID of the chosen bank) or id_provider (ID of provider), and all requested fields as key/value parameters.\nFor example:\n```http\nPOST /users/me/connections\nAuthorization: Bearer <token>\n-F login=12345678\n-F password=123456\n-F id_bank=59\n```\nYou can get the following return codes:\n\n|Code           |Description                                                  |\n|---------------|------------------------------------------------------------ |\n|200            |The connection has succeed and has been created              |\n|202            |It is necessary to provide complementary information. This occurs on the first connection on some kind of Boursorama accounts for example, where a SMS is sent to the customer. It is necessary to ask the user to fill fields requested in the fields, and do a POST again on /users/me/connections/ID, with the connection ID in id_connection. |\n|400            |Unable to connect to the website, the field error in the JSON can be **websiteUnavailable** or **wrongpass**  |\n|403            |Invalid token                                                |\n\n4. Activate accounts\nThe accounts the user wants to aggregate must be activated before any transaction or investment is retrieved.\nSeveral accounts can be activated in 1 request by separating the account ids with commas.\n```http\nPUT /users/me/connections/<id_connection>/accounts/<id_account>?all\n```\n\n5. Permanent token\nIf the user validates the share of his accounts, it is necessary to transform the temporary code to a permanent access_token (so that the user won't expire).\n\nTo do that, make a POST request on /auth/token/access with the following parameters:\n|Parameter            |Description                                                     |\n|---------------------|----------------------------------------------------------------|\n|code                 |The temporarily token which will let you get the access_token   |\n|client_id            |The ID of your client application                               |\n|client_secret        |The secret of your client application                           |\n\n```json\nPOST /auth/token/access\n\n{\n   \"client_id\" : 17473055,\n   \"client_secret\" : \"54tHJHjvodbANVzaRtcLzlHGXQiOgw80\",\n   \"code\" : \"fBqjMZbYddebUGlkR445JKPA6pCoRaGb\"\n}\n```\n```http\nHTTP/1.1 200 OK\n\n{\n   \"access_token\" : \"7wBPuFfb1Hod82f1+KNa0AmrkIuQ3h1G\",\n   \"token_type\":\"Bearer\"\n}\n```\n\n### Update accounts\nAnother important call is when a user wants to add/remove connections to banks or providers, or to change the password on one of them, it is advised to give him a temporarily code from the permanent access_token, with the following call (using the access_token as bearer):\n```http\nPOST /auth/token/code\nAuthorization: Bearer <token>\n```\n```json\n{\n   \"code\" : \"/JiDppWgbmc+5ztHIUJtHl0ynYfw682Z\",\n   \"type\" : \"temporary\",\n   \"expires_in\" : 1800,\n}\n```\nIts life-time is 30 minutes, and let the browser to list connections and accounts, via `GET /users/me/connections?expand=accounts` for example.\n\n To update the password of a connection, you can do a POST on the *connection* resource, with the field *password* in the data. The new credentials are checked to make sure they are valid, and the return codes are the same as when adding a connection.\n\n## Getting the data (Webhooks)\nYou have created your users and their connections, now it's time to get the data.\nThere are 2 ways to retrieve it, the 2 can be complementary:\n- make regular calls to the API\n- use the webhooks (recommended)\n\n### Manual Synchronization\nIt is possible to do a manual synchronization of a user. We recommend to use this method in case the user wants fresh data after logging in.\n\nTo trigger the synchronization, call the API as below:\n`PUT /users/ID/connections`\nThe following call is blocking until the synchronization is terminated.\n\nEven if it is not recommended, it's possible to fetch synchronously new data. To do that, you can use the *expand* parameter:\n` /users/ID/connections?expand=accounts[transactions,investments[type]],subscriptions`\n```json\n{\n   \"connections\" : [\n      {\n         \"accounts\" : [\n            {\n               \"balance\" : 7481.01,\n               \"currency\" : {\n                  \"symbol\" : \"€\",\n                  \"id\" : \"EUR\",\n                  \"prefix\" : false\n               },\n               \"deleted\" : null,\n               \"display\" : true,\n               \"formatted_balance\" : \"7 481,01 €\",\n               \"iban\" : \"FR76131048379405300290000016\",\n               \"id\" : 17,\n               \"id_connection\" : 7,\n               \"investments\" : [\n                  {\n                     \"code\" : \"FR0010330902\",\n                     \"description\" : \"\",\n                     \"diff\" : -67.86,\n                     \"id\" : 55,\n                     \"id_account\" : 19,\n                     \"id_type\" : 1,\n                     \"label\" : \"Agressor PEA\",\n                     \"portfolio_share\" : 0.48,\n                     \"prev_diff\" : 2019.57,\n                     \"quantity\" : 7.338,\n                     \"type\" : {\n                        \"color\" : \"AABBCC\",\n                        \"id\" : 1,\n                        \"name\" : \"Fonds action\"\n                     },\n                     \"unitprice\" : 488.98,\n                     \"unitvalue\" : 479.73,\n                     \"valuation\" : 3520.28\n                  }\n               ],\n               \"last_update\" : \"2015-07-04 15:17:30\",\n               \"name\" : \"Compte chèque\",\n               \"number\" : \"3002900000\",\n               \"transactions\" : [\n                  {\n                     \"active\" : true,\n                     \"application_date\" : \"2015-06-17\",\n                     \"coming\" : false,\n                     \"comment\" : null,\n                     \"commission\" : null,\n                     \"country\" : null,\n                     \"date\" : \"2015-06-18\",\n                     \"date_scraped\" : \"2015-07-04 15:17:30\",\n                     \"deleted\" : null,\n                     \"documents_count\" : 0,\n                     \"formatted_value\" : \"-16,22 €\",\n                     \"id\" : 309,\n                     \"id_account\" : 17,\n                     \"id_category\" : 9998,\n                     \"id_cluster\" : null,\n                     \"last_update\" : \"2015-07-04 15:17:30\",\n                     \"new\" : true,\n                     \"original_currency\" : null,\n                     \"original_value\" : null,\n                     \"original_wording\" : \"FACTURE CB HALL'S BEER\",\n                     \"rdate\" : \"2015-06-17\",\n                     \"simplified_wording\" : \"HALL'S BEER\",\n                     \"state\" : \"parsed\",\n                     \"stemmed_wording\" : \"HALL'S BEER\",\n                     \"type\" : \"card\",\n                     \"value\" : -16.22,\n                     \"wording\" : \"HALL'S BEER\"\n                  }\n               ],\n               \"type\" : \"checking\"\n            }\n         ],\n         \"error\" : null,\n         \"expire\" : null,\n         \"id\" : 7,\n         \"id_user\" : 7,\n         \"id_bank\" : 41,\n         \"last_update\" : \"2015-07-04 15:17:31\"\n      }\n   ],\n   \"total\" : 1,\n}\n```\n\n### Background synchronizations & Webhooks\nWebhooks are callbacks sent to your server, when an event is triggered during a synchronization.\nSynchronizations are automatic, the frequency can be set using the configuration key `autosync.frequency`.\nUsing webhooks allows you to get the most up-to-date data of your users, after each synchronization.\n\nThe automatic synchronization makes it possible to recover new bank entries, or new invoices, at a given frequency.\nYou have the possibility to add webhooks on several events, and choose to receive each one on a distinct URL.\nTo see the list of available webhooks you can call the endpoint hereunder:\n```\ncurl https://demo.biapi.pro/2.0/webhooks_events \\\n  -H 'Authorization: Bearer <token>'\n```\n\nThe background synchronizations for each user are independent, and their plannings are spread over the day so that they do not overload any website.\n\nOnce the synchronization of a user is over, a POST request is sent on the callback URL you have defined, including all webhook data.\nA typical json sent to your server is as below:\n```http\nPOST /callback HTTP/1.1\nHost: example.org\nContent-Length: 959\nAccept-Encoding: gzip, deflate, compress\nAccept: */*\nUser-Agent: Budgea API/2.0\nContent-Type: application/json; charset=utf-8\nAuthorization: Bearer sl/wuqgD2eOo+4Zf9FjvAz3YJgU+JKsJ\n\n{\n   \"connections\" : [\n      {\n         \"accounts\" : [\n            {\n               \"balance\" : 7481.01,\n               \"currency\" : {\n                  \"symbol\" : \"€\",\n                  \"id\" : \"EUR\",\n                  \"prefix\" : false\n               },\n               \"deleted\" : null,\n               \"display\" : true,\n               \"formatted_balance\" : \"7 481,01 €\",\n               \"iban\" : \"FR76131048379405300290000016\",\n               \"id\" : 17,\n               \"id_connection\" : 7,\n               \"investments\" : [\n                  {\n                     \"code\" : \"FR0010330902\",\n                     \"description\" : \"\",\n                     \"diff\" : -67.86,\n                     \"id\" : 55,\n                     \"id_account\" : 19,\n                     \"id_type\" : 1,\n                     \"label\" : \"Agressor PEA\",\n                     \"portfolio_share\" : 0.48,\n                     \"prev_diff\" : 2019.57,\n                     \"quantity\" : 7.338,\n                     \"type\" : {\n                        \"color\" : \"AABBCC\",\n                        \"id\" : 1,\n                        \"name\" : \"Fonds action\"\n                     },\n                     \"unitprice\" : 488.98,\n                     \"unitvalue\" : 479.73,\n                     \"valuation\" : 3520.28\n                  }\n               ],\n               \"last_update\" : \"2015-07-04 15:17:30\",\n               \"name\" : \"Compte chèque\",\n               \"number\" : \"3002900000\",\n               \"transactions\" : [\n                  {\n                     \"active\" : true,\n                     \"application_date\" : \"2015-06-17\",\n                     \"coming\" : false,\n                     \"comment\" : null,\n                     \"commission\" : null,\n                     \"country\" : null,\n                     \"date\" : \"2015-06-18\",\n                     \"date_scraped\" : \"2015-07-04 15:17:30\",\n                     \"deleted\" : null,\n                     \"documents_count\" : 0,\n                     \"formatted_value\" : \"-16,22 €\",\n                     \"id\" : 309,\n                     \"id_account\" : 17,\n                     \"id_category\" : 9998,\n                     \"id_cluster\" : null,\n                     \"last_update\" : \"2015-07-04 15:17:30\",\n                     \"new\" : true,\n                     \"original_currency\" : null,\n                     \"original_value\" : null,\n                     \"original_wording\" : \"FACTURE CB HALL'S BEER\",\n                     \"rdate\" : \"2015-06-17\",\n                     \"simplified_wording\" : \"HALL'S BEER\",\n                     \"state\" : \"parsed\",\n                     \"stemmed_wording\" : \"HALL'S BEER\",\n                     \"type\" : \"card\",\n                     \"value\" : -16.22,\n                     \"wording\" : \"HALL'S BEER\"\n                  }\n               ],\n               \"type\" : \"checking\"\n            }\n         ],\n         \"bank\" : {\n            \"id_weboob\" : \"ing\",\n            \"charged\" : true,\n            \"name\" : \"ING Direct\",\n            \"id\" : 7,\n            \"hidden\" : false\n         },\n         \"error\" : null,\n         \"expire\" : null,\n         \"id\" : 7,\n         \"id_user\" : 7,\n         \"id_bank\" : 41,\n         \"last_update\" : \"2015-07-04 15:17:31\"\n      }\n   ],\n   \"total\" : 1,\n   \"user\" : {\n      \"signin\" : \"2015-07-04 15:17:29\",\n      \"id\" : 7,\n      \"platform\" : \"sharedAccess\"\n   }\n}\n```\nThe authentication on the callback is made with the access_token of the user (which is a shared secret between your server and the Budgea API).\n\nWhen you are in production, it is needed to define a HTTPS URL using a valid certificate, delivered by a recognized authority. If this is not the case, you can contact us to add your CA (Certificate Authority) to our PKI (Public Key Infrastructure).\n\nImportant: it is necessary to send back a HTTP 200 code, without what we consider that data is not correctly taken into account on your system, and it will be sent again at the next user synchronization.\n\n## Guidelines for production\nNow you should have integrated the API inside your application. Make sure your Webhooks URLs are in HTTPS, if so you can enable the production state of the API.\n\nTo make things great, here are some good practices, please check you have respected them:\n- You have provided to your users a way to configure their accounts\n- You have provided to your users a way to change their account passwords\n- You consider the **error** field of Connections, to alert the user in case the state is **wrongpass**\n- You map IDs of Accounts, Subscriptions, Transactions and Documents in your application, to be sure to correctly match them\n- When the deleted field is set on a bank transaction, you delete it in your database\n- You don't loop on all users to launch synchronizations, this might saturate the service\n\nIf you have questions about above points, please contact us. Otherwise, you can put into production!\n\n### Going further\nIf you want to raise the bar for your app and add features such as the ability to do transfers, get invoices, aggregate patrimony and more, please refer to the sections below.\nWe'll discuss complementary APIs building upon the aggregation, allowing for the best of financial apps.\n\n## Budgea API Pay\nThis API allows for the emition of transfers between the aggregated accounts.\nJust like the simple aggregation, BI provides a webview or a protocol to follow, to implement this feature.\n\n### API pay protocol\nThis section describes how the transfer and recipient protocol work, in case you don't want to integrate the webview.\nThe idea is to do following calls client side (with AJAX in case of a web application), so that the interaction with the Budgea API is transparent.\n\n#### Executing a transfer\n1. /auth/token/code\nIf you do calls client side, get a new temporary code for the user, from the access_token. This will prevent security issues.\n```\ncurl -d '' \\\n  https://demo.biapi.pro/2.0/auth/token/code \\\n  -H 'Authorization: Bearer <token>'\n```\n```json\n{\n   \"code\": \"/JiDppWgbmc+5ztHIUJtHl0ynYfw682Z\",\n   \"type\": \"temporary\",\n   \"expires_in\": 1800\n}\n```\nThe returned token has a life-time of 30 minutes.\n\n2. /users/me/accounts?able_to_transfer=1\nList all the accounts that can do transfers. Authenticate the call with the code you got at step 1.\n```\ncurl https://demo.biapi.pro/2.0/users/me/accounts?able_to_transfer=1 \\\n  -H 'Authorization: Bearer /JiDppWgbmc+5ztHIUJtHl0ynYfw682Z'\n```\n```json\n{\n  \"accounts\" : [\n      {\n         \"display\" : true,\n         \"balance\" : 2893.36,\n         \"id_type\" : 2,\n         \"number\" : \"****1572\",\n         \"type\" : \"checking\",\n         \"deleted\" : null,\n         \"bic\" : \"BNPAFRPPXXX\",\n         \"bookmarked\" : false,\n         \"coming\" : -2702.74,\n         \"id_user\" : 1,\n         \"original_name\" : \"Compte de chèques\",\n         \"currency\" : {\n            \"symbol\" : \"€\",\n            \"id\" : \"EUR\",\n            \"prefix\" : false\n         },\n         \"name\" : \"lol\",\n         \"iban\" : \"FR7630004012550000041157244\",\n         \"last_update\" : \"2016-12-28 12:31:04\",\n         \"id\" : 723,\n         \"formatted_balance\" : \"2893,36 €\",\n         \"able_to_transfer\" : true,\n         \"id_connection\" : 202\n      }\n   ],\n   \"total\" : 1\n}\n```\n\n3. /users/me/accounts/ID/recipients\nList all available recipients for a given account.\n```\ncurl https://demo.biapi.pro/2.0/users/me/accounts/723/recipients?limit=1 \\\n  -H 'Authorization: Bearer /JiDppWgbmc+5ztHIUJtHl0ynYfw682Z'\n```\n```json\n{\n  \"total\" : 27,\n   \"recipients\" : [\n      {\n         \"bank_name\" : \"BNP PARIBAS\",\n         \"bic\" : \"BNPAFRPPXXX\",\n         \"category\" : \"Interne\",\n         \"deleted\" : null,\n         \"enabled_at\" : \"2016-10-31 18:52:53\",\n         \"expire\" : null,\n         \"iban\" : \"FR7630004012550003027641744\",\n         \"id\" : 1,\n         \"id_account\" : 1,\n         \"id_target_account\" : 2,\n         \"label\" : \"Livret A\",\n         \"last_update\" : \"2016-12-05 12:07:24\",\n         \"time_scraped\" : \"2016-10-31 18:52:54\",\n         \"webid\" : \"2741588268268091098819849694548441184167285851255682796371\"\n      }\n   ]\n}\n```\n\n4. /users/me/accounts/ID/recipients/ID/transfers\nCreate the transfer\n```\ncurl \\\n  https://demo.biapi.pro/2.0/users/me/accounts/1/recipients/1/transfers \\\n  -H 'Authorization: Bearer /JiDppWgbmc+5ztHIUJtHl0ynYfw682Z' \\\n  -F amount=10, \\\n  -F label=\"Test virement\", \\\n  -F exec_date=\"2018-09-12\" // optional\n```\n```json\n{\n   \"account_iban\" : \"FR7630004012550000041157244\",\n   \"amount\" : 10,\n   \"currency\" : {\n      \"id\" : \"EUR\",\n      \"prefix\" : false,\n      \"symbol\" : \"€\"\n   },\n   \"exec_date\" : \"2018-09-12\",\n   \"fees\" : null\n   \"formatted_amount\" : \"10,00 €\",\n   \"id\" : 22,\n   \"id_account\" : 1,,\n   \"id_recipient\" : 1,\n   \"label\" : \"Test virement\",\n   \"recipient_iban\" : \"FR7630004012550003027641744\",\n   \"register_date\" : \"2018-09-12 10:34:59\",\n   \"state\" : \"created\",\n   \"webid\" : null\n}\n```\n\n5. /users/me/transfers/ID\nExecute the transfer\n```\ncurl \\\n  https://demo.biapi.pro/2.0/users/me/transfers/22 \\\n  -H 'Authorization: Bearer /JiDppWgbmc+5ztHIUJtHl0ynYfw682Z' \\\n  -F validated=true\n```\n```json\n{\n   \"account_iban\" : \"FR7630004012550000041157244\",\n   \"amount\" : 10,\n   \"currency\" : {\n      \"id\" : \"EUR\",\n      \"prefix\" : false,\n      \"symbol\" : \"€\"\n   },\n   \"exec_date\" : \"2016-12-19\",\n   \"fees\" : null,\n   \"fields\" : [\n      {\n         \"label\" : \"Code secret BNP Paribas\",\n         \"type\" : \"password\",\n         \"regex\" : \"^[0-9]{6}$\",\n         \"name\" : \"password\"\n      }\n   ],\n   \"formatted_amount\" : \"10,00 €\",\n   \"id\" : 22,\n   \"id_account\" : 1,\n   \"id_recipient\" : 1,\n   \"label\" : \"Test virement\",\n   \"recipient_iban\" : \"FR7630004012550003027641744\",\n   \"register_date\" : \"2016-12-19 10:34:59\",\n   \"state\" : \"created\",\n   \"webid\" : null\n}\n```\nHere, an authentication step asks user to enter his bank password. The transfer can be validated with:\n\n```\ncurl \\\n  https://demo.biapi.pro/2.0/users/me/transfers/22 \\\n  -H 'Authorization: Bearer /JiDppWgbmc+5ztHIUJtHl0ynYfw682Z' \\\n  -F validated=true \\\n  -F password=\"123456\"\n```\n```json\n{\n   \"account_iban\" : \"FR7630004012550000041157244\",\n   \"currency\" : {\n      \"id\" : \"EUR\",\n      \"prefix\" : false,\n      \"symbol\" : \"€\"\n   },\n   \"amount\" : 10,\n   \"exec_date\" : \"2016-12-19\",\n   \"fees\" : 0,\n   \"formatted_amount\" : \"10,00 €\",\n   \"id\" : 22,\n   \"id_account\" : 1,\n   \"id_recipient\" : 1,\n   \"label\" : \"Test virement\",\n   \"recipient_iban\" : \"FR7630004012550003027641744\",\n   \"register_date\" : \"2016-12-19 10:34:59\",\n   \"state\" : \"pending\",\n   \"webid\" : \"ZZ10C4FKSNP05TK95\"\n}\n```\nThe field state is changed to *pending*, telling that the transfer has been correctly executed on the bank. A connection synchronization is then launched, to find the bank transaction in the movements history. In this case, the transfer state will be changed to *done*.\n\n#### Adding a recipient\n1. /auth/token/code\nGet a temporary token for the user. Same procedure than step 1 for a transfer.\n\n2. /users/me/accounts?able_to_transfer=1\nList accounts allowing transfers. Same procedure than step 2 for a transfer.\n\n3. /users/me/accounts/ID/recipients/\nAdd a new recipient.\n```\ncurl \\\n  https://demo.biapi.pro/2.0/users/me/accounts/1/recipients \\\n  -H 'Authorization: Bearer /JiDppWgbmc+5ztHIUJtHl0ynYfw682Z' \\\n  -F iban=FR7613048379405300290000355 \\\n  -F label=\"Papa\", \\\n  -F category=\"Famille\" // optional\n```\n```json\n{\n   \"bank_name\" : \"BNP PARIBAS\",\n   \"bic\" : \"BNPAFRPPXXX\",\n   \"category\" : \"Famille\",\n   \"deleted\" : null,\n   \"enabled_at\" : null,\n   \"expire\" : \"2017-04-29 16:56:20\",\n   \"fields\" : [\n      {\n         \"label\" : \"Veuillez entrer le code reçu par SMS\",\n         \"type\" : \"password\",\n         \"regex\" : \"^[0-9]{6}$\",\n         \"name\" : \"sms\"\n      }\n   ],\n   \"iban\" : \"FR7613048379405300290000355\",\n   \"id\" : 2,\n   \"id_account\" : 1,\n   \"id_target_account\" : null,\n   \"label\" : \"Papa\",\n   \"last_update\" : \"2017-04-29 16:26:20\",\n   \"time_scraped\" : null,\n   \"webid\" : null\n}\n```\nIt is necessary to post on the object Recipient with the requested fields (here sms), until the add is validated:\n```\ncurl \\\n  https://demo.biapi.pro/2.0/users/me/accounts/1/recipients/2 \\\n  -H 'Authorization: Bearer /JiDppWgbmc+5ztHIUJtHl0ynYfw682Z' \\\n  -F sms=\"123456\"\n```\n```json\n{\n   \"bank_name\" : \"BNP PARIBAS\",\n   \"bic\" : \"BNPAFRPPXXX\",\n   \"category\" : \"Famille\",\n   \"deleted\" : null,\n   \"enabled_at\" : \"2017-05-01 00:00:00\",\n   \"expire\" : null,\n   \"iban\" : \"FR7613048379405300290000355\",\n   \"id\" : 2,\n   \"id_account\" : 1,\n   \"id_target_account\" : null,\n   \"label\" : \"Papa\",\n   \"last_update\" : \"2017-04-29 16:26:20\",\n   \"time_scraped\" : null,\n   \"webid\" : \"2741588268268091098819849694548441184167285851255682796371\"\n}\n```\nIf the field enabled_at is in the future, it means that it isn't possible yet to execute a transfer, as the bank requires to wait a validation period.\n\n### API Pay Webview\nThis section describes how to integrate the webview of the Budgea Pay API inside your application, to let your users do transfers to their recipients.\n\n#### User redirection\nTo redirect the user to the webview, it is necessary to build a URI authenticated with a temporary token.\nThis can be done from our library, or by calling the endpoint `/auth/token/code` (see the protocol section for an example).\nIf the parameter **redirect_uri** is supplied, the user will be redirected to that page once the transfer is done.\n\n#### List of pages\nHere are a list a pages you may call to redirect your user directly on a page of the process:\n|Path                                 |Description of the page                                                           |\n|-------------------------------------|----------------------------------------------------------------------------------|\n|/transfers                           |List Transfers                                                                    |\n|/transfers/accounts                  |List emitter accounts                                                             |\n|/transfers/accounts/id/recipients    |List recipients                                                                   |\n|/transfers/accounts/id/recipients/id |Initialization of a transfer between the account and the recipient                |\n|/transfers/id                        |Detail of a given transfer                                                        |\n\n## Deprecated\n\nThis section lists all the deprecated features in Budgea API. The associated date is the date of its removal.\n**Do not use them**.\n\n### Key Investments (**2019-06-24**)\n\nAdding a temporary new key \"all_investments\" that will include deleted investments in the **webhooks**.\n\n### No automatic expand on User objects (**2019-07-30**)\nIn the API responses, by default, User objects won't display the keys \"config\", \"alert_settings\" and \"invites\" anymore.\nYou will still be able to access this data by expanding the request.\nExample: GET /users/me/?expand=alert_settings,config\n\n### Renaming of \"type\" field for jwt tokens (**2019-07-30**)\nFor user's tokens in the jwt format, the \"type\" field will be renamed from \"shared_access\" to \"sharedAccess\".\n",
      "category": "AI & Machine Learning",
      "last_updated": "2025-08-03",
      "maintainer": "biapi.pro",
      "documentation_url": "https://biapi.pro",
      "version": "2.0",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "Budgea API Documentation",
      "paths_count": 110,
      "schemas_count": 56
    }
  },
  {
    "name": "1_000_000_recipe_and_grocery_list_api_v2",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/bigoven.com/partner/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "#Documentation\r\n\r\nThis is the documentation for the partner endpoint of the BigOven Recipe and Grocery List API.\r\n\r\nThe update brings with it Swagger-based documentation. [Swagger](http://swagger.io) is an emerging standard for describing REST-based APIs, and with this Swagger-compliant endpoint (above), you can make ready-to-go interface libraries for your code via [swagger-codegen](https://github.com/swagger-api/swagger-codegen). For instance, it's easy to generate libraries for Node.js, Java, Ruby, ASP.NET MVC, jQuery, php and more!\r\n\r\nYou can also try out the endpoint calls with your own api_key right here on this page. Be sure to enter your api_key above to use the \"Try it out!\" buttons on this page.\r\n\r\n##Start Here\r\n\r\nDevelopers new to the BigOven API should start with this version, not with the legacy API. We'll be making improvements to this API over time, and doing only bug fixes on the v1 API.\r\n\r\n\r\n\r\nTo pretend you're a BigOven user (for instance, to get your recently viewed recipes or your grocery list), you need to pass in Basic Authentication information in the header, just as with the v1 API. We do now require that you make all calls via https. You need to pass your api_key in with every call, though this can now be done on the header (send a request header \"X-BigOven-API-Key\" set to your api_key value, e.g., Request[\"X-BigOven-API-Key\"]=\"your-key-here\".)\r\n\r\n##Migration Notes\r\n\r\nFor existing partners, we encourage you to [migrate](https://api2.bigoven.com), and while at this writing we have no hard-and-fast termination date for the v1 API, we strongly prefer that you migrate by January 1, 2017. While the changes aren't overly complex, there are several breaking changes, including refactoring of recipe search and results and removal of support for XML. This is not a simply plug-and-play replacement to the v1 API. With respect to an exclusive focus on JSON, the world has spoken, and it prefers JSON for REST-based API's. We've taken numerous steps to refactor the API to make it more REST-compliant. Note that this v2 API will be the preferred API from this point onward, so we encourage developers to migrate to this new format. We have put together some [migration notes](/web/documentation/migration-to-v2) that we encourage you to read carefully.\r\n\r\n##Photos\r\n\r\nSee our [photos documentation](https://api2.bigoven.com/web/documentation/recipe-images). \r\n\r\nFor more information on usage of this API, including features, pricing, rate limits, terms and conditions, please visit the [BigOven API website](https://api2.bigoven.com).",
      "category": "AI & Machine Learning",
      "last_updated": "2025-08-03",
      "maintainer": "bigoven.com",
      "documentation_url": "http://api2.bigoven.com/web/documentation",
      "version": "partner",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "1,000,000+ Recipe and Grocery List API (v2)",
      "paths_count": 53,
      "schemas_count": 56
    }
  },
  {
    "name": "big_red_cloud_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/bigredcloud.com/v1/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "\r\n<div style='line-height: 30px;'>\r\n    <strong>Welcome to the Big Red Cloud API</strong><br/>\r\n    This API enables programmatic access to Big Red Cloud data.<br/>\r\n    We have used Swagger to auto generate the API documentation on this page, and it also enables direct interaction with the API in this page. <br/>\r\n    To get started, you will require an API Key - check out our guide at <a target='_blank' href='https://www.bigredcloud.com/support/generating-api-key-guide/'>https://www.bigredcloud.com/support/generating-api-key-guide/</a> for information on how to get one. <br/>\r\n    Use the  'Enter API Key' button below to enter your API key and start interacting with your Big Red Cloud data right on this page. <br/>\r\n    The API key will be stored in your browsers local storage for convenience, but you will be able to delete it at any time if you wish. <br/>\r\n    For additional information on the API, check out our support article at <a target='_blank' href='https://www.bigredcloud.com/support/api/'>https://www.bigredcloud.com/support/api/</a><br/>\r\n</div>",
      "category": "Development Tools",
      "last_updated": "2025-08-03",
      "maintainer": "bigredcloud.com",
      "documentation_url": "https://bigredcloud.com",
      "version": "v1",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "Big Red Cloud API",
      "paths_count": 72,
      "schemas_count": 152
    }
  },
  {
    "name": "billbee_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/billbee.io/v1/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "Documentation of the Billbee REST API to connect a Billbee account to external aplications.\n\n## Endpoint\n\nThe Billbee API endpoint base url is https://api.billbee.io/api/v1 \n\n## Activation\n\nYou have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.\n\n## Authorization & security\n\nBecause you can access private data with the Billbee API, every request has to be sent over https and must\n\n* Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key\n* Contain a valid user login with billbee username and api password in form of a basic auth HTTP header\n\n## Throttling\n\nEach endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.\n\nWhen you exceed these 2 calls, the API will return a HTTP 429 status code\n\n",
      "category": "AI & Machine Learning",
      "last_updated": "2025-08-03",
      "maintainer": "Billbee GmbH",
      "documentation_url": "https://www.billbee.io",
      "version": "v1",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "Billbee API",
      "paths_count": 55,
      "schemas_count": 94
    }
  },
  {
    "name": "billingo_api_v3",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/billingo.hu/3.0.7/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "This is a Billingo API v3 documentation. Our API based on REST software architectural style. API has resource-oriented URLs, accepts JSON-encoded request bodies and returns JSON-encoded responses. To use this API you have to generate a new API key on our [site](https://app.billingo.hu/api-key). After that, you can test your API key on this page.",
      "category": "Finance & Payments",
      "last_updated": "2025-08-03",
      "maintainer": "Billingo Support",
      "documentation_url": "https://support.billingo.hu/content/446136358",
      "version": "3.0.7",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "Billingo API v3",
      "paths_count": 19,
      "schemas_count": 47
    }
  },
  {
    "name": "bitbucket_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/bitbucket.org/2.0/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.",
      "category": "AI & Machine Learning",
      "last_updated": "2025-08-03",
      "maintainer": "Bitbucket Support",
      "documentation_url": "https://bitbucket.org/api",
      "version": "2.0",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "Bitbucket API",
      "paths_count": 178,
      "schemas_count": 197
    }
  },
  {
    "name": "box_platform_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/box.com/2.0.0/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "[Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.",
      "category": "Development Tools",
      "last_updated": "2025-08-03",
      "maintainer": "Box, Inc",
      "documentation_url": "https://developer.box.com",
      "version": "2.0.0",
      "openapi_version": "3.0.2",
      "quality_score": 100,
      "is_popular": false,
      "title": "Box Platform API",
      "paths_count": 161,
      "schemas_count": 179
    }
  },
  {
    "name": "rocket_services",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/britbox.co.uk/3.730.300-ref-1-39-0/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "An Orchestration Layer that takes ISL services and packages them in a more targeted way for front-end applications.\nThis in turn makes client integration easier and reduces the complexity and size of front-end applications.\n\nRocket is also customisable - allowing UI engineers to ‘remix’ the existing back-end services into something that\nbest suits the application they are developing.\n",
      "category": "General",
      "last_updated": "2025-08-03",
      "maintainer": "britbox.co.uk",
      "documentation_url": "https://britbox.co.uk",
      "version": "3.730.300-ref-1-39-0",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "Rocket Services",
      "paths_count": 100,
      "schemas_count": 153
    }
  },
  {
    "name": "bungie_net_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/bungie.net/2.18.0/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.",
      "category": "Development Tools",
      "last_updated": "2025-08-03",
      "maintainer": "Bungie.net API Support",
      "documentation_url": "https://github.com/Bungie-net/api/wiki/OAuth-Documentation",
      "version": "2.18.0",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "Bungie.Net API",
      "paths_count": 134,
      "schemas_count": 869
    }
  },
  {
    "name": "bunq_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/bunq.com/1.0/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "***UPDATE:*** *We have released a [beta version of the new bunq API documentation.](https://beta.doc.bunq.com)*\n\n***NOTICE:***  *We have updated the sandbox base url to `https://public-api.sandbox.bunq.com/v1/`. Please update your applications accordingly. Check here: <https://github.com/bunq/sdk_php/issues/149> for more info.*\n\n***PSD2 NOTICE:*** *The second Payment Services Directive (PSD2) may affect your current or planned usage of our public API, as some of the API services are now subject to a permit. Please be aware that using our public API without the required PSD2 permit is at your own risk and take notice of our updated API Terms and Conditions on <https://www.bunq.com> for more information.*\n\n# <span id=\"topic-introduction\">Introduction</span>\n\nWelcome to bunq!\n\n- The bunq API is organised around REST. JSON will be returned in almost all responses from the API, including errors but excluding binary (image) files.\n- Please configure your implementation to send its API requests to `https://public-api.sandbox.bunq.com/v1/`\n- There is a version of the [Android app](https://appstore.bunq.com/api/android/builds/bunq-android-sandbox-master.apk) that connects to the bunq Sandbox environment. To create accounts for the Sandbox app, please follow the steps in the [Android Emulator](#android-emulator) section.\n\n## <span id=\"topic-introduction-get-started\">Getting started</span>\n\nBefore you start sending API requests, you need to get an API key and activate it. API activation happens when you install the API key and link your IP address and device to it *(create an API context)*. The steps below will guide you through what you need to do to start sending custom API requests.\n\nHere is an overview of what you can use to get started with the bunq API: \n1. **Create an API key.** You can do it either in our [developer portal](https://developer.bunq.com) or in the bunq app *(Profile → Security & Settings → Developers → API keys)*. If you want to test our sandbox first, our [bunq Developer ](https://developer.bunq.com)is the best place to start.\n2. **Register a device.** A device can be a phone (private), computer or a server (public). You can register a new device by using the `POST /installation` and `POST /device-server` calls. This will activate your API key. You only need to do this once.\n3. **Open a session.** Sessions are temporary and expire after the auto-logout time set for the user account. It can be changed by the account owner in the bunq app.\n4. **Make your first call!**\n\n![bunq_API_context](https://www.bunq.com/assets/media/developer/API-context.jpg)\n\n## <span id=\"topic-introduction-versioning\">Versioning</span>\n\nDevelopments in the financial sector, changing regulatory regimes and new feature requests require us to be flexible. This means we can iterate quickly to improve the API and related tooling. Therefore, we have chosen not to attach any version numbers to the changes just yet. \n\nWe will inform you in a timely manner of any important changes we make before they are deployed on together.bunq.com. You can also [subscribe to our API newsletter](https://bunq.us8.list-manage.com/subscribe?u=c00d0d6daea4e1cf7c863d52e&id=b08680cdc7) to make sure you don't miss any important updates. \n\n# <span id=\"topic-oauth\">OAuth</span>\n\n## <span id=\"topic-oauth-what-is-oauth\">What is OAuth?</span>\n\n[OAuth 2.0](https://www.oauth.com/oauth2-servers/getting-ready/) is a protocol that will let your app connect to bunq users in a safe and easy way. Please be aware that if you will gain access to the account information of other bunq users or initiate a payment for them, [you may require a PSD2 permit](https://beta.doc.bunq.com/other/faq#can-we-use-the-bunq-api-to-offer-services-to-third-parties).\n\n## <span id=\"topic-oauth-get-started-with-oauth-for-bunq\">Get started with OAuth for bunq</span>\n\nTo initiate authorization into the bunq user accounts, you need to create an OAuth Client and register at least 1 redirect URL for it. \n\nYou can have 1 OAuth Client at a time. Reuse your OAuth credentials for every authorization request. \n\nThe list of steps below will help you to get started:\n\n1. Register an OAuth Client by creating an app in [bunq Developer](https://developer.bunq.com/portal)_._\n2. Add one or more Redirect URLs.\n3. Get your `client_id` and `secret` from your app information tab in [bunq Developer](https://developer.bunq.com/portal).\n4. Redirect your users to the [OAuth authorization request URL](#oauth-authorization-request).\n5. If the user accepts the authorization request, they will be redirected to the previously specified `redirect_uri` with an authorization `code` parameter.\n6. Use the [token endpoint](#oauth-token-exchange) to exchange the authorization `code` for an `access_token`.\n7. Use the `access_token` as a normal API Key. Open a session or use [our SDKs](https://github.com/bunq) to get started.\n\nYou can set up an OAuth Client and add redirect URLs to it using the dedicated endpoints too. Follow the flow below to do it programmatically.\n\nℹ️ As a PSD2 user, you cannot log in to the bunq app. You need to follow the flow below to register an OAuth Client for your application.\n\n![bunq_OAuth_credentials](https://www.bunq.com/assets/media/developer/create-oauth-credentials.jpg)\n\n## <span id=\"topic-oauth-what-can-my-apps-do-with-oauth\">What can my apps do with OAuth?</span>\n\nWe decided to launch OAuth with a default permission that allows you to perform the following actions:\n- read and create Monetary Accounts;\n- read Payments & Transactions;\n- create Payments between Monetary Accounts of the same user;\n- create Draft-Payments (the user will need to approve the payment using the bunq app);\n- assign a Monetary account to a Card;\n- read, create and manage Cards;\n- read and create Request-Inquiries\n- read Request-Responses.\n\nAs a PSD2-licensed developer, you are limited to the permission scopes of your role.\n\n## <span id=\"topic-oauth-authorization-request\">Authorization request</span>\n\nYour web or mobile app should redirect users to the following URL:\n\n`https://oauth.bunq.com/auth`\n\nThe following parameters should be passed:\n\n- `response_type` - bunq supports the authorization code grant, provide `code` as parameter (required)\n- `client_id` - your Client ID, get it from the bunq app (required)\n- `redirect_uri` - the URL you wish the user to be redirected after the authorization, make sure you register the Redirect URL in the bunq app (required)\n- `state` - a unique string to be passed back upon completion (optional)\n\nUse `https://oauth.sandbox.bunq.com/auth` in the sandbox environment.\n\n**Authorization request example:**\n\n```\nhttps://oauth.bunq.com/auth?response_type=code\n&client_id=1cc540b6e7a4fa3a862620d0751771500ed453b0bef89cd60e36b7db6260f813\n&redirect_uri=https://www.bunq.com\n&state=594f5548-6dfb-4b02-8620-08e03a9469e6\n```\n\n**Authorization request response:**\n\n```\nhttps://www.bunq.com/?code=7d272be434a75933f40c13d56aef6c31496005b653074f7d6ac57029d9995d30\n&state=594f5548-6dfb-4b02-8620-08e03a9469e6\n\n```\n\n![bunq_OAuth_authorization_token_exchange.jpg](https://www.bunq.com/assets/media/developer/Authorization-token-exchange.jpg)\n\n## <span id=\"topic-oauth-token-exchange\">Token exchange</span>\n\nIf the authorization request is accepted by the user, you get the authorization `code`_._ Exchange it for an `access_token`.\n\nMake a `POST` call to `https://api.oauth.bunq.com/v1/token` . Pass the following parameters as `GET` variables:\n\n- `grant_type` - the grant type used, `authorization_code` for now (required)\n- `code` -  the authorization code received from bunq (required)\n- `redirect_uri` - the same Redirect URL used in the authorisation request (required)\n- `client_id` - your Client ID (required)\n- `client_secret` - your Client Secret (required)\n\nUse `https://api-oauth.sandbox.bunq.com/v1/token` in the sandbox environment.\n\n**Token request example:**\n\n```\nhttps://api.oauth.bunq.com/v1/token?grant_type=authorization_code\n&code=7d272be434a75933f40c13d56aef6c31496005b653074f7d6ac57029d9995d30\n&redirect_uri=https://www.bunq.com/\n&client_id=1cc540b6e7a4fa3a862620d0751771500ed453b0bef89cd60e36b7db6260f813\n&client_secret=184f969765f6f74f53bf563ae3e9f891aec9179157601d25221d57f2f1151fd5\n```\n\nNote: The request should only contain URL parameters. No body is expected.\n\n**Example successful response:**\n\n```json\n{\n    \"access_token\": \"8baec0ac1aafca3345d5b811042feecfe0272514c5d09a69b5fbc84cb1c06029\",\n    \"token_type\": \"bearer\",\n    \"state\": \"594f5548-6dfb-4b02-8620-08e03a9469e6\"\n}\n```\n\n**Example error response:**\n\n```json\n{\n    \"error\": \"invalid_grant\",\n    \"error_description\": \"The authorization code is invalid or expired.\"\n}\n```\n\n## <span id=\"topic-oauth-whats-next\">What's next?</span>\n\nTo start sending calls to the account of the user who has accepted your authorization request, create an API context for the `access_token` you have received as the result of the token exchange. The `access_token` can be used as a normal API key. Please continue with [Authentication](#authentication).\n\n**NOTE:** When connecting to a bunq user's account using OAuth, you create a new user \\(`userApiKey`\\) that has its own `id` and `access_token` . When sending a request on behalf of a user connected to your app via OAuth,  use the `id` of `userApiKey`  as `userId` and the item `id`s of the bunq user \\(`grantedByUser`\\).\n\n**Example of a successful request URL:**\n\n```text\nhttps://api.bunq.com/user/{userApiKey's userId}/monetary-account/{grantedByUser's monetary-accountId}/payment\n```\n\nWhen calling `GET /user/{userID}`, you might expect to get `UserPerson` or `UserCompany`. Instead, you will get the `UserApiKey` object, which contains references to both the user that requested access *(you)* and the user that granted access *(the bunq user account that you connected to)*. \n\n![bunq_OAuth UserApiKey](https://blobscdn.gitbook.com/v0/b/gitbook-28427.appspot.com/o/assets%2F-LbhJLuxCAKl5yUuS74T%2F-LuhS4YOAX9bwW1eGYF8%2F-LuhnlwEcVXtLVk6846Z%2FUserApiKey%20creation%20(3).jpg?alt=media&token=d1f212a2-3105-4f0e-a980-34b04a12998a)\n\n## <span id=\"topic-oauth-using-the-connect-button\">Using the Connect button</span>\n\nAll good? Ready to connect to your bunq users? Refer to our style guide and use the following assets when implementing the **Connect to bunq** button.\n\n- [Style guide](https://bunq.com/info/oauth-styleguide)\n- [Connect button assets](https://bunq.com/info/oauth-connect-buttons)\n\nVisit us on together.bunq.com, share your creations, ask question and build your very own bunq app!\n\n# <span id=\"topic-authentication\">Authentication</span>\n\n- All requests must use HTTPS. HTTP calls will fail. \n- You should use SSL Certificate Pinning and Hostname Verification to ensure your connection with bunq is secure.\n- The auto logout time that you set in the app applies to all your sessions including the API ones. If a request is made 30 minutes before a session expires, the session will automatically be extended.\n- We use extra signing on top of HTTPS encryption that you must implement yourself if you are not using the SDKs.\n\nℹ️ *We use asymmetric cryptography for signing requests and encryption.*\n- The client (you) and the server (bunq) must have a pair of keys: a private key and a public key. You need to pre-generate your own pair of 2048-bit RSA keys in the PEM format aligned with the PKCS #8 standard.\n- The parties (you and bunq) exchange their public keys in the first step of the API context creation flow. All the following requests must be signed by both your application and the server. Pass your signature in the `X-Bunq-Client-Signature` header, and the server will return its signature in the `X-Bunq-Server-Signature` header.\n\n## <span id=\"topic-authentication-device-registration\">Device registration</span>\n\nBefore you can start calling the bunq API, you must activate your API key, which covers the following steps:\n* register your API key, device, and IP address\\(es\\) _\\(only once to activate your API key\\);_\n* create a session via `POST /session-server`. \n\nWe call this sequence of steps \"creating an API context.\" \n\nIf you are using OAuth to access a user account, you need to create an API context for the `access_token` you receive upon [authorization token exchange](https://doc.bunq.com/#/oauth) too. \n\n### <span id=\"topic-authentication-device-registration-using-our-sdks\">Using our SDKs</span>\n\n1. Go to our [GitHub](https://github.com/bunq) page.\n2. Choose the SDK in your language of choice.\n3. Find and use the part dedicated to creating an API context.\n\n[Run Tinker](https://developer.bunq.com/tinker-command-line-banking) to see a sample project using bunq SDKs in action.\n\n\n### <span id=\"topic-authentication-device-registration-using-our-api\">Using our API directly</span>\n\n1. Create an _Installation_ by calling `POST v1/installation` and passing your pre-generated public key. You will receive an installation _Token._ Use it when making the two following API calls.\n2. Create a _DeviceServer_ via `POST v1/device-server`. Provide a description and a secret \\(API key in this case\\).\n3. Create a _SessionServer_ by executing `POST v1/session-server`. You will receive an authentication _Token._ Use it in the API requests in this active session.​\n\n[Import our Postman collection](https://github.com/bunq/postman) to see our pre-setup API context creation calls. It will automatically generate and pre-fill everything in the API calls that create context so you can inspect the process.\n\n### <span id=\"topic-authentication-device-registration-ip-addresses\">IP addresses</span>\n\nWhen using a standard API Key the DeviceServer and Installation that are created in this process are bound to the IP address they are created from. Afterwards it is only possible to add IP addresses via the Permitted IP endpoint.\n\nUsing a Wildcard API Key gives you the freedom to make API calls from any IP address after the POST device-server. You can switch to a Wildcard API Key by tapping on “Allow All IP Addresses” in your API Key menu inside the bunq app. You can also programatically switch to a Wildcard API Key by passing your current ip and a `*` (asterisk) in the `permitted_ips` field of the device-server POST call. E.g: `[\"1.2.3.4\", \"*\"]`.\n\n# <span id=\"topic-psd2\">Connect as a PSD2 service provider</span>\n\nAs a service provider, either an Account Information Service Provider (AISP), Payment Initiation Service Provider (PISP), or Card Based Payment Instrument Issuer (CBPII), you have obtained or are planning to obtain a license from your local supervisor. You will need your unique eIDAS certificate number to start using the PSD2-compliant bunq API on production.\n\nWe accept pseudo certificates in the sandbox environment so you could test the flow. You can generate a test certificate using the command below.\n\n⚠️ Make sure to include AISP and/or PISP in the name to generate a certificate with the roles.\n\n```\nopenssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 -nodes -subj '/CN=My App PISP AISP/C=NL'\n```\n\n## <span id=\"topic-psd2-register-as-a-service-provider\">Register as a service provider</span>\n\nBefore you can read the information on bunq users or initiate payments, you need to register a PSD2 account and receive credentials that will enable you to access the bunq user accounts.\n\n1. Execute `POST v1/installation` and get your installation *Token* with a unique random key pair.\n1. Use the installation *Token* and your unique PSD2 certificate to call `POST v1/payment-service-provider-credential`. This will register your software. \n1. Receive your API key in return. It will identify you as a PSD2 bunq API user. You will use it to start an OAuth flow. The session will last 90 days. After it closes, start a new session using the same API key.\n1. Register a device by using `POST v1/device-server` using the API key for the secret and passing the installation *Token* in the `X-Bunq-Client-Authentication` header. \n1. Create your first session by executing `POST v1/session-server`. Provide the installation *Token* in the `X-Bunq-Client-Authentication` header. You will receive a session *Token*. Use it in any following request in the `X-Bunq-Client-Authentication` header.\n\n**NOTE.** The first session will last 1 hour. Start a new session within 60 minutes.\n\n![bunq_PSD2_API_context](https://www.bunq.com/assets/media/developer/Creating-API-context-as-a-PSD2-user-REVISED.jpg)\n\n## <span id=\"topic-psd2-register-your-applicaton\">Register your OAuth application</span>\n\nBefore you can start authenticating on behalf of a bunq user, you need to get *Client ID* and *Client Secret*, which will identify you in authorization requests to the user accounts.\n\n1. Call `POST /v1/user/{userID}/oauth-client` to create an OAuth Client.\n2. Add a redirect URL to the OAuth Client via `POST /user/{userID}/oauth-client/{oauth-clientID}/callback-url`.\n3. Call `GET /v1/user/{userID}/oauth-client/{oauth-clientID}`. We will return your _Client ID_ and _Client Secret_.\n4. You are ready to [initiate authorization requests](#oauth-authorization-request).\n\nThe flow below will guide you through the full OAuth connection process. Note that you only need to create OAuth credentials once.\n\n![bunq_full_OAuth_flow](https://www.bunq.com/assets/media/developer/AuthorizationOAuth-Flow.jpg)\n\n## <span id=\"topic-psd2-access-user-accounts-as-an-aisp\">Access user accounts as an AISP</span>\n\nAs an AISP, you are allowed to authenticate in a user’s account and access \\(read\\) the following account information:\n\n1. legal name\n2. IBAN\n3. nationality\n4. card validity data\n5. transaction history\n6. account balance\n\nTo read the user's information, you need to establish a connection with their bunq account. You can do it using an [authorization request](#oauth-authorization-request). Once a bunq user has confirmed the authorization request and you have done the [token exchange](#oauth-token-exchange), you can activate the Access Token \\(use it as an API key\\).\n\nToken activation happens when you create an API context \\(install it and link your IP adrress and device to it\\). See the [OAuth](https://beta.doc.bunq.com/basics/oauth) page for the full flow illustration.\n\nAn active Access Token allows you to communicate with the bunq user’s account. You can use it to start a session to interact with the monetary accounts the user allows you to access.\n\n![bunq_AISP](https://www.bunq.com/assets/media/developer/AISP.jpg)\n\n## <span id=\"topic-psd2-initiate-payments-as-a-pisp\">Make payments as a PISP</span>\n\nAs a PISP, you are allowed to authenticate in a user’s account with the following permissions:\nread account information \\(via`GET /user`\\):\n   * legal name;\n   * IBAN;\n2. initiate payments \\(create draft payments via either  `POST /user/{userID}/monetary-account/{monetary-accountID}/draft-payment` or `POST /user/{userID}/payment-service-provider-draft-payment`\\) and read their statuses;\n3. confirm that the account balance is sufficient for covering the payment \\(via`POST /user/{userID}/confirmation-of-funds`\\).\n\nThe bunq API provides endpoints for different scenarios of the implementation of the payment initiation functionality. In particular, as a PISP user, you can build applications that initiate and authorize one-off or multiple incoming payments. Depending on the use case you are intending to deploy, you might need to initiate the OAuth authorization either before or after the payment initiation.  \n\n### <span id=\"topic-psd2-initiate-multiple-payments-as-a-pisp\">Authorization of multiple (scheduled) payments</span>\n\nIt is possible to initiate payments from a bunq user's account having previously established an OAuth connection between your application and the bunq user's account. The bunq user will receive push notifications for each initiated payment.\n\nOnce a bunq user has [confirmed they want to make payments via your application](https://beta.doc.bunq.com/psd2/connect-as-a-psd2-service-provider#register-your-application), you can initiate the payment confirmation flow.\n\n1. Create a draft payment via `POST /user/{userID}/monetary-account/{monetary-accountID}/draft-payment`passing the following parameters:\n   * `monetary-accountId and userId` (`userApiKey`'s `id`; see [OAuth](https://beta.doc.bunq.com/basics/oauth#user-id-vs-item-ids) for more information) in the endpoint URL;\n   * the customer’s email address, phone number, or IBAN in the `counterparty_alias` field of the request body.\n2. If the user confirms their intent to make the payment, bunq carries out the transaction.\n3. Check the status of the payment via `GET /user/{userID}/monetary-account/{monetary-accountID}/draft-payment` using the draft payment `id` parameter returned in the previous step. \n\n![bunq_PISP](https://www.bunq.com/assets/media/developer/Payment-initiation-1.1-universal.jpg)\n\n### <span id=\"topic-psd2-initiate-single-payments-as-a-pisp\">Single payment authorization</span>\n\nIt is possible to initiate payments having only the IBAN of the payer using `POST /user/{userID}/payment-service-provider-draft-payment`.  In this case, the bunq user will accept the payment along with the authorization request. No additional push notifications are sent to the user. \n\n1. Collect the bunq user's IBAN (and name) in the UI of your application.\n2. Create a draft payment via `POST /user/{userID}/payment-service-provider-draft-payment`. \n3. Initiate an [authorization request.](https://beta.doc.bunq.com/basics/oauth#authorization-request) Upon the QR-code scan, the bunq user will see and be able to either accept or reject the payment authorization request.\n4. Check the status of the payment.\n\n![bunq_PISP_single_payment](https://www.bunq.com/assets/media/developer/Payment-initiation-1.0.jpg)\n\n## <span id=\"topic-psd2-confirm-available-funds-as-a-cbpii\">Confirm available funds as a CBPII</span>\n\nAs a CBPII, you are allowed to authenticate in a user’s account to validate the availability of funds for the payment in question. \n\n1. Collect an alias for the bunq user's account (their name and IBAN, email address, or phone number).\n2. Check the availability of funds via `POST /user/{userID}/confirmation-of-funds` passing the following information:\n   * your `userId`;\n   * the amount of money needed for the payment;\n   * the name of the bunq user and the IBAN of the account (email address or phone number pointing at the user are also possible).\n\n# <span id=\"topic-signing\">Signing</span>\n⚠️ **NOTE:**  We deprecated the signing of the entire API request (the URL, headers and body). You only need to sign the request body. Requests with full request signatures are no longer validated.\n\nWe are legally required to protect our users and their data from malicious attacks and intrusions. That is why we beyond having a secure https connection, we use [asymmetric cryptography](https://en.wikipedia.org/wiki/Public-key_cryptography) for signing requests that create a session or payment. The use of signatures ensures the data is coming from the trusted party and was not modified after sending and before receiving.\n\nRequest body signing is only mandatory for the following operations: \n- open a session;\n- create a payment;\n- create a scheduled payment;\n- any other operation that executes a payment such as the following:\n\t- accept a draft payment;\n\t- accept a scheduled payment;\n\t- accept a draft scheduled payment;\n\t- accept a payment request.\n\nYou will know that the API call must be encrypted if you get the 466 error code. \n\nThe signing mechanism is implemented in our [SDKs](https://github.com/bunq) so if you are using them you don't have to worry about the details described below.\n\nThe signatures are created using the SHA256 cryptographic hash function and included (encoded in base 64) in the `X-Bunq-Client-Signature` request header and `X-Bunq-Server-Signature` response header. The data to sign is the following:\n\n- For requests: the body only.\n- For responses: the body only.\n\nFor signing requests, the client must use the private key corresponding to the public key that was sent to the server in the installation API call. That public key is what the server will use to verify the signature when it receives the request. In that same call the server will respond with a server side public key, which the client must use to verify the server's signatures. The generated RSA key pair must have key lengths of 2048 bits and adhere to the PKCS #8 standard.\n\n## <span id=\"topic-signing-request-signing-example\">Request signing example</span>\n\nConsider the following request, a `POST` to `/v1/user/126/monetary-account/222/payment` (the JSON is formatted with newlines and indentations to make it more readable):\n\n<table>\n    <thead>\n        <tr>\n            <th>Header</th>\n            <th>Value</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>Cache-Control:</td>\n            <td>no-cache</td>\n        </tr>\n        <tr>\n            <td>User-Agent:</td>\n            <td>bunq-TestServer/1.00 sandbox/0.17b3</td>\n        </tr>\n        <tr>\n            <td>X-Bunq-Client-Authentication:</td>\n\n<td>f15f1bbe1feba25efb00802fa127042b54101c8ec0a524c36464f5bb143d3b8b</td>\n        </tr>\n    </tbody>\n</table>\n\n```json\n{\n\t\"amount\": {\n\t\t\"value\": \"12.50\",\n\t\t\"currency\": \"EUR\"\n\t},\n\t\"counterparty_alias\": {\n\t\t\"type\": \"EMAIL\",\n\t\t\"value\": \"bravo@bunq.com\"\n\t},\n\t\"description\": \"Payment for drinks.\"\n}\n```\n\nLet's sign that request. First create a variable `$dataToSign` containing the body of the request:\n\n```json\n{\n    \"amount\": {\n        \"value\": \"12.50\",\n        \"currency\": \"EUR\"\n    },\n    \"counterparty_alias\": {\n        \"type\": \"EMAIL\",\n        \"value\": \"bravo@bunq.com\"\n    },\n    \"description\": \"Payment for drinks.\"\n}\n```\nNext, create the signature of `$dataToSign` using the SHA256 algorithm and the private key `$privateKey` of the Installation's key pair. In PHP, use the following to create a signature. The signature will be passed by reference into `$signature`.\n\n`openssl_sign($dataToSign, $signature, $privateKey, OPENSSL_ALGO_SHA256);`\n\nEncode the resulting `$signature` using base64, and add the resulting value to the request under the `X-Bunq-Client-Signature` header. You have just signed your request, and can send it!\n\n## <span id=\"topic-signing-response-verifying-example\">Response verifying example</span>\n\nThe response to the previous request is as follows (the JSON is formatted with newlines and indentations to make it more readable):\n\n<table>\n    <thead>\n        <tr>\n            <th>Header</th>\n            <th>Value</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>Access-Control-Allow-Origin:</td>\n            <td>*</td>\n        </tr>\n        <tr>\n            <td>Content-Type:</td>\n            <td>application/json</td>\n        </tr>\n        <tr>\n            <td>Date:</td>\n            <td>Thu, 07 Apr 2016 08:32:04 GMT</td>\n        </tr>\n        <tr>\n            <td>Server:</td>\n            <td>APACHE</td>\n        </tr>\n        <tr>\n            <td>Strict-Transport-Security:</td>\n            <td>max-age=31536000</td>\n        </tr>\n        <tr>\n            <td>Transfer-Encoding:</td>\n            <td>chunked</td>\n        </tr>\n        <tr>\n            <td>X-Bunq-Client-Response-Id:</td>\n            <td>89dcaa5c-fa55-4068-9822-3f87985d2268</td>\n        </tr>\n        <tr>\n            <td>X-Bunq-Client-Request-Id:</td>\n            <td>57061b04b67ef</td>\n        </tr>\n        <tr>\n            <td>X-Bunq-Server-Signature:</td>\n            <td>ee9sDfzEhQ2L6Rquyh2XmJyNWdSBOBo6Z2eUYuM4bAOBCn9N5vjs6k6RROpagxXFXdGI9sT15tYCaLe5FS9aciIuJmrVW/SZCDWq/nOvSThi7+BwD9JFdG7zfR4afC8qfVABmjuMrtjaUFSrthyHS/5wEuDuax9qUZn6sVXcgZEq49hy4yHrV8257I4sSQIHRmgds4BXcGhPp266Z6pxjzAJbfyzt5JgJ8/suxgKvm/nYhnOfsgIIYCgcyh4DRrQltohiSon6x1ZsRIfQnCDlDDghaIxbryLfinT5Y4eU1eiCkFB4D69S4HbFXYyAxlqtX2W6Tvax6rIM2MMPNOh4Q==</td>\n        </tr>\n        <tr>\n            <td>X-Frame-Options:</td>\n            <td>SAMEORIGIN</td>\n        </tr>\n    </tbody>\n</table>\n\n```json\n{\n\t\"Response\": [\n\t\t{\n\t\t\t\"Id\": {\n\t\t\t\t\"id\": 1561\n\t\t\t}\n\t\t}\n\t]\n}\n```\nWe need to verify that this response was sent by the bunq server and not from a man-in-the-middle:\n- Create a `$dataToSign` variable containing the body of the request.\n\n**NOTE:** We started to only sign the response body on April 28, 2020. Please make sure you validate our new response signature.\n\nSo for our example above the response to sign will look like this:\n\n```\n{\"Response\":[{\"Id\":{\"id\":1561}}]}\n```\nNow, verify the signature of `$dataToVerify` using the SHA256 algorithm and the public key `$publicKey` of the server. In PHP, use the following to verify the signature.\n\n`openssl_sign($dataToVerify, $signature, $publicKey, OPENSSL_ALGO_SHA256);`\n\n## <span id=\"topic-signing-troubleshooting\">Troubleshooting</span>\n\nIf you get an error telling you \"The request signature is invalid\", please check the following:\n\n- There are no redundant characters (extra spaces, trailing line breaks, etc.) in the data to sign.\n- Make sure the body is appended to the data to sign exactly as you're adding it to the request.\n- You have added the full body to the data to sign.\n- You use the data to sign to create a SHA256 hash signature.\n- You have base64 encoded the SHA256 hash signature before adding it to the request under `X-Bunq-Client-Signature`.\n\n# <span id=\"topic-headers\">Headers</span>\n\nHTTP headers allow your client and bunq to pass on additional information along with the request or response.\n\nWhile this is already implemented in our [SDKs](https://github.com/bunq), please follow these instructions to make sure you set appropriate headers for calls if using bunq API directly.\n\n## <span id=\"topic-headers-request-headers\">Request headers</span>\n\n### <span id=\"topic-headers-request-headers-mandatory-request-headers\">Mandatory request headers</span>\n\n#### Cache-Control\n\n`Cache-Control: no-cache`\n\nThe standard HTTP Cache-Control header is required for all requests.\n\n#### User-Agent\n\n`User-Agent: bunq-TestServer/1.00 sandbox/0.17b3`\n\nThe User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.\n\n#### X-Bunq-Client-Signature\n\n**⚠️ UPCOMING CHANGE:** Header and URL signature will stop being validated on April 28, 2020. Please [sign the request body](https://doc.bunq.com/#/signing) only.\n\n`X-Bunq-Client-Signature: XLOwEdyjF1d+tT2w7a7Epv4Yj7w74KncvVfq9mDJVvFRlsUaMLR2q4ISgT+5mkwQsSygRRbooxBqydw7IkqpuJay9g8eOngsFyIxSgf2vXGAQatLm47tLoUFGSQsRiYoKiTKkgBwA+/3dIpbDWd+Z7LEYVbHaHRKkEY9TJ22PpDlVgLLVaf2KGRiZ+9/+0OUsiiF1Fkd9aukv0iWT6N2n1P0qxpjW0aw8mC1nBSJuuk5yKtDCyQpqNyDQSOpQ8V56LNWM4Px5l6SQMzT8r6zk5DvrMAB9DlcRdUDcp/U9cg9kACXIgfquef3s7R8uyOWfKLSNBQpdVIpzljwNKI1Q`\n\n\n#### X-Bunq-Client-Authentication\n\n`X-Bunq-Client-Authentication: 622749ac8b00c81719ad0c7d822d3552e8ff153e3447eabed1a6713993749440`\n\nThe authentication *token* is used to authenticate the source of the API call. It is required by all API calls except for `POST /v1/installation`. \n\nIt is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call:\n- Pass the **installation *Token*** you get in the response to the `POST /installation` call in the `/device-server` and `/session-server` calls.\n- Pass the **session *Token*** you get in the response to the `POST /session-server` call in all the other calls.\n\n### <span id=\"topic-headers-request-headers-otpional-request-headers\">Optional request headers</span>\n\n#### X-Bunq-Language\n\n`X-Bunq-Language: en_US`\n\n`en_US` is the default language setting for responses and error descriptions.\n\nThe X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.\n\nCurrently only the languages en_US and nl_NL are supported. Anything else will default to en_US.\n\n#### X-Bunq-Region\n\n`X-Bunq-Region: en_US`\n\n`en_US` is the default region for localization formatting.\n\nThe X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.\n\n#### X-Bunq-Client-Request-Id\n\n`X-Bunq-Client-Request-Id: a4f0de`\n\nThis header has to specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.\n\n#### X-Bunq-Geolocation\n\n`X-Bunq-Geolocation: 4.89 53.2 12 100 NL`\n\n`X-Bunq-Geolocation: 0 0 0 0 000` *(if no geolocation is available or known)*\n\nThis header has to specify the geolocation of the device. It makes it possible for bunq to map the geolocation with the payment.\n‌\nThe format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.\n\n### <span id=\"topic-headers-request-headers-attachment-headers\">Attachment headers</span>\n\n#### Content-Type\n\n`Content-Type: image/jpeg`\n\nThis header should be used when uploading an attachment to pass its MIME type. Supported types are: image/png, image/jpeg and image/gif.\n\n#### X-Bunq-Attachment-Description\nX-Bunq-Attachment-Description: Check out these cookies.\nThis header should be used when uploading an Attachment's content to give it a description.\n\n## <span id=\"topic-response-headers\">Response headers</span>\n\n### <span id=\"topic-response-headers-all-responses\">All Responses</span>\n\n####  X-Bunq-Client-Request-Id\n\n`X-Bunq-Client-Request-Id: a4f0de`\n\nThe same ID that was provided in the request's X-Bunq-Client-Request-Id header. Is included in the response (and request) signature, so can be used to ensure this is the response for the sent request.\n\n#### X-Bunq-Client-Response-Id\n\n`X-Bunq-Client-Response-Id: 76cc7772-4b23-420a-9586-8721dcdde174`\n\nA unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.\n\n#### X-Bunq-Server-Signature\n\n`X-Bunq-Server-Signature: XBBwfDaOZJapvcBpAIBT1UOmczKqJXLSpX9ZWHsqXwrf1p+H+eON+TktYksAbmkSkI4gQghw1AUQSJh5i2c4+CTuKdZ4YuFT0suYG4sltiKnmtwODOFtu1IBGuE5XcfGEDDSFC+zqxypMi9gmTqjl1KI3WP2gnySRD6PBJCXfDxJnXwjRkk4kpG8Ng9nyxJiFG9vcHNrtRBj9ZXNdUAjxXZZFmtdhmJGDahGn2bIBWsCEudW3rBefycL1DlpJZw6yRLoDltxeBo7MjgROBpIeElh5qAz9vxUFLqIQC7EDONBGbSBjaXS0wWrq9s2MGuOi9kJxL2LQm/Olj2g==`\n\nThe server's signature for this response. See the signing page for details on how to verify this signature.\n\n### <span id=\"topic-response-headers-warning-header\">Warning header</span>\n\n#### X-Bunq-Warning\n\n`X-Bunq-Warning: \"You have a negative balance. Please check the app for more details.\"`\n\nUsed to inform you on situations that might impact your bunq account and API access.\n\n# <span id=\"topic-errors\">Errors</span>\n\nFamiliar HTTP response codes are used to indicate the success or failure of an API request.\n\nGenerally speaking, codes in the 2xx range indicate success, while codes in the 4xx range indicate an error having to do with provided information (e.g. a required parameter was missing, insufficient funds, etc.).\n\nFinally, codes in the 5xx range indicate an error with bunq servers. If this is the case, please stop by the support chat and report it to us.\n\n## <span id=\"topic-errors-response-codes\">Response codes</span>\n\n<table>\n    <thead>\n        <tr>\n            <th>Code</th>\n            <th>Error</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>200</td>\n            <td>OK</td>\n            <td>Successful HTTP request</td>\n        </tr>\n        <tr>\n            <td>399</td>\n            <td>NOT MODIFIED</td>\n            <td>Same as a 304, it implies you have a local cached copy of the data</td>\n        </tr>\n        <tr>\n            <td>400</td>\n            <td>BAD REQUEST</td>\n            <td>Most likely a parameter is missing or invalid</td>\n        </tr>\n        <tr>\n            <td>401</td>\n            <td>UNAUTHORISED</td>\n            <td>Token or signature provided is not valid</td>\n        </tr>\n        <tr>\n            <td>403</td>\n            <td>FORBIDDEN</td>\n            <td>You're not allowed to make this call</td>\n        </tr>\n        <tr>\n            <td>404</td>\n            <td>NOT FOUND</td>\n            <td>The object you're looking for cannot be found</td>\n        </tr>\n        <tr>\n            <td>405</td>\n            <td>METHOD NOT ALLOWED</td>\n            <td>The method you are using is not allowed for this endpoint</td>\n        </tr>\n        <tr>\n            <td>429</td>\n            <td>RATE LIMIT</td>\n            <td>Too many API calls have been made in a too short period</td>\n        </tr>\n        <tr>\n            <td>466</td>\n            <td>REQUEST SIGNATURE REQUIRED</td>\n            <td>Request signature is required for this operation.</td>\n        </tr>\n        <tr>\n            <td>490</td>\n            <td>USER ERROR</td>\n            <td>Most likely a parameter is missing or invalid</td>\n        </tr>\n        <tr>\n            <td>491</td>\n            <td>MAINTENANCE ERROR</td>\n            <td>bunq is in maintenance mode</td>\n        </tr>\n        <tr>\n            <td>500</td>\n            <td>INTERNAL SERVER ERROR</td>\n            <td>Something went wrong on bunq's end</td>\n        </tr>\n    </tbody>\n</table>\n\nAll errors 4xx code errors will include a JSON body explaining what went wrong.\n\n## <span id=\"topic-errors-rate-limits\">Rate limits</span>\n\nIf you are receiving the error 429, please make sure you are sending requests at rates that are below our rate limits.\n\nOur rate limits per IP address per endpoint:\n\n- GET requests: 3 within any 3 consecutive seconds\n- POST requests: 5 within any 3 consecutive seconds\n- PUT requests: 2 within any 3 consecutive seconds\n- Callbacks: 2 callback URLs per notification category\n\nWe have a lower rate limit for `/session-server`: 1 request within 30 consecutive seconds.\n\n# <span id=\"topic-api-conventions\">API conventions</span>\n\nMake sure to follow these indications when using the bunq API or get started with our SDKs.\n\n## <span id=\"topic-api-conventions-responses\">Responses</span>\n\nAll JSON responses have one top level object. In this object will be a Response field of which the value is always an array, even for responses that only contain one object.\n\nExample response body\n\n```json\n{\n\t\"Response\": [\n\t\t{\n\t\t\t\"DataObject\": {}\n\t\t}\n\t]\n}\n```\n\n## <span id=\"topic-api-conventions-errors\">Errors</span>\n\n- Error responses also have one top level Error object.\n- The contents of the array will be a JSON object with an error_description and error_description_translated field.\n- The error_description is an English text indicating the error and the error_description_translated field can be shown to end users and is translated into the language from the X-Bunq-Language header, defaulting to en_US.\n- When using bunq SDKs, error responses will be always raised in form of an exception.\n\nExample response body\n```json\n{\n\t\"Error\": [\n\t\t{\n\t\t\t\"error_description\": \"Error description\",\n\t\t\t\"error_description_translated\": \"User facing error description\"\n\t\t}\n\t]\n}\n```\n\n## <span id=\"topic-api-conventionsobject-type-indications\">Object Type indications</span>\n\nWhen the API returns different types of objects for the same field, they will be nested in another JSON object that includes a specific field for each one of them. Within bunq SDKs a BunqResponse object will be returned as the top level object.\n\nIn this example there is a field content, which can have multiple types of objects as value such as — in this case — ChatMessageContentText. Be sure to follow this convention or use bunq SDKs instead.\n\n```json\n{\n\t\"content\": {\n\t\t\"ChatMessageContentText\": {\n\t\t\t\"text\": \"Hi! This is an automated security message. We saw you just logged in on an My Device Description. If you believe someone else logged in with your account, please get in touch with Support.\"\n\t\t}\n\t}\n}\n```\n\n## <span id=\"topic-api-conventions-time-formats\">Time formats</span>\n\nTimes and dates being sent to and from the API are in UTC. The format that should be used is `YYYY-MM-DD hh:mm:ss.ssssss`, where the letters have the meaning as specified in ISO 8601. For example: `2017-01-13 13:19:16.215235`.\n\n# <span id=\"topic-callbacks\">Callbacks</span>\n\nCallbacks are used to send information about events on your bunq account to a URL of your choice, so that you can receive real-time updates.\n\n## <span id=\"topic-callbacks-notification-filters\">Notification Filters</span>\n\nTo receive notifications for certain activities on a bunq account, you have to create notification filters. It is possible to send the notifications to a provided URL and/or the user’s phone as push notifications.\n\nUse the `notification-filter-push` resource to create and manage push notification filters. Provide the type of events you want to receive notifications about in the `category` field. \n\n```json    \n{\n   \"notification_filters\":[\n      {\n         \"category\":\"SCHEDULE_RESULT\"\n      }\n   ]\n}\n```\n\nUse the `notification-filter-url` resource to create and manage URL notification filters. The callback URL you provide in the `notification_target` field must use HTTPS. \n\n```json\n{\n   \"notification_filters\":[\n      {\n         \"category\":\"PAYMENT\",\n         \"notification_target\":\"{YOUR_CALLBACK_URL}\"\n      }\n   ]\n}\n```\n\n### <span id=\"topic-callbacks-notification-filters-callback-categories\">Callback categories</span>\n\n<table>\n    <thead>\n        <tr>\n            <th>Category</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>BILLING</td>\n            <td>notifications for all bunq invoices</td>\n        </tr>\n        <tr>\n            <td>CARD_TRANSACTION_SUCCESSFUL</td>\n            <td>notifications for successful card transactions</td>\n        </tr>\n        <tr>\n            <td>CARD_TRANSACTION_FAILED</td>\n            <td>notifications for failed card transaction</td>\n        </tr>\n        <tr>\n            <td>CHAT</td>\n            <td>notifications for received chat messages</td>\n        </tr>\n        <tr>\n            <td>DRAFT_PAYMENT</td>\n            <td>notifications for creation and updates of draft payments</td>\n        </tr>\n        <tr>\n            <td>IDEAL</td>\n            <td>notifications for iDEAL-deposits towards a bunq account</td>\n        </tr>\n        <tr>\n            <td>SOFORT</td>\n            <td>notifications for SOFORT-deposits towards a bunq account</td>\n        </tr>\n        <tr>\n            <td>MUTATION</td>\n            <td>notifications for any action that affects a monetary account’s balance</td>\n        </tr>\n\t<tr>\n            <td>OAUTH</td>\n            <td>notifications for revoked OAuth connections</td>\n        </tr>\n        <tr>\n            <td>PAYMENT</td>\n            <td>notifications for payments created from, or received on a bunq account (doesn’t include payments that result out of paying a Request, iDEAL, Sofort or Invoice). Outgoing payments have a negative value while incoming payments have a positive value</td>\n        </tr>\n        <tr>\n            <td>REQUEST</td>\n            <td>notifications for incoming requests and updates on outgoing requests</td>\n        </tr>\n        <tr>\n            <td>SCHEDULE_RESULT</td>\n            <td>notifications for when a scheduled payment is executed</td>\n        </tr>\n        <tr>\n            <td>SCHEDULE_STATUS</td>\n            <td>notifications about the status of a scheduled payment, e.g. when the scheduled payment is updated or cancelled</td>\n        </tr>\n        <tr>\n            <td>SHARE</td>\n            <td>notifications for any updates or creation of Connects (ShareInviteBankInquiry)</td>\n        </tr>\n        <tr>\n            <td>TAB_RESULT</td>\n            <td>notifications for updates on Tab payments</td>\n        </tr>\n        <tr>\n            <td>BUNQME_TAB</td>\n            <td>notifications for updates on bunq.me Tab (open request) payments</td>\n        </tr>\n        <tr>\n            <td>SUPPORT</td>\n            <td>notifications for messages received from us through support chat</td>\n        </tr>\n    </tbody>\n</table>\n\n### <span id=\"topic-callbacks-notification-filters-mutation-category\">Mutation category</span>\n\nA Mutation is a change in the balance of a monetary account. So, for each payment-like object, such as a request, iDEAL-payment or a regular payment, a Mutation is created. Therefore, the `MUTATION` category can be used to keep track of a monetary account's balance.\n\n### <span id=\"topic-callbacks-notification-filters-receiving-callbacks\">Receiving callbacks</span>\n\nCallbacks for the sandbox environment will be made from different IP's at AWS.  \nCallbacks for the production environment will be made from `185.40.108.0/22`.\n\n*The IP addresses might change*. We will notify you in a timely fashion if such a change would take place.\n\n### <span id=\"topic-callbacks-notification-filters-retry-mechanism\">Retry mechanism</span>\n\nWhen the execution of a callback fails (e.g. if the callback server is down or the response contains an error) it is tried again for a maximum of 5 times, with an interval of one minute between each try. If your server is not reachable by the callback after the 6th total try, the callback is not sent anymore.\n\n### <span id=\"topic-callbacks-notification-filters-removing-callbacks\">Removing callbacks</span>\n\nTo remove callbacks for an object, send a PUT request to the *user-person*, *user-company*, *monetary-account* or *cash-register* resource with the `notification_filters` field of the JSON request body unset.\n```\n{\n    \"notification_filters\": []\n}\n```\n\n## <span id=\"topic-callbacks-certificate-pinning\">Certificate pinning</span>\n\nWe recommend you use certificate pinning as an extra security measure. With certificate pinning, we check the certificate of the server on which you want to receive callbacks against the pinned certificate that has been provided by you and cancel the callback if that check fails.\n\n### <span id=\"topic-callbacks-certificate-pinning-how-to-set-up-certificate-pinning\">How to set up certificate pinning</span>\n\nRetrieve the SSL certificate of your server using the following command:\n\n1. `openssl s_client -servername www.example.com -connect www.example.com:443 < /dev/null | sed -n \"/-----BEGIN/,/-----END/p\" > www.example.com.pem`\n2. `POST` the certificate to the certificate-pinned endpoint.\n\nNow every callback that is made will be checked against the pinned certificate that you provided. Note that if the SSL certificate on your server expires or is changed, our callbacks will fail.\n\n# <span id=\"topic-pagination\">Pagination</span>\n\nIn order to control the size of the response of a `LIST` request, items can be paginated. A `LIST` request is a request for every one of a certain resources, for instance all payments of a certain monetary account `GET /v1/user/1/monetary-account/1/payment`). You can decide on the maximum amount of items of a response by adding a `count` query parameter with the number of items you want per page to the URL. For instance:\n\n`GET /v1/user/1/monetary-account/1/payment?count=25`\n\nWhen no `count` is given, the default count is set to 10. The maximum `count` you can set is 200.\n\nWith every listing, a `Pagination` object will be added to the response, containing the URLs to be used to get the next or previous set of items. The URLs in the Pagination object can be used to navigate through the listed resources. The Pagination object looks like this given a count of 25:\n\n```json\n{\n    \"Pagination\": {\n        \"future_url\": null,\n        \"newer_url\": \"/v1/user/1/monetary-account/1/payment?count=25&newer_id=249\",\n        \"older_url\": \"/v1/user/1/monetary-account/1/payment?count=25&older_id=224\"\n    }\n}\n```\n\nThe `newer_url` value can be used to get the next page. The `newer_id` is always the ID of the last item in the current page. If `newer_url` is `null`, there are no more recent items before the current page.\n\nThe `older_url` value can be used to get the previous page. The `older_id` is always the ID of the first item in the current page. If `older_url` is `null`, there are no older items after the current page.\n\nThe `future_url` can be used to refresh and check for newer items that didn't exist when the listing was requested. The `newer_id` will always be the ID of the last item in the current page. `future_url` will be `null` if `newer_id` is not also the ID of the latest item.\n\n# <span id=\"topic-sandbox\">Sandbox</span>\n*The sandbox base URL is https://public-api.sandbox.bunq.com/v1/*\n\nWe do not use real money and do not allow external transactions in the sandbox environment. \n\n## Sandbox user accounts\nYou need to create a sandbox user to test the bunq API. The easiest way to do it is by using [our developer portal](https://developer.bunq.com/):\n1. Log in using your bunq account or [create a free developer account](https://developer.bunq.com/portal/signup) with sandbox-only access.\n1. Go to Sandbox Users.\n1. Generate up to 5 users.\n1. Use the sandbox API key to create an API context and/or use the user credentials to log in to the [sandbox bunq app](https://doc.bunq.com/#/android-emulator).\n\n### Alternative ways to generate sandbox API keys\nThere are 3 other ways you can generate a bunq sandbox API key:\n* connect to [Tinker](https://lexy.gitbook.io/bunq/quickstart/tinker) *(it will also return login credentials for the sandbox app)*;\n* create it in the [sandbox app](https://doc.bunq.com/#/android-emulator) *(you need to be logged in as a sandbox user)*;\n* call the sandbox user endpoints directly, using [our Postman collection](https://github.com/bunq/postman), or by running a cURL command (change `sandbox-user-person` to `sandbox-user-company` to generate a business user):\n\n```\ncurl https://public-api.sandbox.bunq.com/v1/sandbox-user-person -X POST --header \"Content-Type: application/json\" --header \"Cache-Control: none\" --header \"User-Agent: curl-request\" --header \"X-Bunq-Client-Request-Id: $(date)randomId\" --header \"X-Bunq-Language: nl_NL\" --header \"X-Bunq-Region: nl_NL\" --header \"X-Bunq-Geolocation: 0 0 0 0 000\"\n```\n\n⚠️ **NOTE:** An API key can only be assigned to an IP within 1 hour after its creation. After the 1 hour, it will become invalid if not assigned. API keys that are created via the sandbox app are wiped with each sandbox reset.\n\nOnce you have a sandbox API key, create more sandbox users to use as test customer accounts, and start playing with the API. \n\nThe sandbox base URL is https://public-api.sandbox.bunq.com/v1/.\n\n## Sandbox money\nWithout money, it's not always sunny in the sandbox world. Fortunately, getting money on the bunq sandbox is easy. All you need to do is ask Sugar Daddy for it.\n\nSend a `POST v1/request-inquiry` request passing sugardaddy@bunq.com  in the counterparty_alias field. Specify the type for the alias and set the `allow_bunqme` field. Request up to €500 at a time.\n```\n{\n    \"amount_inquired\": {\n        \"value\": \"100\",\n        \"currency\": \"EUR\"\n    },\n    \"counterparty_alias\": {\n        \"type\": \"EMAIL\",\n        \"value\": \"sugardaddy@bunq.com\",\n        \"name\": \"Sugar Daddy\"\n    },\n    \"description\": \"You're the best!\",\n    \"allow_bunqme\": false\n}\n```\n\n# <span id=\"topic-android-emulator\">Android Emulator</span>\n\nIn case you do not own an Android device on which you can run our Sandbox app for end-to-end testing, you can set up an emulator to run the bunq Sandbox app for Android.\n\n## Things you will need\n\n- The [bunq Sandbox App APK](https://appstore.bunq.com/api/android/builds/bunq-android-sandbox-master.apk) that's optimised for emulating;\n- [Android Studio](https://developer.android.com/studio/index.html).\n\n## Starting the Android Virtual Device (AVD) Manager\n\n1. Open Android Studio.\n2. From the top menu, select “Tools” > \"Android\" > \"AVD Manager\".\n\n## Setting up a new virtual device\n\n1. Start the wizard by clicking on \"+ Create Virtual Device\".\n2. Select a device (recommendation: \"Pixel 5.0\" or \"Nexus 6\") and press \"Next\".\n3. Select an x86 system image (recommendation: Nougat, API Level 25, Android 7.1.1 with Google APIs) and press \"Next\". The image needs to have Google Play Services 10.0.1 or higher.\n4. In the bottom left corner, select \"Show Advanced Settings\".\n5. Scroll to \"Memory and Storage\".\n6. Change \"Internal Storage\" to \"2048 MB\".\n7. Change \"SD card\" to \"200 MB\".\n8. Press \"Finish\".\n\n## Starting the virtual device\n\n1. On the right side under \"Actions\", select the green \"Play\" button.\n2. Wait for the device to boot, this may take a few minutes.\n\n## Installing the bunq Sandbox App APK\n\n1. Open the command line.\n2. Navigate to your Android SDK platform tools directory (e.g. `cd ~/Library/Android/sdk/platform-tools` on macOS).\n3. Make sure that the virtual device is started and has fully booted.\n4. Run `./adb install ~/Downloads/bunq-android-sandboxEmulator-public-api.apk`, this may take a few minutes, and should finish with \"Success\".\n\n## Creating an account or logging in\n\n1. Create a sandbox account in the [developer portal](https://developer.bunq.com/).\n1. Log in to the sandbox app using the sandbox user credentials.\n\nℹ️ *You will be asked to verify your phone number when you open the app for the first time. Sandbox does not send actual SMS messages. Enter any valid phone number and use the default verification code `992266`*. \n\nIf you couldn't generate a sandbox account in the developer portal, use Tinker:\n1. Install [Tinker](https://beta.doc.bunq.com/quickstart/tinker).\n1. Run `tinker/user-overview` to create a sandbox account. The output of the command will include the login credentials for the sandbox account.\n\n⚠️ **NOTE:** It is **not** possible to create accounts using the regular signup in the app, bunq is not reviewing Sandbox applications.\n\n# <span id=\"topic-moving-to-production\">Moving to Production</span>\n\nHave you tested your bunq integration to the fullest and are you now ready to introduce it to the world? Then the time has come to move it to a production environment!\n\nTo get started you'll need some fresh API keys for the production environment, which you can create via your bunq app. You can create these under \"Profile\" by tapping the \"Security\" menu. We do, however, highly recommend using a standard API Key instead of a Wildcard API Key. The former is significantly safer and it protects you from intrusions and possible attacks.\n\nThere's only a few things to do before your beautiful bunq creation can be moved to production. You're going to have to change your API Key and redo the sequence of calls to open a session.\n\nThe bunq Public API production environment is hosted at `https://api.bunq.com`.\n\nDo you have any questions or remarks about the process, or do you simply want to show off with your awesome creations? Don't hesitate to drop us a line on [together.bunq.com](https://together.bunq.com).\n\nPlease be aware that if you will gain access to account information of other bunq users or initiate a payment for them, you  maybrequire a PSD2 permit.\n\n# <span id=\"topic-quickstart-opening-a-session\">Quickstart: Opening a Session</span>\n\n## <span id=\"topic-quickstart-opening-a-session-goal\">Goal</span>\n\nSo, you want to start using the bunq API, awesome! To do this, you have to open a session in which you will be making those calls.\n\n## <span id=\"topic-quickstart-opening-a-session-getting-an-api-key\">Getting an API key</span>\n\nTo connect to the API, you have to make sure you have received an API key. \n\n**For production:**\n1. create an app in the [developer portal](http://developer.bunq.com/), or\n1. generate it in the bunq app *(Profile → Security & Settings → Developers → API keys)*.\n\n**For sandbox**\nYou can use one of the following ways:\n- create a sandbox user in the [developer portal](http://developer.bunq.com/);\n- generate an API key in the [sandbox app](#android-emulator) *(Profile → Security & Settings → Developers → API keys)*;\n- get an API key from [Tinker](https://beta.doc.bunq.com/quickstart/tinker);\n- run a cURL request: `curl https://public-api.sandbox.bunq.com/v1/sandbox-user-person -X POST --header \"Content-Type: application/json\" --header \"Cache-Control: none\" --header \"User-Agent: curl-request\" --header \"X-Bunq-Client-Request-Id: $(date)randomId\" --header \"X-Bunq-Language: nl_NL\" --header \"X-Bunq-Region: nl_NL\" --header \"X-Bunq-Geolocation: 0 0 0 0 000\"`. Use `sandbox-user-company` to generate a business user.\n\nNote that production API key is only usable on production and sandbox key is only usable on sandbox. Sandbox key has a `sandbox_` prefix while production key does not have any noticeable prefixes.\n\n## <span id=\"topic-quickstart-opening-a-session-call-sequence\">Call sequence</span>\n\nThe calls you need to perform to set up a session from scratch are the following:\n\n### <span id=\"topic-quickstart-opening-a-session-call-sequence-post-installation\">1. POST installation</span>\n\nEach call needs to be signed with your own private key. An Installation is used to tell the server about the public key of your key pair. The server uses this key to verify your subsequent calls.\n\nStart by generating a 2048-bit RSA key pair. You can find examples by looking at the source code of the sdk's located at github.\n\n#### Headers\n\nOn the headers page you can find out about the mandatory headers. Take care that if you are in the sandbox environment, you set an `Authorization` header. Specific to the `POST /installation` call, you shouldn't use the `X-Bunq-Client-Authentication` or the `X-Bunq-Client-Signature` headers.\n\n#### Body\n\nPost your public key to the Installation endpoint (use `\\n` for newlines in your public key).\n\n#### Response\n\nSave the Installation token and the bunq API's public key from the response. This token is used in the `Authentication` header to register a `DeviceServer` and to start a `SessionServer`. The bunq API's public key should be used to verify future responses received from the bunq API.\n\n### <span id=\"topic-quickstart-opening-a-session-call-sequence-post-device-server\">2. POST device-server</span>\n\nFurther calls made to the server need to come from a registered device. `POST /device-server` registers your current device and the IP address(es) it uses to connect to the bunq API.\n\n#### Headers\n\nUse the token you received from `POST /installation` in the `X-Bunq-Client-Authentication` header. Make sure you sign your call, passing the call signature in `X-Bunq-Client-Signature` header.\n\n#### Body\n\nFor the secret, use the API key you received. If you want to create another API key, you can do so in the bunq sandbox app (or production app for the production environment). Login, go to Profile > Security and tap 'API keys'. The freshly created API key can be assigned to one or multiple IP addresses using `POST device-server` within 4 hours before becoming invalid. As soon as you start using your API key, it will remain valid until the next sandbox reset.   For the secret, use the API key you received.\n\n### <span id=\"topic-quickstart-opening-a-session-call-sequence-post-session-server\">3. POST session-server</span>\n\nTo make any calls besides `installation` and `device-server`, you need to open a session.\n\n#### Headers\n\nUse the token you received from `POST /installation` in the `X-Bunq-Client-Authentication` header. Make sure you sign your call, passing the call signature in `X-Bunq-Client-Signature` header.\n\n#### Body\n\nFor the secret, use the API key you received.\n\n#### Response\n\nThe token received in the response to `POST /session-server` should be used to authenticate your calls in this session. Pass this session's token in the `X-Bunq-Client-Authentication` header on every call you make in this session.\n\n# <span id=\"topic-quickstart-payment-request\">Quickstart: Payment Request</span>\n\n## <span id=\"topic-quickstart-payment-request-goal\">Goal</span>\n\nYou want to offer bunq payments on a website or in an application.\n\n## <span id=\"topic-quickstart-payment-request-scenario\">Scenario</span>\n\nIn this use case the consumer and the merchant both have a bunq account. The consumer wants to pay with bunq and enters their alias in the bunq payment field at checkout. The merchant sends the request for payment to the consumer when the consumer presses enter. The consumer agrees to the request in the bunq mobile app and the merchant has immediate confirmation of the payment. Please be aware that if you will gain access to account information of other bunq users or initiate a payment for them, you require a PSD2 permit.\n\n## <span id=\"topic-quickstart-payment-request-before-you-start\">Before you start</span>\n\nMake sure that you have opened a session and that for any call you make after that, you pass the session’s token in the X-Bunq-Client-Authentication header.\n\n## <span id=\"topic-quickstart-payment-request-call-sequence\">Call Sequence</span>\n\nThe consumer is at checkout and selects the bunq payment method. This would be a logical time to open a session on the bunq server.\n\n### <span id=\"topic-quickstart-payment-request-call-sequence-list-monetary-account\">1. LIST monetary-account</span>\n\nWhen a request for payment is accepted, the money will be deposited on the bank account the request for payment is connected to. Let’s start by finding all your available bank accounts. Pick one of them to make the request for payment with and save its `id`.\n\n### <span id=\"topic-quickstart-payment-request-call-sequence-post-monetary-account-attachment\">2. POST monetary-account attachment (optional)</span>\n\nOptionally, you can attach an image to the request for payment.\n\n#### Headers\nMake sure you set the `Content-Type` header to match the MIME type of the image. It’s also required you pass a description of the image via the `X-Bunq-Attachment-Description` header.\n\n#### Body\nThe payload of this request is the binary representation of the image file. Do not use any JSON formatting.\n\n#### Response\nSave the `id` of the posted attachment. You’ll need it to attach it to the request for payment.\n\n### <span id=\"topic-quickstart-payment-request-call-sequence-post-request-inquiry\">3. POST request-inquiry</span>\n\nNext, create a request inquiry. A request inquiry is the request for payment that your customer can respond to by accepting or rejecting it.\n\n#### Body\n\nPass the customer’s email address, phone number or IBAN in the `counterparty_alias`. Make sure you set the correct `type` for the alias, depending on what you pass. When providing an IBAN, a name of the `counterparty_alias` is required. You can provide the `id` of the created attachment.\n\n#### Response\n\nYou will receive the `id` of the created request inquiry in the response. Save this `id`. You will need it to check if the customer has responded to the request yet.\n\n### <span id=\"topic-quickstart-payment-request-call-sequence-get-request-inquiry\">4. GET request-inquiry</span>\n\nAfter you’ve sent the request for payment, its status can be checked.\n\n#### Response\n\nWhen the `status` is `ACCEPTED`, the customer has accepted and paid the request, and you will have received the money on the connected monetary account. If the `status` is `REJECTED`, the customer did not accept the request.\n\n# <span id=\"topic-quickstart-create-a-tab-payment\">Quickstart: Create a Tab payment</span>\n\n## <span id=\"topic-quickstart-create-a-tab-payment-goal\">Goal</span>\n\nYou will create a tab that can be paid once by a single user, a so called TagUsageSingle, and explore three different ways to make the Tab visible to your customers:\n\n- QR code from the CashRegister\n- QR code from the Tab.\n\n## <span id=\"topic-quickstart-create-a-tab-payment-before-you-start\">Before you start</span>\n\nMake sure that you have opened a session and that for any call you make after that, you pass the session’s token in the `X-Bunq-Client-Authentication` header.\n\n## <span id=\"topic-quickstart-create-a-tab-payment-call-sequence\">Call sequence</span>\n\n### <span id=\"topic-quickstart-create-a-tab-payment-call-sequence-post-attachment-public\">1. POST attachment-public</span>\n\nStart by creating an attachment that will be used for the avatar for the cash register.\n\n#### Header\n\nMake sure you set the `Content-Type` header to match the MIME type of the image. It is also required you pass a description of the image via the `X-Bunq-Attachment-Description` header.\n\n#### Body\n\nThe payload of this request is the binary representation of the image file. Do not use any JSON formatting.\n\n#### Response\n\nSave the `uuid` of the posted attachment. You'll need it to create the avatar in the next step.\n\n### <span id=\"topic-quickstart-create-a-tab-payment-call-sequence-post-avatar\">2. POST avatar</span>\n\nMake an avatar using the public attachment you've just created.\n\n#### Body\n\nThe payload of this request is the `uuid` of the attachment public.\n\n#### Response\n\nIn response, you’ll receive the UUID of the avatar created using the attachment. Save this UUID. You’ll use it as the avatar for the cash register you're about to create.\n\n### <span id=\"topic-quickstart-create-a-tab-payment-call-sequence-list-monetary-account\">3. LIST monetary-account</span>\n\nGet a listing of all available monetary accounts. Choose one, and save the id of the monetary account you want your cash register to be connected to. Each paid tab for the cash register will transfer the money to this account.\n\n### <span id=\"topic-quickstart-create-a-tab-payment-call-sequence-post-cash-register\">4a. POST cash-register</span>\n\nCreate a cash register. Use the `id` of the monetary account you want to connect the cash register to in the URL of the request.\n\n#### Body\n\nIn the body provide the `uuid` of the avatar you created for this cash register. Also make sure to provide a unique name for your cash register. Set the status to `PENDING_APPROVAL`.\n\n#### Response\n\nThe response contains the `id` of the cash register you created. Save this `id`. You will need it to create subsequent tabs and tab items.\n\n### <span id=\"topic-quickstart-create-a-tab-payment-call-sequence-wait-for-approval\">4b. Wait for approval</span>\n\nOn the production environment, a bunq admin will review and approve your cash register. In the sandbox environment, your cash register will be automatically approved.\n\n### <span id=\"topic-quickstart-create-a-tab-payment-call-sequence-post-tab-usage-single\">5. POST tab-usage-single</span>\n\nCreate a new tab that is connected to your cash register. Use the id of the cash register you want to connect this tab to in the URL of your request.\n\n#### Body\n\nGive the tab a name in `merchant_reference`. Create the tab with status `OPEN`, and give the tab a starting amount. You can update this amount later.\n\n#### Response\n\nThe response contains the uuid of the tab you created.\n\n### <span id=\"topic-quickstart-create-a-tab-payment-call-sequence-post-tab-item\">6. POST tab-item (optional)</span>\n\nYou can add items to a tab. For instance, if a customer will be paying for multiple products via this tab, you can decide to add an item for each of these. Adding items to a tab is optional, and adding them will not change the total amount of the tab itself. However, if you've added any tab items the sum of the amounts of these items must be equal to the `total_amount` of the tab when you change its status to `WAITING_FOR_PAYMENT`.\n\n### <span id=\"topic-quickstart-create-a-tab-payment-call-sequence-put-tab-usage-single\">7. PUT tab-usage-single</span>\n\nUpdate the status of the tab to `WAITING_FOR_PAYMENT` if you want the costumer to pay the tab, and you're done adding any tab items. You can use this request to make the tab visible for your costumers.\n\n#### Visibility\n\nTo decide how you are going to make your tab visible, pass a visibility object in the payload.\n\nSetting `cash_register_qr_code` to true will connect this tab to the QR code from the cash register. If this cash register does not have a QR code yet, one will be created. Only one Tab can be connected to the cash register’s QR code at any given time.\n\nSetting `tab_qr_code` to true will create a QR code specifically for this tab. This QR code can not be linked to anything else.\n\n# <span id=\"topic-quickstart-transwerwise-payment\">Quickstart: Create a TransferWise payment</span>\n\n## Goal\n\nYou want to send a payment in currency other than euro outside the SEPA zone.\n\n## Before you start\n\nMake sure that you have opened a session and that for any call you make after that, you pass the session’s token in the `X-Bunq-Client-Authentication` header.\n\nℹ️ *bunq relies on TransferWise for international, so you need to create a TransferWise account linked to a bunq account to be able to create international transfers. You can do it either from the bunq app or using our API as described below.*\n\n## Get the up-to-date exchange rate (optional)\n\nYou might want to check the latest currency exchange rate before making a transfer. Here’s how you can do it using the bunq API:\n1. Check the list of supported currencies via `GET /user/{userID}/transferwise-currency`. Copy the needed currency code.\n2. Create a temporary quote for the currency of your choice via `POST /user/{userID}/transferwise-quote-temporary`.\n\nℹ️ *A quote is the exchange rate at the exact timestamp. Temporary quotes carry solely informative value and cannot be used for creating a transfer.*\n\n3. Read the temporary quote via `GET /user/{userID}/transferwise-quote-temporary/{transferwise-quote-temporaryID}`.\n\n## Create a TransferWise account\n\nYou need a TransferWise account linked to your bunq account to make TransferWise payments via the bunq API. Create one via `POST /user/{userID}/transferwise-user`, and save its ID. \n\nℹ️ *You cannot use an existing TransferWise account.*\n\n## Create a quote\n\n1. Create a quote via POST /user/{userID}/transferwise-quote and save its ID. \n\nℹ️ *Use amount_target to indicate the sum the recipient must get. Amount_source, on the other hand, will indicate the sum you want to send, but it will not necessarily be the final sum the recipient gets.*\n\nℹ️ *Quotes are valid for 30 minutes so if you do not manage to create a transfer within this time, you will need to create another quote.*\n\n2. Get the exchange rate by reading the quote via GET /user/{userID}/transferwise-quote/(transferwise-quoteID).\n\n## Create a recipient\n\nIf you have sent money via the TransferWise account linked to your bunq account, you can reuse the recipients. You can list their IDs via `GET /user/{userID}/transferwise-quote/{transferwise-quoteID}/transferwise-recipient`.\n\nTo create a new, previously unused recipient, follow these steps:\n1. Retrieve the fields required for creating the recipient as the requirements vary for the type of recipient in each country. Iterate sending the following request pair till there are no more required fields:\n- `GET /user/{userID}/transferwise-quote/{transferwise-quoteID}/transferwise-recipient-requirement`\n- `POST /user/{userID}/transferwise-quote/{transferwise-quoteID}/transferwise-recipient-requirement`\n2. Create a recipient account using the final request body from the previous step with `POST /user/{userID}/transferwise-quote/{transferwise-quoteID}/transferwise-recipient-requirement`\n\n## Create a transfer\n\nFinally, having both the quote ID and the recipient ID, you can create a transfer. 🎉\n\n1. Check if there are any additional transfer requirements via `POST /user/{userID}/transferwise-quote/{transferwise-quoteID}/transferwise-transfer-requirement`.\n2. Create a transfer via `POST /user/{userID}/transferwise-quote/{transferwise-quoteID}/transferwise-transfer`. You need to specify the ID of the monetary account from which you want the payment to be made.\n\n# <span id=\"topic-quickstart-attachments\">Quickstart: Downloading attachments</span>\n\n## Goal\nExport receipts and invoices attached to payments to your application.\n\n## The scenario you want to achieve\n0. The bunq user has accepted the authorization request and your application can read the bunq user’s account information.\n1. Your application imports all the transactions and attachments.\n2. The bunq user sees the transactions matched with the receipts and invoices in your application.\n\n## Before you start\n* Make sure that you have opened a session\n* Make sure you pass the session Token in the X-Bunq-Client-Authentication header in all the following requests of the session.\n\n## Call sequence\n1. List the payments of the user via GET /user/{userID}/monetary-account/{monetary-accountID}/payment.\n2. Check if the payments have attachments via GET /user/{userID}/monetary-account/{monetary-accountID}/payment/{paymentID}/note-attachment. Save the attachment IDs.\n3. Export the raw content of the attachments via GET /user/{userID}/attachment/{attachmentID}/content.\n\n***HINT:** You can use [callbacks](https://doc.bunq.com/#/callbacks) to make sure you don’t miss anything happening on the bunq account.*\n",
      "category": "AI & Machine Learning",
      "last_updated": "2025-08-03",
      "maintainer": "bunq Developer Support",
      "documentation_url": "http://bunq.com/developer",
      "version": "1.0",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "bunq API",
      "paths_count": 254,
      "schemas_count": 627
    }
  },
  {
    "name": "automata_market_intelligence_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/byautomata.io/1.0.1/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "This document provides the documentation for the Market Intelligence API by Automata. Get your API Key at https://apis.byautomata.io and check out our <a href='https://www.getpostman.com/collections/d182a1c78d4491d55e19'>Postman Collection</a>.<br><br>The root API endpoint is https://api.byautomata.io. Please refer to the code samples for examples of how to call the Market Intelligence API. The ContentPro endpoints (/contentpro-search and /contentpro-similar-text) are not included in the standard Market Intelligence API plans. Please contact support@byautomata.io for access.",
      "category": "Development Tools",
      "last_updated": "2025-08-03",
      "maintainer": "byautomata.io",
      "documentation_url": "http://byautomata.io",
      "version": "1.0.1",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "Automata Market Intelligence API",
      "paths_count": 4,
      "schemas_count": 7
    }
  },
  {
    "name": "callfire_api_documentation",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/callfire.com/V2/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "CallFire",
      "category": "Development Tools",
      "last_updated": "2025-08-03",
      "maintainer": "CallFire",
      "documentation_url": "https://www.callfire.com",
      "version": "V2",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "CallFire API Documentation",
      "paths_count": 89,
      "schemas_count": 125
    }
  },
  {
    "name": "chain49_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/chain49.com/2.0/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "Kickstart your next crypto project - extended trezor/blockbook API with 10+ blockchains available instantly and 50+ possible on request running on the finest hardware in Germany's best datacenters at Hetzner\n\nWebsocket only via api.chain49.com endpoint possible (RapidAPI does not support it yet)",
      "category": "AI & Machine Learning",
      "last_updated": "2025-08-03",
      "maintainer": "chain49.com",
      "documentation_url": "https://chain49.com/",
      "version": "2.0",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "Chain49 API",
      "paths_count": 18,
      "schemas_count": 0
    }
  },
  {
    "name": "chaingateway_io_v2",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/chaingateway.io/1.0.0/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "This API allows you to interact with Ethereum, Binance smart chain, Polygon and Tron blockchain. If you ever looked for a possibility to automate token or payments this is the right place.  \nYou still have no idea for real use cases? Let me give you some examples: Accept your own token as payment method for your shop, distribute airdrop tokens of your ICO, convert your site currency to a token that can be traded on exchanges and many more.  \nThere are a lot of use cases which are not only limited to sending tokens but also receiving them. You could even create a secure wallet for your token which only the wallet owner has access to. Additionally we offer a lot of functions for retrieving blockchain data, including transactions. Using our webhook system, it is possible to receive notifications when events on the blockchain occur, for example when a transfer to a specific address is happening.\n\n# Registering\n\nTo use this Blockchain API, you need to register for a free account on [Chaingateway.io](https://chaingateway.io)\n\nOnce you have created your account, you can create an API key in your Account panel to use with our API.\n\n# Postman\n\nPostman is a great software to test APIs, it helped us a lot when developing this API. If you haven't installed it yet, we recommend to do so\n\nWe have created a Postman collection that allows to import all functions and their settings, including descriptions in Postman. This way you can test all functions with the click of a button (just change the parameters before).\n\n# API Specifications\n\nFor many API clients, websites and development projects you may need a file which specifies all function endpoints of our API. These files can be found in our [Github repository](https://github.com/chaingateway/api-specification), always updated in the formats \"Postman Collection\" and \"OPENAPI/SWAGGER\".\n\n# Authorization\n\nYou can get your personal API Key from your account dashboard. It is used by us to determine who is accessing the API and to count the requests by that account. There are 2 possibilities to use it in your requests:\n\nAdd it in the HTTP header as\n\n`Authorization: q9PdaWuD4j6DK6vsUgehhL8pgarSrS9m`\n\nPlease do not share your api key! If you did so by mistake, immediately regenerate it in your account panel!",
      "category": "AI & Machine Learning",
      "last_updated": "2025-08-03",
      "maintainer": "chaingateway.io",
      "documentation_url": "https://chaingateway.io",
      "version": "1.0.0",
      "openapi_version": "3.0.3",
      "quality_score": 100,
      "is_popular": false,
      "title": "Chaingateway.io V2",
      "paths_count": 109,
      "schemas_count": 0
    }
  },
  {
    "name": "channel_4_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/channel4.com/1.0.0/swagger.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "This is the place to come for all the technical details you need to power your applications with Channel 4's deep programmes data.",
      "category": "AI & Machine Learning",
      "last_updated": "2025-08-03",
      "maintainer": "Open C4 Project",
      "documentation_url": "http://developer.channel4.com/docs/read/ProgrammesAPIGuide",
      "version": "1.0.0",
      "openapi_version": "2.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "Channel 4 API",
      "paths_count": 68,
      "schemas_count": 23
    }
  },
  {
    "name": "circleci_rest_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/circleci.com/v1/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "The CircleCI API is a RESTful, fully-featured API that allows you to do almost anything in CircleCI.\nYou can access all information and trigger all actions.\nThe only thing we don’t provide access to is billing functions, which must be done from the CircleCI web UI.\n",
      "category": "Finance & Payments",
      "last_updated": "2025-08-03",
      "maintainer": "circleci.com",
      "documentation_url": "https://circleci.com",
      "version": "v1",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "CircleCI REST API",
      "paths_count": 17,
      "schemas_count": 28
    }
  },
  {
    "name": "rest_api_version_2",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/circuitsandbox.net/2.9.235/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "Circuit REST API to interact with the Circuit system.\n\n[Learn more about the Circuit Development Community](https://www.circuit.com/web/developers/home)",
      "category": "Development Tools",
      "last_updated": "2025-08-03",
      "maintainer": "circuitsandbox.net",
      "documentation_url": "https://circuitsandbox.net",
      "version": "2.9.235",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "REST API Version 2",
      "paths_count": 100,
      "schemas_count": 60
    }
  },
  {
    "name": "clearblade_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/clearblade.com/3.0/swagger.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "A friendly little API to help you interact with the ClearBlade platform.",
      "category": "Development Tools",
      "last_updated": "2025-08-03",
      "maintainer": "clearblade.com",
      "documentation_url": "https://clearblade.com",
      "version": "3.0",
      "openapi_version": "2.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "ClearBlade API",
      "paths_count": 133,
      "schemas_count": 163
    }
  },
  {
    "name": "clever_cloud_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/clever-cloud.com/1.0.0/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "Public API for managing Clever-Cloud data and products",
      "category": "Development Tools",
      "last_updated": "2025-08-03",
      "maintainer": "clever-cloud.com",
      "documentation_url": "https://clever-cloud.com",
      "version": "1.0.0",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "Clever-Cloud API",
      "paths_count": 229,
      "schemas_count": 71
    }
  },
  {
    "name": "clickmeter_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/clickmeter.com/v2/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "Api dashboard for ClickMeter API",
      "category": "Development Tools",
      "last_updated": "2025-08-03",
      "maintainer": "Api Support",
      "documentation_url": "http://www.clickmeter.com/api",
      "version": "v2",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "ClickMeter API",
      "paths_count": 75,
      "schemas_count": 55
    }
  },
  {
    "name": "clicksend_rest_api_v3",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/clicksend.com/1.0.0/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "This is the official API documentation for ClickSend.com\n\nBelow you will find a current list of the available methods for clicksend.\n\n**NOTE**: You will need to create a free account to use the API.\n\nYou can\n[**Register Here**](https://dashboard.clicksend.com/#/signup/step1/).\n\n# API URL\n\nThe API should always be accessed over SSL.\n\nBase URL: `https://rest.clicksend.com/v3/`\n\n# Authentication\n\nBasic HTTP authentication should be used in the header.\n\n**Either:**\n\n`username`: Your API username\n\n`password`: Your API key\n\n```\nYou can get your API credentials by clicking 'API Credentials' on the top right of the dashboard.\n```\n\n**OR**\n\n`username`: Your account username\n\n`password`: Your account password\n\n```\nThese are the same credentials that you use to login to the dashboard.\n```\n\n### Authorization Header\n\nThe Authorization header is constructed as follows:\n1. Username and password are combined into a string `username:password`\n1. The resulting string is then encoded using Base64 encoding\n1. The authorization method and a space i.e. \"Basic \" is then put before the encoded string.\n\nFor example, if the user uses `Aladdin` as the username and `open sesame` as the password then the header is formed as follows:\n\n`Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==`\n\n### PHP Authentication Header Example (using cURL)\n\n`curl_setopt($ch, CURLOPT_HTTPHEADER, ['Authorization: Basic ' . base64_encode(\"$username:$password\")]);`\n\n# Verbs\n\nThe API uses restful verbs.\n\n| Verb | Description |\n|---|---|\n| `GET` | Select one or more items. Success returns `200` status code. |\n| `POST` | Create a new item. Success returns `200` status code. |\n| `PUT` | Update an item. Success returns `200` status code. |\n| `DELETE` | Delete an item. Success returns `200` status code. |\n\n# Status Codes\n\nThe API will respond with one of the following HTTP status codes.\n\n| Code | Response | Description |\n|---|---|---|\n| `200` | `SUCCESS` | Request completed successfully. |\n| `400` | `BAD_REQUEST` | The request was invalid or cannot be otherwise served. An accompanying error message will explain further. |\n| `401` | `UNAUTHORIZED` | Authentication credentials were missing or incorrect. |\n| `403` | `FORBIDDEN` | The request is understood, but it has been refused or access is not allowed. An accompanying error message will explain why. |\n| `404` | `NOT_FOUND` | The URI requested is invalid or the resource requested does not exists. |\n| `405` | `NOT_FOUND` | Method doesn't exist or is not allowed. |\n| `429` | `TOO_MANY_REQUESTS` | Rate Limit Exceeded. Returned when a request cannot be served due to the application’s rate limit having been exhausted for the resource. See Rate Limiting. |\n| `500` | `INTERNAL_SERVER_ERROR` | Something is broken |\n\n# Application Status Codes\n\nThe following status codes can be returned in addition to the HTTP status code. For example, when using the Send SMS endpoint:\n\n| Response | Description |\n|---|---|\n| `SUCCESS` | Message added to queue OK. Use delivery reports to get an update on the delivery status.|\n| `MISSING_CREDENTIALS` | Not enough information has been supplied for authentication. Please ensure that your Username and Unique Key are supplied in your request.|\n| `ACCOUNT_NOT_ACTIVATED` | Your account has not been activated.|\n| `INVALID_RECIPIENT` | The destination mobile number is invalid.|\n| `THROTTLED` | Identical message body recently sent to the same recipient. Please try again in a few seconds.|\n| `INVALID_SENDER_ID` | Invalid Sender ID. Please ensure Sender ID is no longer than 11 characters (if alphanumeric), and contains no spaces.|\n| `INSUFFICIENT_CREDIT` | You have reached the end of your message credits. You will need to purchase more message credits.|\n| `INVALID_CREDENTIALS` | Your Username or Unique Key is incorrect.|\n| `ALREADY_EXISTS` | The resource you're trying to add already exists.|\n| `EMPTY_MESSAGE` | Message is empty.|\n| `TOO_MANY_RECIPIENTS` | Too many recipients.|\n| `MISSING_REQUIRED_FIELDS` | Some required fields are missing.|\n| `INVALID_SCHEDULE` | The schedule specified is invalid. Use a unix timestamp e.g. 1429170372.|\n| `NOT_ENOUGH_PERMISSION_TO_LIST_ID` | Don't have enough privilege to access or send to a list_id.|\n| `INTERNAL_ERROR` | Internal error.|\n| `INVALID_LANG` | An invalid language option has been provided.|\n| `INVALID_VOICE` | An invalid voice (gender) option has been provided.|\n| `SUBJECT_REQUIRED` | Usually happens when MMS Subject is empty.|\n| `INVALID_MEDIA_FILE` | Usually MMS media file is invalid file.|\n| `SOMETHING_IS_WRONG` | Generic Error happened.|\n\n# Required Headers\n\nYou'll need to send some headers when making API calls.\n\n| Header | Value |\n|---|---|\n| `Content-type` | `application/json` |\n\n# Pagination\n\nSome methods are paginated. By default, 1 page of 15 items will be returned. You can set the pagination parameters by adding `?page={page}&limit={limit}` to the URL.\n\n## Request\n\n| Parameter | Type | Default | Value |\n|---|---|---|---|\n| `page` | integer | `1` | The page number to return in the response. |\n| `limit` | integer | `15` | The number of results per page. Min 15, Max 100. |\n\n## Response\n\n| Attribute | Type | Value |\n|---|---|---|---|\n| `total` | integer | Total number of results available. |\n| `per_page` | integer | Number of results returned per page. |\n| `current_page` | integer | Current page number. |\n| `last_page` | integer | Last page number. |\n| `next_page_url` | string | A URL of the next page. `null` if not available.|\n| `prev_page_url` | string | A URL of the previous page. `null` if not available.|\n| `from` | integer | Number of the first result in current page. |\n| `to` | integer | Number of the last result in current page. |\n\n# Searching and Sorting\n\nMost GET endpoints allow searching and sorting. Searches are **not** case-sensitive.\n\n## Search\n\nTo perform a search, add `q` as a query parameter. For example:\n\n`/subaccounts?q=field:value,field2:value`\n\n## Order\n\nTo perform a sort, add `order_by` as a query parameter. For example:\n\n`/subaccounts?order_by=field:desc/asc`\n\n## AND / OR\n\nBy default, it will search using the `AND` operator. This can be set using `operator` as a query parameter. For example:\n\n`/subaccounts?q=field:value&operator=OR`\n\n**Options:**\n\n- `AN` - returns results matching **all** query fields specified\n\n- `OR` - returns results matching **any** query fields specified\n\n## Example\n\n`/subaccounts?q=first_name:john,last_name:smith&order_by=subaccount_id:asc&operator=AND`\n\n# CORS\n\nWhen creating your API app, specify the JavaScript (CORS) origins you'll be using. We use these origins to return the headers needed for CORS.\n\n# Date and Time\n\nAll date/timestamps will be returned in Unix time (also known as POSIX time or erroneously as Epoch time) with no leap seconds.\n\nFor example: `1435255816`\n\n```\n(ISO 8601: 2015-06-25T18:10:16Z)\n```\n\nMore information: [Wikipedia: Unix time](https://en.wikipedia.org/wiki/Unix_time).\n\nThere is ony one Unix time and it is created by using the UTC/GMT time zone. This means you might have convert time zones to calculate timestamps. Most programming language have libraries to help you converting time zones.\n\n**The current Unix time can be found here:** [Epoch Converter](http://www.epochconverter.com)\n\n# Testing\n\n## Test Credentials\n\nThese API credentials can be used to test specific scenarios.\n\n**Note:** you will need to create a free account to test other scenarios. Refer to introduction.\n\n| API Username | API Key | Description |\n|---|---|---|---|\n| `nocredit` | `D83DED51-9E35-4D42-9BB9-0E34B7CA85AE` | This account has no credit. |\n| `notactive` | `D83DED51-9E35-4D42-9BB9-0E34B7CA85AE` | This account is not active. |\n| `banned` | `D83DED51-9E35-4D42-9BB9-0E34B7CA85AE` | This account is banned. |\n\n## Test SMS/MMS Numbers\n\nThe following numbers can be used when testing. No messages will be sent, and your account won't be charged. A success response will be returned.\n\n- `+61411111111`\n\n- `+61422222222`\n\n- `+61433333333`\n\n- `+61444444444`\n\n- `+14055555555`\n\n- `+14055555666`\n\n- `+447777777777`\n\n- `+8615555555555`\n\n## Test Voice Numbers\n\nThe following numbers can be used when testing. No messages will be sent, and your account won't be charged. A success response will be returned.\n\n- `+61411111111`\n\n- `+61422222222`\n\n- `+61433333333`\n\n- `+61444444444`\n\n- `+14055555555`\n\n- `+14055555666`\n\n- `+447777777777`\n\n- `+8615555555555`\n\n## Test Fax Numbers\n\nThe following numbers can be used when testing. No messages will be sent, and your account won't be charged. A success response will be returned.\n\n- `+61261111111`\n\n- `+61262222222`\n\n- `+61263333333`\n\n## Test Email Addresses\n\nThe following email addresses can be used when testing. No messages will be sent, and your account won't be charged. A success response will be returned.\n\n- `test1@test.com`\n\n- `test2@test.com`\n\n- `test3@test.com`\n\n## Test Post Letter Addresses\n\nThe following Postal Codes (address_postal_code) can be used when testing. No messages will be sent when using these post codes, and your account won't be charged. A success response will be returned.\n\n- `11111`\n\n- `22222`\n\n- `33333`",
      "category": "AI & Machine Learning",
      "last_updated": "2025-08-03",
      "maintainer": "clicksend.com",
      "documentation_url": "https://clicksend.com",
      "version": "1.0.0",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "ClickSend REST API v3",
      "paths_count": 150,
      "schemas_count": 84
    }
  },
  {
    "name": "climate_fieldview_platform_apis",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/climate.com/4.0.11/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "**Last Modified**: Wed Jan  4 12:47:29 UTC 2023\n\n\nAll endpoints are only accessible via HTTPS.\n\n* All API endpoints are located at `https://platform.climate.com` (e.g.\n`https://platform.climate.com/v4/fields`).\n\n* The authorization token endpoint is located at\n`https://api.climate.com/api/oauth/token`.\n\n## Troubleshooting\n\n`X-Http-Request-Id` response header will be returned on every call,\nsuccessful or not. If you experience an issue with our api and need\nto contact technical support, please supply the value of the `X-Http-Request-Id`\nheader along with an approximate time of when the request was made.\n\n## Request Limits\n\nWhen you’re onboarded to Climate’s API platform, your `x-api-key` is assigned a custom usage plan. Usage plans are unique to each partner and have the following key attributes: \n\n1. Throttling information\n    * burstLimit: Maximum rate limit over a period ranging from 1 second to a few seconds\n    * rateLimit: A steady-state rate limit\n\n2. Quota information\n    * Limit: The maximum number of requests that can be made in a given month\n\nWhen the request rate threshold is exceeded, a `429` response code is returned. Optionally, the [`Retry-After`](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.37) header may be returned: \n\nFollowing are examples of rate limit errors:\n\n1. Rate limit exceeded:\n\n<br>HTTP/1.1 429 \n<br>Content-Type: application/json\n<br>Content-Length: 32\n\n   {\"message\":\"Too Many Requests\"}\n\n2. Quota exhausted:\n<br>HTTP/1.1 429 \n<br>Content-Type: application/json\n<br>Content-Length: 29\n\n    {\"message\":\"Limit Exceeded\"}\n\n## Pagination\n\nPagination is performed via headers. Any request which returns a `\"results\"`\narray may be paginated. The following figure shows how query results are laid out with\nX-Limit=4 and no filter applied.\n\n<img style=\"width:70%;height:auto;\" src=\"https://s3-us-west-2.amazonaws.com/climate-com/images/svg_upload_tests/paging.png\">\n\n* If there are no results, a response code of `304` will be returned.\n\n* If the response is the last set of results, a response code of `200` or\n`206` will be returned.\n\n* If there are more results, a response code of `206` will be returned.\n\n* If `X-Next-Token` is provided in the request headers but the token has\nexpired, a response code of `409` will be returned. This is only applicable\nfor some endpoints; see specific endpoint documentation below.\n\n#### X-Limit\n\nThe page size can be controlled with the `X-Limit` header. Valid values are\n`1-100` and defaults to `100`.\n\n#### X-Next-Token\n\nIf the results are paginated, a response header of `X-Next-Token` will be\nreturned. Use the associated value in the subsequent request (via the `X-Next-Token`\nrequest header) to retrieve the next page. The following sequence diagram shows how to\nuse `X-Next-Token` to fetch all the records.\n\n<img src=\"https://s3-us-west-2.amazonaws.com/climate-com/images/svg_upload_tests/x-next-token.svg\">\n\n\n## Chunked Uploads\n\nUploads larger than `5MiB` (`5242880 bytes`) must be done in `5MiB` chunks\n(with the exception of the final chunk). Each chunk request MUST contain a\n`Content-Range` header specifying the portion of the upload, and a `Content-Type`\nheader specifying binary content type (`application/octet-stream`). Range\nuploads must be contiguous. The maximum upload size is capped at `500MiB` (`524288000 bytes`).\n\n## Chunked Downloads\n\nDownloads larger than `5MiB` (`5242880 bytes`) must be done in `1-5MiB`\nchunks (with the exception of the final chunk, which may be less than `1MiB`).\nEach chunk request MUST contain a `Range` header specifying the requested portion of the download,\nand an `Accept` header specifying binary and json content types  (`application/octet-stream,application/json`)\nor all content types (`*/*`).\n\n## Drivers\n\nIf you need drivers to process agronomic data, download the ADAPT plugin below. We only support the plugin in the Windows environment, minimum is Windows 7 SP1.\n\nFor asPlanted, asHarvested and asApplied data:\n* [ADAPT Plugin](https://dev.fieldview.com/drivers/ClimateADAPTPlugin_latest.exe)\n<br>Release notes can be found [here](https://dev.fieldview.com/drivers/adapt-release-notes.txt).\n<br>Download and use of the ADAPT plugin means that you agree to the EULA for use of the ADAPT plugin. \n<br>Please review the [EULA](https://dev.fieldview.com/EULA/ADAPT%20Plugin%20EULA-06-19.pdf) (last updated on June 6th, 2019) before download and use of the ADAPT plugin.\n<br>For more information, please refer to:\n  * [ADAPT Resources](https://adaptframework.org/)\n  * [ADAPT Overview](https://aggateway.atlassian.net/wiki/spaces/ADM/overview)\n  * [ADAPT FAQ](https://aggateway.atlassian.net/wiki/spaces/ADM/pages/165942474/ADAPT+Frequently-Asked+Questions+FAQ)\n  * [ADAPT Videos](https://adaptframework.org/adapt-videos/)\n\n## Sample Test Data\n\nSample agronomic data:\n* [asPlanted and asHarvested data](https://dev.fieldview.com/sample-agronomic-data/Planting_Harvesting_data_04_18_2018_21_46_18.zip)\n* [asApplied data set 1](https://dev.fieldview.com/sample-agronomic-data/as-applied-data1.zip)\n* [asApplied data set 2](https://dev.fieldview.com/sample-agronomic-data/as-applied-data2.zip)\n<br>To upload the sample data to your account, please follow the instructions in this [link](https://support.climate.com/kt#/kA02A000000AaxzSAC/en_US).\n\nSample soil data:\n* [Sample soil data](https://dev.fieldview.com/sample-soil-data/soil-sample.xml)\n---\n",
      "category": "AI & Machine Learning",
      "last_updated": "2025-08-03",
      "maintainer": "Climate FieldView Support",
      "documentation_url": "https://climate.com",
      "version": "4.0.11",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "Climate FieldView Platform APIs",
      "paths_count": 26,
      "schemas_count": 46
    }
  },
  {
    "name": "cloud_rf_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/cloudrf.com/2.0.0/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "Use this JSON API to build and test radio links for any radio, anywhere. Authenticate with your API2.0 key in the request header as key",
      "category": "Development Tools",
      "last_updated": "2025-08-03",
      "maintainer": "cloudrf.com",
      "documentation_url": "https://cloudrf.com",
      "version": "2.0.0",
      "openapi_version": "3.0.1",
      "quality_score": 100,
      "is_popular": false,
      "title": "Cloud-RF API",
      "paths_count": 11,
      "schemas_count": 8
    }
  },
  {
    "name": "college_football_data_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/collegefootballdata.com/4.4.12/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "This is an API for accessing all sorts of college football data.  Please note that API keys should be supplied with \"Bearer \" prepended (e.g. \"Bearer your_key\"). API keys can be acquired from the CollegeFootballData.com website.",
      "category": "Development Tools",
      "last_updated": "2025-08-03",
      "maintainer": "collegefootballdata.com",
      "documentation_url": "https://collegefootballdata.com",
      "version": "4.4.12",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "College Football Data API",
      "paths_count": 51,
      "schemas_count": 50
    }
  },
  {
    "name": "public_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/combell.com/v2/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "# Introduction\n\nThis API allows resellers to manage their resources in a simple, programmatic way using HTTP requests.\n\n# Conventions\n\n## Requests\n\nThe API supports different methods depending on the required action.\n\n| Method\t| Description\n| ---\t\t| ---\n| GET\t\t| Retrieve resources in a collection or get a single resource.<br/>Getters will never have any effect on the queried resources.\n| POST\t\t| Create a new resource in a collection.\n| PUT\t\t| Update an existing resource with its new representation.\n| DELETE\t| Delete an existing resource.\n\n## HTTP status codes\n\nThe API will reply with different HTTP statuscodes:\n\n| StatusCode\t\t\t\t| Description\n| ---\t\t\t\t\t\t| ---\n| 200 OK\t\t\t\t\t| The requests was processed and you receive data as a result.\n| 201 CREATED\t\t\t\t| The resource has been created. Either the Location header contains a link to the created resource, or links are being returned in the response body. The applied method will be indicated in the documentation.\n| 202 ACCEPTED\t\t\t\t| The request has been validated and accepted. Because we need to do some background processing prior to returning the result, we cannot send back a useful representation.\n| 204 NOCONTENT\t\t\t\t| The request has been processed, but no details can be returned.\n| 400 BADREQUEST\t\t\t| Your request is malformed.\n| 401 UNAUTHORIZED\t\t\t| You are not authorized. Follow the instructions in the Authorization documentation.\n| 403 FORBIDDEN\t\t\t\t| Access to the resource or operation is not allowed.\n| 404 NOTFOUND\t\t\t\t| The resource cannot be found.\n| 410 GONE                  | The resource is permanently no longer available.\n| 429 TOOMANYREQUESTS\t\t| The ratelimit has been exceeded. Please refer to the documentation on rate limiting for more details.\n| 500 INTERNALSERVERERROR\t| An error occurred during the processing of the request. The error is unexpected and most likely due to a bug in the api.\n\nIn the event of a problem, the body of the response will usually contain an errorcode and errormessage.\nIn rare cases additional details about the error are reported.\n\nErrorcodes 400-499 are considered to be client errors and indicate that there was an issue with the request.\nWe will not take any action besides monitoring. \n\nErrorcodes 500-599 are considered to be server errors. The errors are monitored AND action will be taken to resolve the error.\n\n## Formatting\n\nSnake casing is applied on resources and query parameters.\nThe API is strictly returning JSON. No other formats are supported.\n\nDatetimes are returned in ISO-8601 format.\n\n## Pagination\n\nPagination is on by default on collections and is controlled by specifying *skip* and *take* parameters.  \n**Skip** indicates the number of results to skip and where to start the new take.  \n**Take** indicates the number of records to return. The returned number of items can be smaller than the requested take.\n\nPaged results will have headers with useful information regarding the paging.\n\n| Header\t\t\t\t| Description\n| ---\t\t\t\t\t| ---\n| X-Paging-Skipped\t\t| The number of results that have been skipped.\n| X-Paging-Take\t\t\t| The number of items in the current take. The number might differ from the requested take. It represents the actual number of items returned in the response.\n| X-Paging-TotalResults | The total number of results regardless of paging.\n\n## Rate limiting\n\nThe number of requests per interval is limited. Detailed information on the rate limiting can be found in specific headers which will be sent on each request.\n\n| Header\t\t\t\t| Description\n| ---\t\t\t\t\t| ---\n| X-RateLimit-Limit\t\t| The number of requests that can be made in a specific time interval.\n| X-RateLimit-Usage\t\t| The number of requests already made in the current time interval.\n| X-RateLimit-Remaining\t| The number of requests remaining until the reset.\n| X-RateLimit-Reset\t\t| The number of seconds until the reset.<br />After the reset you are allowed to make as many requests as specified by the X-RateLimit-Limit header.\n| Retry-After\t\t\t| The number of seconds you have to wait until you can make new requests.<br />This header is only present when the rate limit has been reached. It is identical to X-RateLimit-Reset.\n\nWhen the ratelimit has been reached, all requests will return with a HTTP statuscode 429 and ReasonPhrase '*Too many requests, retry later.*'.\n\n# Authentication\n\nThe Api uses HMAC authentication.  \nHash-based message authentication code (HMAC) is a mechanism for calculating a message authentication code involving a hash function in combination with a secret key.  \nBoth the integrity and the authenticity of the message are verified this way.\n\n## Steps to generate the HMAC\n\n1. Get your api key and secret from your controlpanel.  \nIt is absolutely vital that the secret is never exposed. Once the secret is out, anyone would be able to generate hmacs to impersonate you.  \nIn case your secret is compromised, you can generate a new api key and secret on your controlpanel.\n2. Construct the input value for generating the hmac.  \nConcatenate:apikey, request method, path and querystring information, unix timestamp, nonce and content.\n\n|\t\t\t\t\t\t\t\t\t\t| Description\n| ---\t\t\t\t\t\t\t\t\t| ---\n| apikey\t\t\t\t\t\t\t\t| The key that is linked to your user.\n| request method\t\t\t\t\t\t| lowercased (eg: get, post, delete,...)\n| path and querystring information\t\t| urlencoding of the lowercased relative path and querystring.<br />The path **MUST start with the api version (/v2)**.<br />The hexadecimal codes (percent encoding) MUST be uppercased.\n| unix timestamp\t\t\t\t\t\t| the unix timestamp in **seconds**.\n| nonce\t\t\t\t\t\t\t\t\t| a\tunique string for each request. It should be a random string, not related to the request. The nonce (in combination with the unix timestamp) protects you from replay attacks in case anyone was able to intercept a request.\n| content\t\t\t\t\t\t\t\t| When the request body is not empty, this should be the Base64 encoded Md5 hash of the request body.<br />An empty body should not be encoded.\n\n3. Hash the concatenated string using your api secret and the SHA-256 algorithm.\n4. Base64 encode the result of the hash function. This is the hmac signature you will need to send an authorized request.\n\n## Sending an authorized request\n\nAn authorized request can be made by sending the generated HMAC in the authorization header.  \nA correct authorizationheader uses the hmac authorization scheme and a correctly formatted authorization parameter.\n\nCreate the authorization parameter by concatenating:\n  * apikey\n  * colon ':'\n  * generated HMAC signature (see above)\n  * colon ':'\n  * nonce (the one used to generate the signature)\n  * colon ':'\n  * unix timestamp (the one used to generate the signature)\n\nA sample (illustrated):\n\n* The first line is the string you create to feed to the hashing algorithm.\n* The second line is the authorization header that should be sent in the request.\n\n![hmac authorization header illustrated](/v2/images/authentication_illustration.jpg \"authorization header illustrated\")\n\n## IP whitelisting\n\nAccess is by default restricted for all IP addresses. You need to explicitly whitelist an IP or an IP range in your controlpanel.\n\n# Versioning\n\nBecause of breaking contract changes compared to v1, we released v2 of the API.  \nV1 will still be available, but you are strongly encouraged to migrate to the latest version.  \nNew features will only be available on v2.\n\n# Policy\n\n### Fair use policy\n\nPlease respect the rate limits and do not use the api for any purposes of abuse.  \nAll requests are being monitored and logged.  \nIntentional abuse might result in api key revocation.\n\n# Errors\n\nThe API attempts to return appropriate HTTP status codes for every request.  \nWhen the status code indicates failure, the API will also provide an error message in most cases.\n\nAn error message contains a machine-parseable error code accompanied by a descriptive error text.  \nThe text for an error message might change over time, but codes will stay the same.\n\n[An overview of error codes can be found here](/v2/documentation/errorcodes).\n\n# Change log\n\n[An overview of new changes can be found here](/v2/documentation/changelog).\n\n# Provisioning information\n\n## Terminology\n\n| Term\t\t\t| Definition\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\n| ---\t\t\t| ---\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\n| Servicepack\t| Defines a set of assets that belong together. An example is a hosting package which offers Linux hosting, a domain name, a couple of mailboxes and databases.<br/>It also limits the size of individual assets within the same account. |\n| Account\t\t| Represents an instance of the servicepack. It contains one or more assets. The number and size of assets is defined by the servicepack. |\n| Asset\t\t\t| A manageable service. For example: a mysql database, a linux hosting, a mailbox,...<br/>Some assets are created at the moment when the account is created. Other assets can be created afterwards.\n\t\n## Common provisioning scenario\n\n**Provisioning of an account with Linux hosting with one MySql database**\n\n*Without a pre-existing account:*\n\n1. Create a new account.<br/>Perform a POST on the accounts route and provide the desired servicepack id and identifier (domain name).\n2. Read the Location header from the response and perform a GET of the provided resource (a provisioning job).\n3. When the response returns 200(OK), you should repeat the GET operation after a certain interval (Repeat this step).<br/>\nWhen the response returns 201(Created), you should read the response body. This will contain links to the created resources.<br/>\nThis will usually hold only one link, but to be futureproof, this has been designed to return a collection.\n4. The created resource will point to an account. You now know the account's Id and can continue with the provisioning of a MySql database on this account.\n5. Perform a POST on the mysqldatabases route and provide the account id along with other requested information.\n6. Read the Location header from the response and perform a GET of the provided resource (a provisioning job).\n7. When the response returns 200(OK), you should repeat the GET operation after a certain interval (Repeat this step).<br/>\nWhen the response returns 201(Created), you should read the response body. This will contain links to the created resources.<br/>\nThis will usually hold only one link, but to be futureproof, this has been designed to return a collection.\n8. The created resource will point to a MySql database resource.\n\n## SSL certificate requests\n\n**Requesting an SSL certificate causes the purchase of a paying product.**\n\n1. A certificate is created by adding an ssl certificate request.\n2. Upon statuscode 201 you should query for certificate completion on the resource provided in the location response header.\n3. The resource request can respond with different statuscodes:\n<ul>\n    <li>200: the certificate request is ongoing.<br/>\nCheck the validations collection for validation values that are not auto_validated. Those should be set by you system.<br/>\nCall verify domain validations once all validation values are in place. It might take some time for verification to take place. It is not necessary to call this method more than once.</li>\n    <li>303: the certificate request is complete; there is no more certificate request resource available. Check the location header value to retrieve the representation of the resulting ssl certificate.</li>\n    <li>410: the certificate request does not exist anymore, there is no certificate created as a result of the request.</li>\n</ul>",
      "category": "AI & Machine Learning",
      "last_updated": "2025-08-03",
      "maintainer": "combell.com",
      "documentation_url": "https://combell.com",
      "version": "v2",
      "openapi_version": "3.0.1",
      "quality_score": 100,
      "is_popular": false,
      "title": "Public Api",
      "paths_count": 58,
      "schemas_count": 89
    }
  },
  {
    "name": "configcat_public_management_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/configcat.com/v1/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "**Base API URL**: https://api.configcat.com\n\nIf you prefer the swagger documentation, you can find it here: [Swagger UI](https://api.configcat.com/swagger).\n\nThe purpose of this API is to access the ConfigCat platform programmatically. \nYou can **Create**, **Read**, **Update** and **Delete** any entities like **Feature Flags, Configs, Environments** or **Products** within ConfigCat. \n\nThe API is based on HTTP REST, uses resource-oriented URLs, status codes and supports JSON \nand JSON+HAL format. Do not use this API for accessing and evaluating feature flag values. Use the [SDKs instead](https://configcat.com/docs/sdk-reference/overview).\n\n\n# OpenAPI Specification\n\nThe complete specification is publicly available here: [swagger.json](v1/swagger.json). \nYou can use it to generate client libraries in various languages with [OpenAPI Generator](https://github.com/OpenAPITools/openapi-generator) or\n[Swagger Codegen](https://swagger.io/tools/swagger-codegen/) to interact with this API.\n\n# Authentication\nThis API uses the [Basic HTTP Authentication Scheme](https://en.wikipedia.org/wiki/Basic_access_authentication). \n\n<!-- ReDoc-Inject: <security-definitions> -->\n\n# Throttling and rate limits\nAll the rate limited API calls are returning information about the current rate limit period in the following HTTP headers:\n\n| Header | Description |\n| :- | :- |\n| X-Rate-Limit-Remaining | The maximum number of requests remaining in the current rate limit period. |\n| X-Rate-Limit-Reset     | The time\twhen the current rate limit period resets.\t\t\t\t\t\t  |\n\nWhen the rate limit is exceeded by a request, the API returns with a `HTTP 429 - Too many requests` status along with a `Retry-After` HTTP header.\n",
      "category": "AI & Machine Learning",
      "last_updated": "2025-08-03",
      "maintainer": "ConfigCat",
      "documentation_url": "https://configcat.com",
      "version": "v1",
      "openapi_version": "3.0.1",
      "quality_score": 100,
      "is_popular": false,
      "title": "ConfigCat Public Management API",
      "paths_count": 36,
      "schemas_count": 79
    }
  },
  {
    "name": "conjur",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/conjur.local/5.3.0/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "This is an API definition for CyberArk Conjur Open Source. You can find out more at [Conjur.org](https://www.conjur.org/).",
      "category": "Development Tools",
      "last_updated": "2025-08-03",
      "maintainer": "conjur.local",
      "documentation_url": "https://conjur.org",
      "version": "5.3.0",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "Conjur",
      "paths_count": 36,
      "schemas_count": 8
    }
  },
  {
    "name": "contract_fit_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/contract-p.fit/1.0/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "This OpenAPI describes the API exposed by the contract.fit backend.\n\n## Security\n\n### Authentication\n\nAll endpoints are protected: you need to make authenticated calls. There are 3 authentication mechanisms:\n- HTTP Basic (Username + Password)\n- JWT Token\n- API-Key\n\nBy default you should have an account allowing you to bootstrap your tenant and create users and roles, using Basic Auth or after creating a Token  - see */auth* endpoints.\n\nIf you are missing credentials or permissions, please [contact us](https://contract.fit/contact-us).\n\n### Authorization\n\nThe security system is RBAC based: users must be granted scoped roles, allowing them to access resources.\nEach role grants a defined set of permissions, which can be restricted to a given inbox or document - see */roles* endpoints.\n\n## Upload and Processing\n\nBelow is a short description of common use cases of the API.\n\n### Simple Upload\n\nThe easiest and simplest way to get started is to use POST /documents : it will make a synchronous upload of your file and wait for the result.\n\nThis is a simplified version of POST /documents/{inbox_id} with less arguments and settings; it may not be suitable for real workload as it offers less capabilities.\n\n### Upload to Inbox\n\nThe favored endpoint to upload files is POST /documents/{inbox_id}: it is also highly recommended to make async call using sync=false.\n\n**Sync / Async**\n\nFor convenience uploads can be synchronous: it will make the request blocks until the document is processed.\n\nIt is however discouraged to rely on sync requests, as our service is designed to process documents asynchronously. You might run into timeouts and unprocessed document depending on factors such as server load and number of pending documents.\n\nAsynchronous calls will only schedule the processing and directly return the document ID without waiting: the document will be processed as soon as possible. You can then wait for the processed result using GET */documents/{document_id}*.\n\n### Reprocessing\n\nYou can reprocess a document using POST */documents/{document_id}/reprocess* : it will schedule an async processing of the document (note: it is not possible to make a sync reprocessing)\n",
      "category": "AI & Machine Learning",
      "last_updated": "2025-08-03",
      "maintainer": "contract-p.fit",
      "documentation_url": "https://contract-p.fit",
      "version": "1.0",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "Contract.fit API",
      "paths_count": 91,
      "schemas_count": 106
    }
  },
  {
    "name": "corrently_io",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/corrently.io/2.0.0/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "*Corrently - from italian corrente, which is energy*\n# Introduction\nThe Corrently ecosystem gets maintained by [STROMDAO GmbH](https://www.stromdao.de/) to support green energy services for prosumers, grid operators, regulators, integrators or any other party with an emerging need of consensus driven management.\nAs the [energy product Corrently](https://www.corrently.de/) got first launched in Germany parts of this documentation provide simple translations for better understanding.\n[Released SKDs for Download](https://github.com/energychain/corrently-api/releases)\n",
      "category": "AI & Machine Learning",
      "last_updated": "2025-08-03",
      "maintainer": "corrently.io",
      "documentation_url": "https://stromdao.de/kontakt",
      "version": "2.0.0",
      "openapi_version": "3.0.2",
      "quality_score": 100,
      "is_popular": false,
      "title": "Corrently.io",
      "paths_count": 25,
      "schemas_count": 9
    }
  },
  {
    "name": "daniweb_connect_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/daniweb.com/4/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "User Recommendation Engine and Chat Network",
      "category": "Development Tools",
      "last_updated": "2025-08-03",
      "maintainer": "Dani Wolkowicki",
      "documentation_url": "https://www.daniweb.com/connect/developers",
      "version": "4",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "DaniWeb Connect API",
      "paths_count": 51,
      "schemas_count": 82
    }
  },
  {
    "name": "data2crm_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/data2crm.com/1/swagger.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "<p>Make use of our in-depth documentation to get more information about the various functions of the service. Those willing to explore the mechanics of Data2CRM.API can test it in live regime using the short code samples.</p><p>Select CRM: <span id=\"docs-select-crm\" style=\"font-weight: bold\">Loading... please wait</span></p><p>Here are the API access keys:<br><b>X-API2CRM-USER-KEY</b>: <span id=\"docs-user-key\">e2a6379ab878ae7e58119d4ec842bf9c</span><br><b>X-API2CRM-APPLICATION-KEY</b>: <span id=\"docs-crm-key\">7ae5b17008fb414d84981191cf3b66a476ef8bef</span></p><p id=\"docs-crm-access\">The CRM access details are:<br><b>URL</b>: <a id=\"docs-crm-url\" href=\"https://login.salesforce.com/\" target=\"_blank\">https://login.salesforce.com/</a><br><b>E-mail / Username</b>: <span id=\"docs-crm-username\">developers.data2crm.api+1@magneticone.com</span><br><b>Password</b>: <span id=\"docs-crm-password\">data2crmapi123</span></p>",
      "category": "AI & Machine Learning",
      "last_updated": "2025-08-03",
      "maintainer": "data2crm.com",
      "documentation_url": "http://www.data2crm.com/api/",
      "version": "1",
      "openapi_version": "2.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "Data2CRM.API",
      "paths_count": 216,
      "schemas_count": 161
    }
  },
  {
    "name": "digitalocean_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/digitalocean.com/2.0/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "# Introduction\n\nThe DigitalOcean API allows you to manage Droplets and resources within the\nDigitalOcean cloud in a simple, programmatic way using conventional HTTP requests.\n\nAll of the functionality that you are familiar with in the DigitalOcean\ncontrol panel is also available through the API, allowing you to script the\ncomplex actions that your situation requires.\n\nThe API documentation will start with a general overview about the design\nand technology that has been implemented, followed by reference information\nabout specific endpoints.\n\n## Requests\n\nAny tool that is fluent in HTTP can communicate with the API simply by\nrequesting the correct URI. Requests should be made using the HTTPS protocol\nso that traffic is encrypted. The interface responds to different methods\ndepending on the action required.\n\n|Method|Usage|\n|--- |--- |\n|GET|For simple retrieval of information about your account, Droplets, or environment, you should use the GET method.  The information you request will be returned to you as a JSON object. The attributes defined by the JSON object can be used to form additional requests.  Any request using the GET method is read-only and will not affect any of the objects you are querying.|\n|DELETE|To destroy a resource and remove it from your account and environment, the DELETE method should be used.  This will remove the specified object if it is found.  If it is not found, the operation will return a response indicating that the object was not found. This idempotency means that you do not have to check for a resource's availability prior to issuing a delete command, the final state will be the same regardless of its existence.|\n|PUT|To update the information about a resource in your account, the PUT method is available. Like the DELETE Method, the PUT method is idempotent.  It sets the state of the target using the provided values, regardless of their current values. Requests using the PUT method do not need to check the current attributes of the object.|\n|PATCH|Some resources support partial modification. In these cases, the PATCH method is available. Unlike PUT which generally requires a complete representation of a resource, a PATCH request is is a set of instructions on how to modify a resource updating only specific attributes.|\n|POST|To create a new object, your request should specify the POST method. The POST request includes all of the attributes necessary to create a new object.  When you wish to create a new object, send a POST request to the target endpoint.|\n|HEAD|Finally, to retrieve metadata information, you should use the HEAD method to get the headers.  This returns only the header of what would be returned with an associated GET request. Response headers contain some useful information about your API access and the results that are available for your request. For instance, the headers contain your current rate-limit value and the amount of time available until the limit resets. It also contains metrics about the total number of objects found, pagination information, and the total content length.|\n\n\n## HTTP Statuses\n\nAlong with the HTTP methods that the API responds to, it will also return\nstandard HTTP statuses, including error codes.\n\nIn the event of a problem, the status will contain the error code, while the\nbody of the response will usually contain additional information about the\nproblem that was encountered.\n\nIn general, if the status returned is in the 200 range, it indicates that\nthe request was fulfilled successfully and that no error was encountered.\n\nReturn codes in the 400 range typically indicate that there was an issue\nwith the request that was sent. Among other things, this could mean that you\ndid not authenticate correctly, that you are requesting an action that you\ndo not have authorization for, that the object you are requesting does not\nexist, or that your request is malformed.\n\nIf you receive a status in the 500 range, this generally indicates a\nserver-side problem. This means that we are having an issue on our end and\ncannot fulfill your request currently.\n\n400 and 500 level error responses will include a JSON object in their body,\nincluding the following attributes:\n\n|Name|Type|Description|\n|--- |--- |--- |\n|id|string|A short identifier corresponding to the HTTP status code returned. For example, the ID for a response returning a 404 status code would be \"not_found.\"|\n|message|string|A message providing additional information about the error, including details to help resolve it when possible.|\n|request_id|string|Optionally, some endpoints may include a request ID that should be provided when reporting bugs or opening support tickets to help identify the issue.|\n\n### Example Error Response\n\n```\n    HTTP/1.1 403 Forbidden\n    {\n      \"id\":       \"forbidden\",\n      \"message\":  \"You do not have access for the attempted action.\"\n    }\n```\n\n## Responses\n\nWhen a request is successful, a response body will typically be sent back in\nthe form of a JSON object. An exception to this is when a DELETE request is\nprocessed, which will result in a successful HTTP 204 status and an empty\nresponse body.\n\nInside of this JSON object, the resource root that was the target of the\nrequest will be set as the key. This will be the singular form of the word\nif the request operated on a single object, and the plural form of the word\nif a collection was processed.\n\nFor example, if you send a GET request to `/v2/droplets/$DROPLET_ID` you\nwill get back an object with a key called \"`droplet`\". However, if you send\nthe GET request to the general collection at `/v2/droplets`, you will get\nback an object with a key called \"`droplets`\".\n\nThe value of these keys will generally be a JSON object for a request on a\nsingle object and an array of objects for a request on a collection of\nobjects.\n\n### Response for a Single Object\n\n```\n    {\n        \"droplet\": {\n            \"name\": \"example.com\"\n            . . .\n        }\n    }\n```\n\n### Response for an Object Collection\n\n```\n    {\n        \"droplets\": [\n            {\n                \"name\": \"example.com\"\n                . . .\n            },\n            {\n                \"name\": \"second.com\"\n                . . .\n            }\n        ]\n    }\n```\n\n## Meta\n\nIn addition to the main resource root, the response may also contain a\n`meta` object. This object contains information about the response itself.\n\nThe `meta` object contains a `total` key that is set to the total number of\nobjects returned by the request. This has implications on the `links` object\nand pagination.\n\nThe `meta` object will only be displayed when it has a value. Currently, the\n`meta` object will have a value when a request is made on a collection (like\n`droplets` or `domains`).\n\n\n### Sample Meta Object\n\n```\n    {\n        . . .\n        \"meta\": {\n            \"total\": 43\n        }\n        . . .\n    }\n```\n\n## Links & Pagination\n\nThe `links` object is returned as part of the response body when pagination\nis enabled. By default, 20 objects are returned per page. If the response\ncontains 20 objects or fewer, no `links` object will be returned. If the\nresponse contains more than 20 objects, the first 20 will be returned along\nwith the `links` object.\n\nYou can request a different pagination limit or force pagination by\nappending `?per_page=` to the request with the number of items you would\nlike per page. For instance, to show only two results per page, you could\nadd `?per_page=2` to the end of your query. The maximum number of results\nper page is 200.\n\nThe `links` object contains a `pages` object. The `pages` object, in turn,\ncontains keys indicating the relationship of additional pages. The values of\nthese are the URLs of the associated pages. The keys will be one of the\nfollowing:\n\n*   **first**: The URI of the first page of results.\n*   **prev**: The URI of the previous sequential page of results.\n*   **next**: The URI of the next sequential page of results.\n*   **last**: The URI of the last page of results.\n\nThe `pages` object will only include the links that make sense. So for the\nfirst page of results, no `first` or `prev` links will ever be set. This\nconvention holds true in other situations where a link would not make sense.\n\n### Sample Links Object\n\n```\n    {\n        . . .\n        \"links\": {\n            \"pages\": {\n                \"last\": \"https://api.digitalocean.com/v2/images?page=2\",\n                \"next\": \"https://api.digitalocean.com/v2/images?page=2\"\n            }\n        }\n        . . .\n    }\n```\n\n## Rate Limit\n\nRequests through the API are rate limited per OAuth token. Current rate limits:\n\n*   5,000 requests per hour\n*   250 requests per minute (5% of the hourly total)\n\nOnce you exceed either limit, you will be rate limited until the next cycle\nstarts. Space out any requests that you would otherwise issue in bursts for\nthe best results.\n\nThe rate limiting information is contained within the response headers of\neach request. The relevant headers are:\n\n*   **ratelimit-limit**: The number of requests that can be made per hour.\n*   **ratelimit-remaining**: The number of requests that remain before you hit your request limit. See the information below for how the request limits expire.\n*   **ratelimit-reset**: This represents the time when the oldest request will expire. The value is given in [Unix epoch time](http://en.wikipedia.org/wiki/Unix_time). See below for more information about how request limits expire.\n\nAs long as the `ratelimit-remaining` count is above zero, you will be able\nto make additional requests.\n\nThe way that a request expires and is removed from the current limit count\nis important to understand. Rather than counting all of the requests for an\nhour and resetting the `ratelimit-remaining` value at the end of the hour,\neach request instead has its own timer.\n\nThis means that each request contributes toward the `ratelimit-remaining`\ncount for one complete hour after the request is made. When that request's\ntimer runs out, it is no longer counted towards the request limit.\n\nThis has implications on the meaning of the `ratelimit-reset` header as\nwell. Because the entire rate limit is not reset at one time, the value of\nthis header is set to the time when the _oldest_ request will expire.\n\nKeep this in mind if you see your `ratelimit-reset` value change, but not\nmove an entire hour into the future.\n\nIf the `ratelimit-remaining` reaches zero, subsequent requests will receive\na 429 error code until the request reset has been reached. You can see the\nformat of the response in the examples.\n\n**Note:** The following endpoints have special rate limit requirements that\nare independent of the limits defined above.\n\n*   Only 12 `POST` requests to the `/v2/floating_ips` endpoint to create Floating IPs can be made per 60 seconds.\n*   Only 10 `GET` requests to the `/v2/account/keys` endpoint to list SSH keys can be made per 60 seconds.\n*   Only 5 requests to any and all `v2/cdn/endpoints` can be made per 10 seconds. This includes `v2/cdn/endpoints`, \n    `v2/cdn/endpoints/$ENDPOINT_ID`, and `v2/cdn/endpoints/$ENDPOINT_ID/cache`.\n*   Only 50 strings within the `files` json struct in the `v2/cdn/endpoints/$ENDPOINT_ID/cache` [payload](https://docs.digitalocean.com/reference/api/api-reference/#operation/cdn_purge_cache) \n    can be requested every 20 seconds.\n\n### Sample Rate Limit Headers\n\n```\n    . . .\n    ratelimit-limit: 1200\n    ratelimit-remaining: 1193\n    rateLimit-reset: 1402425459\n    . . .\n```\n\n### Sample Rate Exceeded Response\n\n```\n    429 Too Many Requests\n    {\n            id: \"too_many_requests\",\n            message: \"API Rate limit exceeded.\"\n    }\n```\n\n## Curl Examples\n\nThroughout this document, some example API requests will be given using the\n`curl` command. This will allow us to demonstrate the various endpoints in a\nsimple, textual format.\n  \n  These examples assume that you are using a Linux or macOS command line. To run\nthese commands on a Windows machine, you can either use cmd.exe, PowerShell, or WSL:\n\n* For cmd.exe, use the `set VAR=VALUE` [syntax](https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/set_1)\nto define environment variables, call them with `%VAR%`, then replace all backslashes (`\\`) in the examples with carets (`^`).\n\n* For PowerShell, use the `$Env:VAR = \"VALUE\"` [syntax](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_environment_variables?view=powershell-7.2)\nto define environment variables, call them with `$Env:VAR`, then replace `curl` with `curl.exe` and all backslashes (`\\`) in the examples with backticks (`` ` ``).\n\n* WSL is a compatibility layer that allows you to emulate a Linux terminal on a Windows machine.\nInstall WSL with our [community tutorial](https://www.digitalocean.com/community/tutorials/how-to-install-the-windows-subsystem-for-linux-2-on-microsoft-windows-10), \nthen follow this API documentation normally.\n\nThe names of account-specific references (like Droplet IDs, for instance)\nwill be represented by variables. For instance, a Droplet ID may be\nrepresented by a variable called `$DROPLET_ID`. You can set the associated\nvariables in your environment if you wish to use the examples without\nmodification.\n\nThe first variable that you should set to get started is your OAuth\nauthorization token. The next section will go over the details of this, but\nyou can set an environmental variable for it now.\n\nGenerate a token by going to the [Apps & API](https://cloud.digitalocean.com/settings/applications)\nsection of the DigitalOcean control panel. Use an existing token if you have\nsaved one, or generate a new token with the \"Generate new token\" button.\nCopy the generated token and use it to set and export the TOKEN variable in\nyour environment as the example shows.\n\nYou may also wish to set some other variables now or as you go along. For\nexample, you may wish to set the `DROPLET_ID` variable to one of your\nDroplet IDs since this will be used frequently in the API.\n\nIf you are following along, make sure you use a Droplet ID that you control\nso that your commands will execute correctly.\n\nIf you need access to the headers of a response through `curl`, you can pass\nthe `-i` flag to display the header information along with the body. If you\nare only interested in the header, you can instead pass the `-I` flag, which\nwill exclude the response body entirely.\n\n\n### Set and Export your OAuth Token\n\n```\nexport DIGITALOCEAN_TOKEN=your_token_here\n```\n\n### Set and Export a Variable\n\n```\nexport DROPLET_ID=1111111\n```\n\n## Parameters\n\nThere are two different ways to pass parameters in a request with the API.\n\nWhen passing parameters to create or update an object, parameters should be\npassed as a JSON object containing the appropriate attribute names and\nvalues as key-value pairs. When you use this format, you should specify that\nyou are sending a JSON object in the header. This is done by setting the\n`Content-Type` header to `application/json`. This ensures that your request\nis interpreted correctly.\n\nWhen passing parameters to filter a response on GET requests, parameters can\nbe passed using standard query attributes. In this case, the parameters\nwould be embedded into the URI itself by appending a `?` to the end of the\nURI and then setting each attribute with an equal sign. Attributes can be\nseparated with a `&`. Tools like `curl` can create the appropriate URI when\ngiven parameters and values; this can also be done using the `-F` flag and\nthen passing the key and value as an argument. The argument should take the\nform of a quoted string with the attribute being set to a value with an\nequal sign.\n\n### Pass Parameters as a JSON Object\n\n```\n    curl -H \"Authorization: Bearer $DIGITALOCEAN_TOKEN\" \\\n        -H \"Content-Type: application/json\" \\\n        -d '{\"name\": \"example.com\", \"ip_address\": \"127.0.0.1\"}' \\\n        -X POST \"https://api.digitalocean.com/v2/domains\"\n```\n\n### Pass Filter Parameters as a Query String\n\n```\n     curl -H \"Authorization: Bearer $DIGITALOCEAN_TOKEN\" \\\n         -X GET \\\n         \"https://api.digitalocean.com/v2/images?private=true\"\n```\n\n## Cross Origin Resource Sharing\n\nIn order to make requests to the API from other domains, the API implements\nCross Origin Resource Sharing (CORS) support.\n\nCORS support is generally used to create AJAX requests outside of the domain\nthat the request originated from. This is necessary to implement projects\nlike control panels utilizing the API. This tells the browser that it can\nsend requests to an outside domain.\n\nThe procedure that the browser initiates in order to perform these actions\n(other than GET requests) begins by sending a \"preflight\" request. This sets\nthe `Origin` header and uses the `OPTIONS` method. The server will reply\nback with the methods it allows and some of the limits it imposes. The\nclient then sends the actual request if it falls within the allowed\nconstraints.\n\nThis process is usually done in the background by the browser, but you can\nuse curl to emulate this process using the example provided. The headers\nthat will be set to show the constraints are:\n\n*   **Access-Control-Allow-Origin**: This is the domain that is sent by the client or browser as the origin of the request. It is set through an `Origin` header.\n*   **Access-Control-Allow-Methods**: This specifies the allowed options for requests from that domain. This will generally be all available methods.\n*   **Access-Control-Expose-Headers**: This will contain the headers that will be available to requests from the origin domain.\n*   **Access-Control-Max-Age**: This is the length of time that the access is considered valid. After this expires, a new preflight should be sent.\n*   **Access-Control-Allow-Credentials**: This will be set to `true`. It basically allows you to send your OAuth token for authentication.\n\nYou should not need to be concerned with the details of these headers,\nbecause the browser will typically do all of the work for you.\n",
      "category": "AI & Machine Learning",
      "last_updated": "2025-08-03",
      "maintainer": "DigitalOcean API Team",
      "documentation_url": "https://digitalocean.com",
      "version": "2.0",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "DigitalOcean API",
      "paths_count": 183,
      "schemas_count": 0
    }
  },
  {
    "name": "discourse_api_documentation",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/discourse.local/latest/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "This page contains the documentation on how to use Discourse through API calls.\n\n> Note: For any endpoints not listed you can follow the\n[reverse engineer the Discourse API](https://meta.discourse.org/t/-/20576)\nguide to figure out how to use an API endpoint.\n\n### Request Content-Type\n\nThe Content-Type for POST and PUT requests can be set to `application/x-www-form-urlencoded`,\n`multipart/form-data`, or `application/json`.\n\n### Endpoint Names and Response Content-Type\n\nMost API endpoints provide the same content as their HTML counterparts. For example\nthe URL `/categories` serves a list of categories, the `/categories.json` API provides the\nsame information in JSON format.\n\nInstead of sending API requests to `/categories.json` you may also send them to `/categories`\nand add an `Accept: application/json` header to the request to get the JSON response.\nSending requests with the `Accept` header is necessary if you want to use URLs\nfor related endpoints returned by the API, such as pagination URLs.\nThese URLs are returned without the `.json` prefix so you need to add the header in\norder to get the correct response format.\n\n### Authentication\n\nSome endpoints do not require any authentication, pretty much anything else will\nrequire you to be authenticated.\n\nTo become authenticated you will need to create an API Key from the admin panel.\n\nOnce you have your API Key you can pass it in along with your API Username\nas an HTTP header like this:\n\n```\ncurl -X GET \"http://127.0.0.1:3000/admin/users/list/active.json\" \\\n-H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\\n-H \"Api-Username: system\"\n```\n\nand this is how POST requests will look:\n\n```\ncurl -X POST \"http://127.0.0.1:3000/categories\" \\\n-H \"Content-Type: multipart/form-data;\" \\\n-H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\\n-H \"Api-Username: system\" \\\n-F \"name=89853c20-4409-e91a-a8ea-f6cdff96aaaa\" \\\n-F \"color=49d9e9\" \\\n-F \"text_color=f0fcfd\"\n```\n\n### Boolean values\n\nIf an endpoint accepts a boolean be sure to specify it as a lowercase\n`true` or `false` value unless noted otherwise.\n",
      "category": "AI & Machine Learning",
      "last_updated": "2025-08-03",
      "maintainer": "discourse.local",
      "documentation_url": "https://discourse.local",
      "version": "latest",
      "openapi_version": "3.1.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "Discourse API Documentation",
      "paths_count": 68,
      "schemas_count": 0
    }
  },
  {
    "name": "d_d_5e_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/dnd5eapi.co/0.1/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "# Introduction\n\nWelcome to the dnd5eapi, the Dungeons & Dragons 5th Edition API!\nThis documentation should help you familiarize yourself with the resources\navailable and how to consume them with HTTP requests. Read through the getting\nstarted section before you dive in. Most of your problems should be solved\njust by reading through it.\n\n## Getting Started\n\nLet's make our first API request to the D&D 5th Edition API!\n\nOpen up a terminal and use [curl](http://curl.haxx.se/) or [httpie](http://httpie.org/)\nto make an API request for a resource. You can also scroll through the\ndefinitions below and send requests directly from the endpoint documentation!\n\nFor example, if you paste and run this `curl` command:\n```bash\ncurl -X GET \"https://www.dnd5eapi.co/api/ability-scores/cha\" -H \"Accept: application/json\"\n```\n\nWe should see a result containing details about the Charisma ability score:\n```bash\n{\n  \"index\": \"cha\",\n  \"name\": \"CHA\",\n  \"full_name\": \"Charisma\",\n  \"desc\": [\n    \"Charisma measures your ability to interact effectively with others. It\n      includes such factors as confidence and eloquence, and it can represent\n      a charming or commanding personality.\",\n    \"A Charisma check might arise when you try to influence or entertain\n      others, when you try to make an impression or tell a convincing lie,\n      or when you are navigating a tricky social situation. The Deception,\n      Intimidation, Performance, and Persuasion skills reflect aptitude in\n      certain kinds of Charisma checks.\"\n  ],\n  \"skills\": [\n    {\n      \"name\": \"Deception\",\n      \"index\": \"deception\",\n      \"url\": \"/api/skills/deception\"\n    },\n    {\n      \"name\": \"Intimidation\",\n      \"index\": \"intimidation\",\n      \"url\": \"/api/skills/intimidation\"\n    },\n    {\n      \"name\": \"Performance\",\n      \"index\": \"performance\",\n      \"url\": \"/api/skills/performance\"\n    },\n    {\n      \"name\": \"Persuasion\",\n      \"index\": \"persuasion\",\n      \"url\": \"/api/skills/persuasion\"\n    }\n  ],\n  \"url\": \"/api/ability-scores/cha\"\n}\n```\n\n## Authentication\n\nThe dnd5eapi is a completely open API. No authentication is required to query\nand get data. This also means that we've limited what you can do to just\n`GET`-ing the data. If you find a mistake in the data, feel free to\n[message us](https://discord.gg/TQuYTv7).\n\n## GraphQL\n\nThis API supports [GraphQL](https://graphql.org/). The GraphQL URL for this API\nis `https://www.dnd5eapi.co/graphql`. Most of your questions regarding the GraphQL schema can be answered\nby querying the endpoint with the Apollo sandbox explorer.\n\n## Schemas\n\nDefinitions of all schemas will be accessible in a future update. Two of the most common schemas are described here.\n\n### `APIReference`\nRepresents a minimal representation of a resource. The detailed representation of the referenced resource can be retrieved by making a request to the referenced `URL`.\n```\nAPIReference {\n  index     string\n  name      string\n  url       string\n}\n```\n<hr>\n\n### `DC`\nRepresents a difficulty check.\n```\nDC {\n  dc_type       APIReference\n  dc_value      number\n  success_type  \"none\" | \"half\" | \"other\"\n}\n```\n<hr>\n\n### `Damage`\nRepresents damage.\n```\nDamage {\n  damage_type     APIReference\n  damage_dice     string\n}\n```\n<hr>\n\n### `Choice`\nRepresents a choice made by a player. Commonly seen related to decisions made during character creation or combat (e.g.: the description of the cleric class, under **Proficiencies**, states \"Skills: Choose two from\tHistory, Insight, Medicine, Persuasion, and\tReligion\" [[SRD p15]](https://media.wizards.com/2016/downloads/DND/SRD-OGL_V5.1.pdf#page=15))\n```\nChoice {\n  desc      string\n  choose    number\n  type      string\n  from      OptionSet\n}\n```\n<hr>\n\n### `OptionSet`\nThe OptionSet structure provides the options to be chosen from, or sufficient data to fetch and interpret the options. All OptionSets have an `option_set_type` attribute that indicates the structure of the object that contains the options. The possible values are `options_array`, `equipment_category`, and `reference_list`. Other attributes on the OptionSet depend on the value of this attribute.\n- `options_array`\n  - `options` (array): An array of Option objects. Each item in the array represents an option that can be chosen.\n- `equipment_category`\n  - `equipment_category` (APIReference): A reference to an EquipmentCategory. Each item in the EquipmentCategory's `equipment` array represents one option that can be chosen.\n- `resource_list`\n  - `resource_list_url` (string): A reference (by URL) to a collection in the database. The URL may include query parameters. Each item in the resulting ResourceList's `results` array represents one option that can be chosen.\n<hr>\n\n### `Option`\nWhen the options are given in an `options_array`, each item in the array inherits from the Option structure. All Options have an `option_type` attribute that indicates the structure of the option. The value of this attribute indicates how the option should be handled, and each type has different attributes. The possible values and their corresponding attributes are listed below.\n- `reference` - A terminal option. Contains a reference to a Document that can be added to the list of options chosen.\n  - `item` (APIReference): A reference to the chosen item.\n- `action` - A terminal option. Contains information describing an action, for use within Multiattack actions.\n  - `action_name` (string): The name of the action, according to its `name` attribute.\n  - `count` (number | string): The number of times this action can be repeated if this option is chosen.\n  - `type` (string = `\"melee\" | \"ranged\" | \"ability\" | \"magic\"`, optional): For attack actions that can be either melee, ranged, abilities, or magic.\n- `multiple` - When this option is chosen, all of its child options are chosen, and must be resolved the same way as a normal option.\n  - `items` (array): An array of Option objects. All of them must be taken if the option is chosen.\n- `choice` - A nested choice. If this option is chosen, the Choice structure contained within must be resolved like a normal Choice structure, and the results are the chosen options.\n  - `choice` (Choice): The Choice to resolve.\n- `string` - A terminal option. Contains a reference to a string.\n  - `string` (string): The string.\n- `ideal` - A terminal option. Contains information about an ideal.\n  - `desc` (string): A description of the ideal.\n  - `alignments` (ApiReference[]): A list of alignments of those who might follow the ideal.\n- `counted_reference` - A terminal option. Contains a reference to something else in the API along with a count.\n  - `count` (number): Count.\n  - `of` (ApiReference): Thing being referenced.\n- `score_prerequisite` - A terminal option. Contains a reference to an ability score and a minimum score.\n  - `ability_score` (ApiReference): Ability score being referenced.\n  - `minimum_score` (number): The minimum score required to satisfy the prerequisite.\n- `ability_bonus` - A terminal option. Contains a reference to an ability score and a bonus\n  - `ability_score` (ApiReference): Ability score being referenced\n  - `bonus` (number): The bonus being applied to the ability score\n- `breath` - A terminal option: Contains a reference to information about a breath attack.\n  - `name` (string): Name of the breath.\n  - `dc` (DC): Difficulty check of the breath attack.\n  - `damage` ([Damage]): Damage dealt by the breath attack, if any.\n- `damage` - A terminal option. Contains information about damage.\n  - `damage_type` (ApiReference): Reference to type of damage.\n  - `damage_dice` (string): Damage expressed in dice (e.g. \"13d6\").\n  - `notes` (string): Information regarding the damage.\n\n## FAQ\n\n### What is the SRD?\nThe SRD, or Systems Reference Document, contains guidelines for publishing content under the OGL. This allows for some of the data for D&D 5e to be open source. The API only covers data that can be found in the SRD. [Here's a link to the full text of the SRD.](https://media.wizards.com/2016/downloads/DND/SRD-OGL_V5.1.pdf)\n\n### What is the OGL?\nThe Open Game License (OGL) is a public copyright license by Wizards of the Coast that may be used by tabletop role-playing game developers to grant permission to modify, copy, and redistribute some of the content designed for their games, notably game mechanics. However, they must share-alike copies and derivative works. [More information about the OGL can be found here.](https://en.wikipedia.org/wiki/Open_Game_License)\n\n### A monster, spell, subclass, etc. is missing from the API / Database. Can I add it?\nPlease check if the data is within the SRD. If it is, feel free to open an issue or PR to add it yourself. Otherwise, due to legal reasons, we cannot add it.\n\n### Can this API be self hosted?\nYes it can! You can also host the data yourself if you don't want to use the API at all. You can also make changes and add extra data if you like. However, it is up to you to merge in new changes to the data and API.\n\n#### Can I publish is on <insert platform>? Is this free use?\nYes, you can. The API itself is under the [MIT license](https://opensource.org/licenses/MIT), and the underlying data accessible via the API is supported under the SRD and OGL.\n\n# Status Page\n\nThe status page for the API can be found here: https://5e-bits.github.io/dnd-uptime/\n\n# Chat\n\nCome hang out with us [on Discord](https://discord.gg/TQuYTv7)!\n\n# Contribute\n\nThis API is built from two repositories.\n  - The repo containing the data lives here: https://github.com/bagelbits/5e-database\n  - The repo with the API implementation lives here: https://github.com/bagelbits/5e-srd-api\n\nThis is a evolving API and having fresh ideas are always welcome! You can\nopen an issue in either repo, open a PR for changes, or just discuss with\nother users in this discord.\n",
      "category": "AI & Machine Learning",
      "last_updated": "2025-08-03",
      "maintainer": "5eBits",
      "documentation_url": "https://github.com/5e-bits",
      "version": "0.1",
      "openapi_version": "3.0.1",
      "quality_score": 100,
      "is_popular": false,
      "title": "D&D 5e API",
      "paths_count": 47,
      "schemas_count": 49
    }
  },
  {
    "name": "docusign_rest_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/docusign.net/v2.1/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.",
      "category": "Development Tools",
      "last_updated": "2025-08-03",
      "maintainer": "DocuSign Developer Center",
      "documentation_url": "https://docs.docusign.com/esign",
      "version": "v2.1",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "DocuSign REST API",
      "paths_count": 208,
      "schemas_count": 580
    }
  },
  {
    "name": "nookipedia",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/dodo.ac/1.6.0/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "The Nookipedia API provides endpoints for retrieving *Animal Crossing* data pulled from the [Nookipedia wiki](https://nookipedia.com/wiki/Main_Page). A couple of the key benefits of using the Nookipedia API is access to data spanning the entire *Animal Crossing* series, as well as information that is constantly updated and expanding as editors work on the wiki.<br><br>Access to the Nookipedia API requires obtaining a key. This is so we can manage our scale and provide better support for our users. To request access to the API, please fill out [this form](https://forms.gle/wLwtXLerKhfDrRLY8).",
      "category": "AI & Machine Learning",
      "last_updated": "2025-08-03",
      "maintainer": "dodo.ac",
      "documentation_url": "https://dodo.ac",
      "version": "1.6.0",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "Nookipedia",
      "paths_count": 30,
      "schemas_count": 21
    }
  },
  {
    "name": "dracoon_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/dracoon.team/4.42.3/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>",
      "category": "AI & Machine Learning",
      "last_updated": "2025-08-03",
      "maintainer": "dracoon.team",
      "documentation_url": "https://dracoon.team",
      "version": "4.42.3",
      "openapi_version": "3.0.1",
      "quality_score": 100,
      "is_popular": false,
      "title": "DRACOON API",
      "paths_count": 181,
      "schemas_count": 282
    }
  },
  {
    "name": "visma_e_conomic_openapi",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/e-conomic.com/v20.0.0/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "# Changelog\r\n\r\n<details>\r\n  <summary>Click to see changelog.</summary>\r\n\r\n| Version | Description|\r\n|---------| ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\r\n| 20.0.0  | Customer contacts and delivery locations endpoints deprecated. You can find the same enpoints in [`Customers API`](https://apis.e-conomic.com/#Customers) \r\n| 19.0.0  | Page-based endpoints were moved under /paged url and cursor-based endpoints dropped the /all.\r\n| 18.0.0  | Added isDeleted flag to [`customer-contacts`](#tag/Customer-contacts) and included deleted contacts in the response. <br> Deleted contacts can be used for history purposes, but cannot be set as reference persons on sales documents. <br> In previous versions only customer-contacts/id returns deleted contacts as well.\r\n| 17.0.2  | `TimeEntryEmployeeNumberCannotBeUpdated` and `MileageEmployeeNumberCannotBeUpdated` error codes removed. The change affects all versions, but we bumped the version for transparency.\r\n| 17.0.1  | New custom [`OpenAPI extension`](#section/Retrieving-data/Custom-extensions-in-OpenAPI-specification) added in the specification: `x-error-codes`. Existing `x-required-roles` extension converted to an array of strings.\r\n| 17.0.0  | Improved the error model. Added `code` and `property` fields to the model. `code` represents the error code. `property` is the field name on which the input validation failed.\r\n| 16.4.0  | [`customer-deliverylocations`](#tag/Customer-delivery-locations) endpoints added.\r\n| 16.3.0  | [`customer-contacts`](#tag/Customer-contacts) endpoints added.  \r\n| 16.2.2  | Added input validations for required string properties, if a string property is required it can't be empty, it should contain at least 1 character.\r\n| 16.2.1  | Error codes extended for [`mileages`](#tag/Mileage-entries) and [`timeentries`](#tag/Time-entries). Affects all the exisiting versions.\r\n| 16.2.0  | - [`employeegroups`](#operation/DeleteEmployeeGroupById) DELETE endpoint added. <br>- [`employees`](#operation/DeleteEmployeeById) DELETE endpoint added. <br>- [`project-employeegroups`](#operation/DeleteProjectEmployeeGroupById) DELETE endpoint added. <br>- [`project-employees`](#operation/DeleteProjectEmployeeById) DELETE endpoint added.\r\n| 16.1.0  | [`Time entry prices`](#tag/Time-entry-prices) and [`Mileage entry prices`](#tag/Mileage-entry-prices) endpoints added.\r\n| 16.0.0  | Changed parameter schema for [`mileages`](#operation/ApproveMileageEntries) and [`timeentries`](#operation/ApproveTimeEntries) approve endpoints.\r\n| 15.0.0  | Added cost and sales accounts properties in [`activitygroups`](#tag/Activity-Groups) endpoints.\r\n| 14.1.3  | - Added new filter for `IsAccessible` in [`activities`](#tag/Activities) endpoints. <br>- Added new filter for `IsBarred` in [`costtypes`](#tag/Cost-Types) endpoints.\r\n| 14.1.2  | - Added input validations for [`activitygroups`](#tag/Activity-Groups). <br>- Updated description for [`projectgroups`](#operation/CreateProjectGroup) properties.\r\n| 14.1.1  | Added input validations for [`projectgroups`](#operation/CreateProjectGroup).\r\n| 14.1.0  | [`project-employees-count`](#operation/GetNumberOfProjectEmployees) endpoint added.                                                                                                                                                                                                                                             \r\n| 14.0.0  | - [`project-activities`](#tag/Project-Activities) endpoints added. <br>- `projects/activities` have been deprecated.|\r\n| 13.2.0  | [`costtypegroups`](#tag/Cost-Type-Groups) endpoints added.|\r\n| 13.1.0  | [`costtypes`](#tag/Cost-Types) endpoints added.|\r\n| 13.0.0  | - [`projectgroups`](#operation/CreateProjectGroup) POST endpoint added, `Number` made non-required,<br>- [`activitygroups`](#operation/CreateActivityGroup) POST endpoint added, `Number` made non-required.|\r\n| 12.0.0  | [`projects`](#tag/Projects) `Number` made non-required|\r\n| 11.0.0  | [`employees`](#tag/Employees) `Number` made required|\r\n| 10.1.2  | API version number moved to the server|\r\n| 10.1.1  | - [`activities`](#operation/GetAllowedActivities) `employeeNumber` maximum value changed to 999999. <br>- [`projects`](#operation/GetPagedListOfProjectUnderEmployee) `employeeNumber` maximum value changed to 999999.                                                                                                                                                                                                                                                                                                                                                                                             |\r\n| 10.1.0  | [`project-employees`](#operation/CreateProjectEmployee) POST endpoint added|\r\n| 10.0.0  | - [`activities`](#tag/Activities) POST and PUT endpoints added. <br>- [`activitygroups`](#tag/Activity-Groups) GET endpoints added. <br>- Object version field added to `activities`, `projectstatuses` and `projectgroups` endpoints.                                                                                                                                                                                                                                                                                                                                                                              |\r\n| 9.0.0   | `Project related settings for employee` resource renamed as `Project employee`|\r\n| 8.1.0   | [`project-customers`](#tag/Project-Customers) endpoints added|\r\n| 8.0.0   | - [`employeegroups`](#tag/Employee-groups) endpoints added: GET all paginated, GET count, POST and PUT. <br>- [`project-employeegroups`](#tag/Project-employee-groups) endpoints added: GET all paginated, GET all cursor-based, GET count, GET by number, POST and PUT. <br> - Object version field added to employee groups endpoints.                                                                                                                                                                                                                                                                            ||\r\n| 7.0.0   | [Projects related settings for employee](#tag/Project-employees) extended with new fields for Name, GroupNumber and IsBarred.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       |\r\n| 6.0.0   | Readonly property `IsReconciled` added to `TimeEntries` endpoint.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   |\r\n| 5.1.0   | [Project delete](#operation/DeleteProjectById) endpoint added|\r\n| 5.0.0   | - Project-related properties such as `isUser`, `userId`, `canApprove`, `canInvoice`, `employeeType` in `/employees` moved to `/project-employees`. <br>- Properties `lastUpdated`, `costPrice`, `salesPrice` and `invoicedtotal` in `/projects` changed to readonly.<br>- Property `date` in `/timeentries` changed to mandatory.<br>- Access permission to `/employees` changed to requiring access to `Sales`.<br>- PUT endpoints for `/timeentries/{number}`, `/employees/{number}`, `/employeeprojectrelatedsettings/{number}` have been deprecated and new ones without `{number}` in the URL have been added. |\r\n| 4.0.0   | `project.CustomerNumber` made non-required, range check introduced|\r\n| 3.1.0   | Error messages of time entry approval improved, `timeEntry.IsApproved`, `mileage.IsApproved` and `mileage.IncludeApproval` made read-only.                                                                                                                                                                                                                                                                                                                                                                                                                                                                          |\r\n| 3.0.0   | `mileage.Date` made required. Verification for `mileage.EmployeeNumber` and `mileage.Distance` added.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               |\r\n| 2.2.2   | Range check introduced in `projects.Number`, `employee.Number` and `employeeGroup.Number`|\r\n| 2.2.1   | Employees PATCH endpoint deprecated|\r\n| 2.2.0   | [`employeegroups/all`](#operation/GetAllEmployeeGroups) and [`employeegroups/{number}`](#operation/GetEmployeeGroupById) endpoints added.                                                                                                                                                                                                                                                                                                                                                                                                                                                                           |\r\n| 2.1.0   | [`/activities/allowed`](#operation/GetAllowedActivities) endpoint added to get allowed activities for an employee and project.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      |\r\n| 2.0.0   | Open API released! Endpoints related to Projects module added|\r\n\r\n</details>\r\n\n# TL;DR\r\n\r\n**Add these three headers to your requests.**\r\n\r\n| Header                | Value                      | What is this?                                                |\r\n| :-------------------- | :------------------------- | :----------------------------------------------------------- |\r\n| X-AppSecretToken      | YOUR_PRIVATE_TOKEN         | This identifies your app. This is your secret token. Try using the value `demo`. |\r\n| X-AgreementGrantToken | YOUR_AGREEMENT_GRANT_TOKEN | This identifies the grant issued by an agreement, to allow your app to access the agreements data. Try using the value `demo`. |\r\n| Content-Type          | application/json           | We’re a JSON based API. This tells us that you agree with us on using JSON. |\r\n\r\n### Examples\r\n\r\n#### jQuery\r\n\r\n```javascript/jQuery\r\n$.ajax({\r\n    url: \"https://apis.e-conomic.com/api/v20.0.0/projects\",\r\n    dataType: \"json\",\r\n    headers: {\r\n        'X-AppSecretToken': \"demo\",\r\n        'X-AgreementGrantToken': \"demo\",\r\n        'Content-Type': \"application/json\"\r\n    },\r\n    type: \"GET\"\r\n})\r\n    .always(function (data) {\r\n    $(\"#output\").text(JSON.stringify(data, null, 4));\r\n});\r\n```\r\n\r\n#### cURL\r\n\r\n```curl\r\ncurl -H \"X-AppSecretToken: demo\" -H \"X-AgreementGrantToken: demo\" https://apis.e-conomic.com/api/v20.0.0/projects\r\n```\r\n\r\n\r\n\r\n# Introduction\r\n\r\nWelcome to the **Visma e-conomic OpenAPI** documentation!\r\n\r\nThe e-conomic API is a document-based JSON REST API. \r\n\r\nFor more in-depth information about e-conomic itself, please have a look at the e-copedia [http://wiki.e-conomic.dk](http://wiki.e-conomic.dk/).\r\n\r\n## Usage\r\n\r\n- **Generating a client** can easily be done using tools like [swagger-codegen](https://github.com/swagger-api/swagger-codegen) or others that work with [OpenAPI Specification](https://github.com/OAI/OpenAPI-Specification) specs.\r\n\r\n\r\n## Versioning\r\n\r\nAPI releases are versioned using a three-part versioning scheme: `{major version}.{minor version}.{patch version}`.\r\n\r\nWe broadly follow [Semantic Versioning](https://semver.org/) principles when versioning the API. The major version number is incremented when a breaking change occurs. \r\n\r\nThe format is:\r\n\r\n`/api/v{major version}.{minor version}.{patch version}/{resource-name}`\r\n\r\nEach value of the above are integers and you should configure the specific version in each API call. \r\n\r\nAn example could be: `/api/v2.2.1/projects`\r\n\r\nTo track the changes of versions, please see our [changelog](#section/Changelog).\r\n\r\nWe reserve the right to deprecate versions at intervals since this allows for moving into a friendly environment for you faster.\r\n\r\n## Demo authentication\r\n\r\nIf you wish to try out the API before registering a developer agreement, you can do this by using the demo agreement, which mimics the authentication flow you will have to use when you create your app. All you have to do is specify HTTP header tokens `X-AgreementGrantToken: demo` and `X-AppSecretToken: demo`. Note however that you can only do GET requests with the demo agreement. If you want full access to our API's, you will need to register.\r\n\r\n# Retrieving data\r\n\r\nOur data is exposed as collections of items. Each item has many properties, with one property as a unique identifier, usually called `number` or `id`. You can always get a single item if you already know the unique identifier. In case the unique identifier is not known, you can always search the collection and retrieve an array of items that satisfy the search criteria, or retrieve only the count of items that satisfy the search criteria. When you search for items in a collection, you can always use filtering, sorting and pagination. When it comes to pagination, we offer two distinct approaches available on separate endpoints. You can read more about filtering, sorting and pagination in the following sections. \r\n\r\n## Filtering\r\n\r\nFiltering is enabled on all collection endpoints but not on all properties.\r\n\r\nFiltering on collections can be done using the query string parameter `filter`. A filter is made up of a set of predicates and follows a syntax inspired by mongoDB. A predicate is made up of a property name, an operator, and a value.\r\n\r\nExample: `?filter=name$eq:Joe`\r\n\r\nThis matches all resources with the value Joe in the property name.\r\n\r\nPredicates can be chained using either of the logical operators AND and OR.\r\n\r\nExample: `?filter=name$eq:Joe$and:city$like:*port`\r\n\r\nFiltering on strings is case insensitive.\r\n\r\n#### Filterable properties\r\nInformation about what properties allow filtering and on what operators can be found in the property in the schema for the collection. Each property that allows filtering has the property `\"x-filterable\"` in combination with `operators` set. If you try to filter on something that isn’t allowed the server will respond with a status code 400.\r\n\r\n#### Specifying Operator affinity\r\nIf you want to control the operator affinity then you can use parentheses.\r\n\r\nAn example is: `?filter=name$eq:Joe$and:(city$like:*port$or:age$lt:40)`\r\n\r\n#### URL Encoding\r\nURL parameter values should always be URL compatible. Always URL encode filter strings.\r\n\r\n#### Filter Operators\r\nThe possible filtering operators are:\r\n\r\n| Operator   | Syntax |\r\n| --------   | ------ |\r\n|Equals | $eq:|\r\n|Not equals | $ne:|\r\n|Greater than | $gt:|\r\n|Greater than or equal | $gte:|\r\n|Less than | $lt:|\r\n|Less than or equal | $lte:|\r\n|Substring match\t| $like:|\r\n|And also | $and:|\r\n|Or else | $or:|\r\n|In | $in:|\r\n|Not In | $nin:|\r\n\r\n#### Substring matching\r\n\r\nThe `$like:` operator supports both using wildcards (*) and not using wildcards. If no wildcards are used, the expression is considered a `contains` expression and effectively becomes a filter with a wildcard at the start of the string and one at the end of the string. This operator is only allowed on some properties.\r\n\r\n#### Escaping special characters in your filter\r\nTo not interfere with the parsing of the filter expression, certain escape sequences are necessary.\r\n\r\n- “$” is escaped with “$$”\r\n- “(” is escaped with “$(”\r\n- “)” is escaped with “$)”\r\n- “*” is escaped with “$*”\r\n- “,” is escaped with “$,”\r\n- “[” is escaped with “$[”\r\n- “]” is escaped with “$]”\r\n\r\n#### Using null values in your filter\r\nShould you want to filter for the nonexistence of a property (i.e. null value) you can use the null escape sequence.\r\n\r\n`$null:`\r\n\r\n#### Using in and not in operators\r\nTo determine whether a specified value matches any value in (or not in) a list you filter using the `$in:` or `$nin:` operator. The list to filter by has to be enclosed in brackets and values separated by commas.\r\n\r\n`customerNumber$in:[2,5,7,22,45]`\r\n\r\n\r\nIt is possible to also use the `$null:` keyword if you wish to include that in the filter. The max supported length of an array using the `$in:` or `$nin:` operator is 200.\r\n\r\n\r\n## Sorting\r\n\r\nSorting on strings is case insensitive.\r\n\r\n### Sort ascending\r\n\r\nSorting on collections can be done using the query string parameter ‘sort’.\r\n\r\n```\r\n?sort=name\r\n```\r\n\r\n### Sort descending\r\n\r\nThe default sort direction is ascending, but this can be turned by prepending a minus (-).\r\n\r\n```\r\n?sort=-name\r\n```\r\n\r\n### Sort by multiple properties\r\n\r\nIf you need to sort by multiple properties these can just be separated by commas. Mixing of directions is allowed.\r\n\r\n```\r\n?sort=-name,age\r\n```\r\n\r\n### Sort alphabetically\r\n\r\nIn certain cases, you might want to enforce that even numeric values are sorted alphabetically, so 1000 is less than 30. In those cases, you can prepend the sort property with a tilde (~).\r\n\r\n```\r\n?sort=~name\r\n```\r\n\r\n#### Sortable properties\r\nInformation about what properties are sortable can be found in the schema for the collection. Each property that allows sorting has the property `\"x-sortable\": true` set.\r\n\r\n\r\n## Pagination\r\n\r\nWhen it comes to retrieving a collection of items, you can use two distinct approaches:\r\n\r\n* **Cursor-based pagination** (continued loading of items using a `cursor` as a query parameter to get the next page of items)\r\n  * This is the recommended approach, and the one you should use by default.\r\n  * The endpoint naming scheme is **\"Retrieve all `Items`\"**. (Usage: `/{ITEM}?cursor={CURSOR_VALUE}`)\r\n\r\n\r\n* **Classic pagination** (limited functionality*. Specify `skippages` and `pagesize ` as query parameters to get a specific page of items)\r\n  * You should only consider using classic pagination, if you rely on loading pages (i.e. for list views or table/grid-based UI's).\r\n  * The endpoint naming scheme is **\"Retrieve a page of `Items`\"**. (Usage: `/{ITEM}/paged?skippages=0&pagesize=20`)  \r\n    \\* It's important to note that there is a limit of 10.000 items using this approach. Any items outside of the first 10.000 items will not be loaded.\r\n\r\nPlease bear in mind that the two approaches are supported by **separate endpoints**. To use classic pagination, add `/paged` to your request URL.\r\n\r\nIf you need to know the total count of items that you can expect to get from your search, you can use a separate endpoint called **\"Retrieve the number of `Items`\"**.  \r\nYou can also use the result of this endpoint to calculate the pagination navigation buttons for a table/grid-based UI.\r\n\r\n\r\n### Which approach should you use?\r\nWe highly recommend that you use cursor-based pagination because:\r\n- It is more performant and offers much faster retrieval of items;\r\n- It can be used for very large collections of many thousands or millions of items, whereas classic pagination is limited to only returning 10.000 results, everything else is ignored;  \r\n  Classic pagination is only appropriate when you have an app with a table/grid-based UI.\r\n\r\n### Cursor-based pagination\r\n\r\n#### How it works\r\n\r\nWhen you search for items in a large collection, the response will contain the first 1.000 items and a `cursor` that you can use in a subsequent request to get the next series of items. This way you can retrieve the next set of items only when needed (if 1.000 items suffice, you don't need to send a second request).\r\n\r\nPlease note that the cursor is currently the `id` of the first `item` on the next set and it should not be mistaken for the number of items which are yet to be displayed.\r\nAlso, if the cursor is not present in the response, it means that there are no more items in the results.\r\n\r\n##### Real world example\r\n\r\nI want to retrieve all projects.\r\n\r\n1) I send a request to `https://apis.e-conomic.com/api/v20.0.0/projects`\r\n   and get back an array of 1.000 projects, and a `cursor` with value `34781`\r\n\r\n\r\n2) I send a request for the next items in the resulting collection:  \r\n   `https://apis.e-conomic.com/api/v20.0.0/projects?cursor=34781`  \r\n   and get back an array of 1.000 projects and a cursor with value `87695`\r\n\r\n\r\n3) I send a request for the next items in the result:  \r\n   `https://apis.e-conomic.com/api/v20.0.0/projects?cursor=87695`  \r\n   and get back an array of 56 items and no cursor.  \r\n   No cursor means I have retrieved all the projects, i.e. I have reached the end of the list.\r\n\r\n\r\n### Classic pagination\r\n\r\nIf no parameters are used, the collection endpoint returns 20 items at a time. URL parameters allow you to increase this to up to 100 items or to skip pages if necessary.\r\n\r\n##### Real world example\r\n\r\nI want to show a grid with page size of 50 and pagination navigation buttons.\r\n\r\n1) I send a request to see how many projects there are in the collection:  \r\n   `https://apis.e-conomic.com/api/v20.0.0/projects/count`  \r\n   I get the number of projects in the collection, `2056`, and I can calculate the number of pages to be 2056 divided by 50 = 40 with 6 as remainder, meaning I have 41 pages total. I can then use this to present the user the navigation buttons.\r\n\r\n\r\n2) I send a request to retrieve the first page of projects that my user will see:  \r\n   `https://apis.e-conomic.com/api/v20.0.0/projects/paged?pagesize=50&sort=name`  \r\n   with this I get back an array of 50 projects, sorted alphabetically by the project name.\r\n\r\n\r\n3) Now if the user wants to see page number 6, I'll send a new request, skipping the first 5 pages to get the projects from page number 6:  \r\n   `https://apis.e-conomic.com/api/v20.0.0/projects/paged?pagesize=50&skippages=5&sort=name`  \r\n   I get back an array of 50 projects, that belong to page number 6 when sorting alphabetically by the project name.\r\n\r\n\r\n\r\n### Number of items in a collection\r\n\r\nAs mentioned before we offer endpoint to get the count of items in the collection. You can also use this info for calculation of pagination navigation in case of classic pagination.\r\n\r\nExample `https://apis.e-conomic.com/api/v20.0.0/projects/count`\r\n\r\n\r\n## HTTP Status Codes\r\n\r\nThe Open API returns these HTTP status codes.\r\n\r\n| Code | Text                   | Description                                                  |\r\n| :--- | :--------------------- | :----------------------------------------------------------- |\r\n| 200  | OK                     | Everything is OK                                             |\r\n| 201  | Created                | When you create resources, this is what you get. This will be accompanied by the created resource in the body and a location header with a link to the created resource. |\r\n| 204  | No Content             | In certain cases there is nothing to return. So we will let you know by returning a 204. |\r\n| 400  | Bad Request            | The request you made was somehow malformed. A malformed request could be failed validation on creation or updating. If you try to filter on something that isn’t filterable this is also what you’ll see. Whenever possible we will also try to include a developer hint to help you get around this issue. |\r\n| 401  | Unauthorized           | The credentials you supplied us with weren’t correct, or perhaps you forgot them altogether. If an agreement has revoked the grant they gave your app, this is what you will see. |\r\n| 403  | Forbidden              | You won’t necessarily have access to everything. So even though you were authorized we might still deny access to certain resources. This depends on the roles asked for when the grant was issued. |\r\n| 404  | Not Found              | This is returned when you try to request something that doesn’t exist. This could be a resource that has been deleted or just a URL you tried to hack. If you see a lot of these, it could be an indication that you aren’t using the links provided by the API. You should never need to concatenate any URLs. The API should provide you with the links needed. |\r\n| 405  | Method Not Allowed     | Not all endpoints support all HTTP methods. If you try issue a PUT request to a collection resource this is what you get. |\r\n| 415  | Unsupported Media Type | Our API is a JSON api. If you ask us to give you anything else, we give you this, and tell you why in the JSON body of the response. |\r\n| 500  | Internal Server Error  | We don’t like to see these, and they are flagged in our logs. When you see this, something went wrong on our end. Either try again, or contact our support. |\r\n\r\n\r\n## Required and Readonly Properties\r\n\r\nSince OpenAPI allows client generation based on the specification, we decided to use the same model/schema in our for both read and write endpoints where possible.\r\n\r\nThis led us to chose not to have the Id/Number in the URL parameter for PUT requests, but to use the one from the body, so there is no confusion.\r\n\r\nWhen a property is marked as `required` it means you need to provide a value on each POST and PUT requests.\r\n\r\nWhen a property is marked as `readonly` it means you should provide the same value you get in the GET requests, or do not send the property in the JSON at all (skip it).\r\n\r\n## Custom resource encoding\r\n\r\nFor some resource ids (the direct URL path to a resource) the question of non-alphanumeric characters must be solved in REST APIs by either encoding or replacement to ensure URL compatibility.\r\n\r\nIn the e-conomic REST API a subset of non-alphanumeric characters are replaced using a custom scheme for resource URLs:\r\n\r\n| Character        | Replacement |\r\n| :--------------- | :---------- |\r\n| “<”              | *0*         |\r\n| “>”              | *1*         |\r\n| “*”              | *2*         |\r\n| “%”              | *3*         |\r\n| “:”              | *4*         |\r\n| “&”              | *5*         |\r\n| “/”              | *6*         |\r\n| “\\”              | *7*         |\r\n| “_”              | *8*         |\r\n| “ ” (whitespace) | *9*         |\r\n| “?”              | *10*        |\r\n| “.”              | *11*        |\r\n| “#”              | *12*        |\r\n| “+”              | *13*        |\r\n\r\nExample: Product “My Awesome Product_Discount5%” Resource URL (self): https://apis.e-conomic.com/products/My_9_Awesome_9_Product_8_Discount5_3_\r\n\r\nAll other non-alphanumeric characters in resource URLs are standard URL encoded. Please refer to standard URL encoding for characters not mentioned above.\r\n\r\n## Implementation specifics\r\n\r\nHelpful details to know when implementing e-conomic REST.\r\n\r\n### Booleans\r\n\r\nBooleans should only be expected to be represented in responses when true. A false boolean is omitted from response body. The same logic applies to write operations such as POST and PUT.\r\n\r\n### Null values\r\n\r\nNull values are omitted from the response body.\r\n\r\n### Nulling\r\n\r\nWe do not generally accept null as a value and a validation exception should be expected. To null a property you must exclude it from your JSON on the write operation.\r\n\r\n## Object version\r\n\r\nObjectVersion is the mechanism that enforces updates only on latest state of an object.\r\nObjectVersion property is mandatory in Put Requests.\r\nObjectVersion property is retrieved on Get Request and needs to be included in Put Request.\r\nIf object was modified between Get and Put requests, Put request will fail with error code `409 Conflict`\r\n\r\n```\r\n{\r\n  \"message\": \"Update conflict. Version does not match.\",\r\n  \"developerHint\": \"The resource has been updated by another user. Retrieve the resource/object and try the update again. This is needed in order to prevent you from rolling back another user's update.\",\r\n  \"logId\": \"09580053-1141-4e7f-85e1-bed8600e0278\",\r\n  \"logTimeUtc\": \"2021-11-04T09:07:56\",\r\n  \"property\": \"version\"\r\n}\r\n```\r\n\r\n## Custom extensions in OpenAPI specification\r\n\r\nIn the specification file, there are some custom extensions that developers can make use of when consuming endpoints. \r\nThose extensions are always prefixed by `x-`.\r\n\r\n1) `x-required-roles`: The list of roles that are required for each group of endpoints.\r\n2) `x-error-codes`: The list of error codes that are potentially returned from each group of endpoints.\r\n",
      "category": "AI & Machine Learning",
      "last_updated": "2025-08-03",
      "maintainer": "e-conomic.com",
      "documentation_url": "https://www.e-conomic.com/",
      "version": "v20.0.0",
      "openapi_version": "3.0.1",
      "quality_score": 100,
      "is_popular": false,
      "title": "Visma e-conomic OpenAPI",
      "paths_count": 70,
      "schemas_count": 44
    }
  },
  {
    "name": "elmah_io_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/elmah.io/v3/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "This is the public REST API for elmah.io. All of the integrations communicates with elmah.io through this API.<br/><br/>For additional help getting started with the API, visit the following help articles:<br/><ul><li>[Using the REST API](https://docs.elmah.io/using-the-rest-api/)</li><li>[Where is my API key?](https://docs.elmah.io/where-is-my-api-key/)</li><li>[Where is my log ID?](https://docs.elmah.io/where-is-my-log-id/)</li><li>[How to configure API key permissions](https://docs.elmah.io/how-to-configure-api-key-permissions/)</li></ul>",
      "category": "Development Tools",
      "last_updated": "2025-08-03",
      "maintainer": "elmah.io",
      "documentation_url": "https://elmah.io",
      "version": "v3",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "elmah.io API",
      "paths_count": 16,
      "schemas_count": 17
    }
  },
  {
    "name": "api_v1_0_0",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/envoice.in/v1/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "[![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/80638214aa04722c9203)\r\n<span style='margin-left: 0.5em;'>or</span>\r\n<a href='https://documenter.getpostman.com/view/3559821/TVeqcn2L' class='openapi-button' _ngcontent-c6>View Postman docs</a>\r\n\r\n# Quickstart\r\n\r\nVisit [github](https://github.com/EmitKnowledge/Envoice) to view the quickstart tutorial.\r\n\r\n<div class='postman-tutorial'>\r\n\r\n# Tutorial for running the API in postman\r\n\r\nClick on \"\"Run in Postman\"\" button\r\n<br /><br />\r\n![postman - tutorial - 1](/Assets/images/api/postman-tutorial/postman-tutorial-1.png)\r\n\r\n --- \r\n\r\nA new page will open.\r\nClick the \"\"Postman for windows\"\" to run postman as a desktop app.\r\nMake sure you have already [installed](https://www.getpostman.com/docs/postman/launching_postman/installation_and_updates) Postman.\r\n<br /><br />\r\n![postman - tutorial - 2](/Assets/images/api/postman-tutorial/postman-tutorial-2.png)\r\n\r\n --- \r\n\r\nIn chrome an alert might show up to set a default app for opening postman links. Click on \"\"Open Postman\"\".\r\n<br /><br />\r\n![postman - tutorial - 3](/Assets/images/api/postman-tutorial/postman-tutorial-3.png)\r\n\r\n --- \r\n\r\nThe OpenAPI specification will be imported in Postman as a new collection named \"\"Envoice api\"\"\r\n<br /><br />\r\n![postman - tutorial - 4](/Assets/images/api/postman-tutorial/postman-tutorial-4.png)\r\n\r\n --- \r\n\r\nWhen testing be sure to check and modify the environment variables to suit your api key and secret. The domain is set to envoice's endpoint so you don't really need to change that.  \r\n<sub>\\*Eye button in top right corner </sub>\r\n<br /><br /> \r\n![postman - tutorial - 5](/Assets/images/api/postman-tutorial/postman-tutorial-5.png)\r\n<br /><br /> \r\n![postman - tutorial - 6](/Assets/images/api/postman-tutorial/postman-tutorial-6.png)\r\n\r\n --- \r\n\r\nYou don't need to change the values of the header parameters, because they will be replaced automatically when you send a request with real values from the environment configured in the previous step.\r\n<br /><br />\r\n![postman - tutorial - 7](/Assets/images/api/postman-tutorial/postman-tutorial-7.png)\r\n\r\n --- \r\n\r\nModify the example data to suit your needs and send a request.\r\n<br /><br />\r\n![postman - tutorial - 8](/Assets/images/api/postman-tutorial/postman-tutorial-8.png)\r\n</div>\r\n\r\n# Webhooks\r\n\r\nWebhooks allow you to build or set up Envoice Apps which subscribe to invoice activities. \r\nWhen one of those events is triggered, we'll send a HTTP POST payload to the webhook's configured URL. \r\nWebhooks can be used to update an external invoice data storage.\r\n\r\nIn order to use webhooks visit [this link](/account/settings#api-tab) and add upto 10 webhook urls that will return status `200` in order to signal that the webhook is working.\r\nAll nonworking webhooks will be ignored after a certain period of time and several retry attempts.\r\nIf after several attempts the webhook starts to work, we will send you all activities, both past and present, in chronological order.\r\n\r\nThe payload of the webhook is in format:\r\n```\r\n{\r\n    Signature: \"\"sha256 string\"\",\r\n    Timestamp: \"\"YYYY-MM-DDTHH:mm:ss.FFFFFFFZ\"\",\r\n    Activity: {\r\n        Message: \"string\",\r\n        Link: \"share url\",\r\n        Type: int,        \r\n        InvoiceNumber: \"string\",\r\n        InvoiceId: int,        \r\n        OrderNumber: \"string\",\r\n        OrderId: int,\r\n        Id: int,\r\n        CreatedOn: \"YYYY-MM-DDTHH:mm:ss.FFFFFFFZ\"\r\n    }\r\n}\r\n```            ",
      "category": "AI & Machine Learning",
      "last_updated": "2025-08-03",
      "maintainer": "envoice.in",
      "documentation_url": "https://envoice.in",
      "version": "v1",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "API v1.0.0",
      "paths_count": 61,
      "schemas_count": 110
    }
  },
  {
    "name": "etherpad_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/etherpad.local/1.2.15/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "Etherpad is a real-time collaborative editor scalable to thousands of simultaneous real time users. It provides full data export capabilities, and runs on your server, under your control.",
      "category": "Development Tools",
      "last_updated": "2025-08-03",
      "maintainer": "The Etherpad Foundation",
      "documentation_url": "https://etherpad.org/",
      "version": "1.2.15",
      "openapi_version": "3.0.2",
      "quality_score": 100,
      "is_popular": false,
      "title": "Etherpad API",
      "paths_count": 48,
      "schemas_count": 3
    }
  },
  {
    "name": "exavault",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/exavault.com/2.0/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "ExaVaults API allows you to incorporate ExaVaults suite of file transfer and user management tools into your own application.\\nExaVault supports both POST (recommended when requesting large data sets) and GET operations, and requires an API key in order to use.",
      "category": "Development Tools",
      "last_updated": "2025-08-03",
      "maintainer": "ExaVault Support",
      "documentation_url": "https://www.exavault.com/developer/",
      "version": "2.0",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "ExaVault",
      "paths_count": 35,
      "schemas_count": 65
    }
  },
  {
    "name": "openfec",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/fec.gov/1.0/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "This application programming interface (API) allows you to explore the way candidates and committees fund their campaigns. \n\n The Federal Election Commission (FEC) API is a RESTful web service supporting full-text and field-specific searches on FEC data. [Bulk downloads](https://www.fec.gov/data/advanced/?tab=bulk-data) are available on the current site. Information is tied to the underlying forms by file ID and image ID. Data is updated nightly. \n\n There are a lot of data, and a good place to start is to use search to find interesting candidates and committees. Then, you can use their IDs to find report or line item details with the other endpoints. If you are interested in individual donors, check out contributor information in the `/schedule_a/` endpoints. \n\n <b class=\"body\" id=\"getting_started_head\">Getting started with the openFEC API</b><br> \n\n If you would like to use the FEC's API programmatically, you can sign up for your own API key using our form. Alternatively, you can still try out our API without an API key by using the web interface and using DEMO_KEY. Note that when you use the openFEC API you are subject to the [Terms of Service](https://github.com/fecgov/FEC/blob/master/TERMS-OF-SERVICE.md) and [Acceptable Use policy](https://github.com/fecgov/FEC/blob/master/ACCEPTABLE-USE-POLICY.md). \n\n Signing up for an API key will enable you to place up to 1,000 calls an hour. Each call is limited to 100 results per page. You can email questions, comments or a request to get a key for 7,200 calls an hour (120 calls per minute) to <a href=\"mailto:APIinfo@fec.gov\">APIinfo@fec.gov</a>. You can also ask questions and discuss the data in a community led [group](https://groups.google.com/forum/#!forum/fec-data). \n\n The model definitions and schema are available at [/swagger](/swagger/). This is useful for making wrappers and exploring the data. \n\n A few restrictions limit the way you can use FEC data. For example, you can’t use contributor lists for commercial purposes or to solicit donations. [Learn more here](https://www.fec.gov/updates/sale-or-use-contributor-information/). \n\n [Inspect our source code](https://github.com/fecgov/openFEC). We welcome issues and pull requests! \n\n <p><br></p> <h2 class=\"title\" id=\"signup_head\">Sign up for an API key</h2> <div id=\"apidatagov_signup\">Loading signup form...</div>",
      "category": "AI & Machine Learning",
      "last_updated": "2025-08-03",
      "maintainer": "fec.gov",
      "documentation_url": "https://fec.gov",
      "version": "1.0",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "OpenFEC",
      "paths_count": 92,
      "schemas_count": 172
    }
  },
  {
    "name": "flat_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/flat.io/2.13.0/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "The Flat API allows you to easily extend the abilities of the [Flat Platform](https://flat.io), with a wide range of use cases including the following:\n\n* Creating and importing new music scores using MusicXML, MIDI, Guitar Pro (GP3, GP4, GP5, GPX, GP), PowerTab, TuxGuitar and MuseScore files\n* Browsing, updating, copying, exporting the user's scores (for example in MP3, WAV or MIDI)\n* Managing educational resources with Flat for Education: creating & updating the organization accounts, the classes, rosters and assignments.\n\nThe Flat API is built on HTTP. Our API is RESTful It has predictable resource URLs. It returns HTTP response codes to indicate errors. It also accepts and returns JSON in the HTTP body.\nThe [schema](/swagger.yaml) of this API follows the [OpenAPI Initiative (OAI) specification](https://www.openapis.org/), you can use and work with [compatible Swagger tools](http://swagger.io/open-source-integrations/).\nThis API features Cross-Origin Resource Sharing (CORS) implemented in compliance with [W3C spec](https://www.w3.org/TR/cors/).\n\nYou can use your favorite HTTP/REST library for your programming language to use Flat's API. This specification and reference is [available on Github](https://github.com/FlatIO/api-reference).\n\nGetting Started and learn more:\n\n* [API Overview and introduction](https://flat.io/developers/docs/api/)\n* [Authentication (Personal Access Tokens or OAuth2)](https://flat.io/developers/docs/api/authentication.html)\n* [SDKs](https://flat.io/developers/docs/api/sdks.html)\n* [Rate Limits](https://flat.io/developers/docs/api/rate-limits.html)\n* [Changelog](https://flat.io/developers/docs/api/changelog.html)\n",
      "category": "AI & Machine Learning",
      "last_updated": "2025-08-03",
      "maintainer": "Flat",
      "documentation_url": "https://flat.io/developers/docs/api/",
      "version": "2.13.0",
      "openapi_version": "3.0.2",
      "quality_score": 100,
      "is_popular": false,
      "title": "Flat API",
      "paths_count": 51,
      "schemas_count": 76
    }
  },
  {
    "name": "flickr_api_schema",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/flickr.com/1.0.0/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "A subset of Flickr's API defined in Swagger format.",
      "category": "Development Tools",
      "last_updated": "2025-08-03",
      "maintainer": "flickr.com",
      "documentation_url": "https://flickr.com",
      "version": "1.0.0",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "Flickr API Schema",
      "paths_count": 25,
      "schemas_count": 16
    }
  },
  {
    "name": "frankie_financial_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/frankiefinancial.io/1.5.3/swagger.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "------  \nThis API allows developers to integrate the Frankie Financial Compliance Utility into their applications. The API allows:\n  - Checking name, address, date of birth against national databases\n  - Validating Australian driver's licences, passports, medicare, visas and other Australian national ID documents\n  - Validating Australian electricity bills\n  - Validating NZ driver's licences\n  - Validating Chinese bank cards and national ID card\n  - Validating International passports and national ID documents\n  - PEP, Sanctions, Watchlist and adverse media checking\n  - Australian visa checks \n  - Fraud list and fraud background checks\n  - ID validation and selfie check comparisons.\n  \n------  \n \nIndustry specific services\n\n  - Comparing Australian electricity retailers for a better deal.\n\n------  \n \nKYB specific services\n\n  - Query organisation ownership\n  - Perform KYC & AML checks on shareholders, beneficial owners and office bearers.\n  - Query credit score and credit reports\n  - International company searches\n  - International company profiles\n  \n------  \nThe full version of this documentation along with supplemental articles can be found here:\n  - https://apidocs.frankiefinancial.com/\n\nThe traditional Swagger view of this documentation can be found here:\n  - https://app.swaggerhub.com/apis-docs/FrankieFinancial/kycutility\n\n------  \nSandbox base URL is:\n  - https://api.demo.frankiefinancial.io/compliance/v1.2\n  \n  - We do have an old sandbox at https://sandbox.frankiefinancial.com/compliance/v1.2 but this has been retired.\n\n  - All calls are the same as production, only with canned data. \n\n  - Full Swagger definition, along with test data for playing in the sandbox can be obtained once initial commercial discussions have commenced.\n\n  - Production and optional UAT access will be opened up only to those with a signed commercial contract.\n  \n------  \nContact us at hello@frankiefinancial.com to speak with a sales rep about issuing a Customer ID and Sandbox api key.\n",
      "category": "AI & Machine Learning",
      "last_updated": "2025-08-03",
      "maintainer": "frankiefinancial.io",
      "documentation_url": "https://frankiefinancial.io",
      "version": "1.5.3",
      "openapi_version": "2.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "Frankie Financial API",
      "paths_count": 42,
      "schemas_count": 174
    }
  },
  {
    "name": "gerermesaffaires_rest_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/gerermesaffaires.com/1.0.6/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "Sécurisez vos données en interfaçant votre logiciel métier avec le service en ligne GererMesAffaires",
      "category": "AI & Machine Learning",
      "last_updated": "2025-08-03",
      "maintainer": "gerermesaffaires.com",
      "documentation_url": "https://api.gerermesaffaires.com/",
      "version": "1.0.6",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "GererMesAffaires {REST:API}",
      "paths_count": 180,
      "schemas_count": 53
    }
  },
  {
    "name": "gitea_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/gitea.io/1.20.0+dev-539-g5e389228f/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "This documentation describes the Gitea API.",
      "category": "Development Tools",
      "last_updated": "2025-08-03",
      "maintainer": "gitea.io",
      "documentation_url": "https://gitea.io",
      "version": "1.20.0+dev-539-g5e389228f",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "Gitea API.",
      "paths_count": 217,
      "schemas_count": 171
    }
  },
  {
    "name": "eqivo_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/github.com/v0.1/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "Eqivo OpenApi Specification",
      "category": "Development Tools",
      "last_updated": "2025-08-03",
      "maintainer": "github.com",
      "documentation_url": "https://github.com",
      "version": "v0.1",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": true,
      "title": "Eqivo API",
      "paths_count": 29,
      "schemas_count": 59
    }
  },
  {
    "name": "travel_partner_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/google.com/v3/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "The Travel Partner API provides you with a RESTful interface to the Google Hotel Center platform. It enables an app to efficiently retrieve and change Hotel Center data, and is thus suitable for managing large or complex accounts.",
      "category": "Development Tools",
      "last_updated": "2025-08-03",
      "maintainer": "Google",
      "documentation_url": "https://developers.google.com/hotels/hotel-prices/api-reference",
      "version": "v3",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "Travel Partner API",
      "paths_count": 17,
      "schemas_count": 52
    }
  },
  {
    "name": "google_home",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/google.home/2.0/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "# Google Home Local API\nThis is an unofficial documentation of the local API used by the Home app to communicate with GH devices.\n[GitHub Repo](https://github.com/rithvikvibhu/GHLocalApi)\n\n[![GitHub stars](https://img.shields.io/github/stars/rithvikvibhu/GHLocalApi)](https://github.com/rithvikvibhu/GHLocalApi/stargazers) [![GitHub license](https://img.shields.io/github/license/rithvikvibhu/GHLocalApi)](https://github.com/rithvikvibhu/GHLocalApi/blob/master/LICENSE.md)\n\n## Getting Started\n\nRequests must be made over HTTPS, port 8443, so the base URL for these endpoints is: `https://<google-home-ip>:8443/setup/`\n\nGet the IP of Google Home from the Google Home app (Device Settings -> End of the list) or from your router.\n\nGET requests are simple, in the browser kind.  \nPOST requests need to set the header (when there's a body): `content-type: application/json`\n\n## Authentication\n\nSince June 2019, most requests (with exceptions like `/setup/eureka_info`) need a local authorization token.\n\nThere are 3 kinds of tokens involved here:\n\n### Local Authorization Token\nThis token must be sent in all requests in the header `cast-local-authorization-token`. It is short-lived (~1 day) and may change unexpectedly (with a sync, change in homegraph, etc.)\n##### Get this token\n- With access to an android device, [get this token directly by either method](https://gist.github.com/rithvikvibhu/1a0f4937af957ef6a78453e3be482c1f).\n- Without a device, or to integrate it with a script, use an access token to get the homegraph and extract the token. To get an access token, read the next section. Check the example section for more info.\n\n### Access Token\nThis is a standard google oauth2 access token. It is in the form `ya29.***`.\nThis gives access to the Google Home Foyer API. These expire in an hour.\nUse this to get the homegraph (and then the local authorization token above).\n##### Get this token\nTo get this access token, either a Google account username/password or a Google Master Token is needed. More info in the gist.\nUse the script [from this gist](https://gist.github.com/rithvikvibhu/952f83ea656c6782fbd0f1645059055d).\n\n### Master Token\nThis is in the form `aas_et/***` and can be used to request access tokens.\n##### Get this token\nThe same [script in the gist](https://gist.github.com/rithvikvibhu/952f83ea656c6782fbd0f1645059055d) that gets the access token can also get the master token. Needs Google account creds.\n\n## Example\n\nHere's the whole flow from just a pair of username/password to using the local API.\n\nPrerequisites:\n- [grpcurl](https://github.com/fullstorydev/grpcurl)\n- [Proto files](https://drive.google.com/drive/folders/1RvnN3y-G23pd2SWHmfV_7sef8QU5GNF4?usp=sharing) (preserve folder structure)\n\n### 1. Get an access token with the script\n- Download get_tokens.py\n- Fill in username and password\n```sh\npython3 get_tokens.py\n# Note down the access token printed.\n```\n\n### 2. Use the access token and get home graph\n- This prints the json and uses jq to parse and filter out the fields deviceName and localAuthToken\n- This will give a list of all devices and their local auth tokens\n```sh\n./grpcurl -H 'authorization: Bearer ya29.a0Af****' \\\n\t-import-path /path/to/protos \\\n\t-proto /path/to/protos/google/internal/home/foyer/v1.proto \\\n\tgooglehomefoyer-pa.googleapis.com:443 \\\n\tgoogle.internal.home.foyer.v1.StructuresService/GetHomeGraph | jq '.home.devices[] | {deviceName, localAuthToken}'\n# Note down the local auth token for the device you want.\n```\n\n### 3. Make the call to the local device using the local auth token\n```sh\ncurl -H \"cast-local-authorization-token: LOCAL_AUTH_TOKEN\" --verbose --insecure https://192.168.0.18:8443/setup/bluetooth/status\n```",
      "category": "AI & Machine Learning",
      "last_updated": "2025-08-03",
      "maintainer": "google.home",
      "documentation_url": "https://google.home",
      "version": "2.0",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "Google Home",
      "paths_count": 30,
      "schemas_count": 70
    }
  },
  {
    "name": "graphhopper_directions_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/graphhopper.com/1.0.0/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "\nWith the [GraphHopper Directions API](https://www.graphhopper.com/products/) you can integrate A-to-B route planning, turn-by-turn navigation,\nroute optimization, isochrone calculations and other tools in your application.\n\nThe GraphHopper Directions API consists of the following RESTful web services:\n\n * [Routing API](#tag/Routing-API),\n * [Route Optimization API](#tag/Route-Optimization-API),\n * [Isochrone API](#tag/Isochrone-API),\n * [Map Matching API](#tag/Map-Matching-API),\n * [Matrix API](#tag/Matrix-API),\n * [Geocoding API](#tag/Geocoding-API) and\n * [Cluster API](#tag/Cluster-API).\n\n# Explore our APIs\n\n## Get started\n\n1. [Sign up for GraphHopper](https://support.graphhopper.com/a/solutions/articles/44001976025)\n2. [Create an API key](https://support.graphhopper.com/a/solutions/articles/44001976027)\n\nEach API part has its own documentation. Jump to the desired API part and learn about the API through the given examples and tutorials.\n\nIn addition, for each API there are specific sample requests that you can send via Insomnia or Postman to see what the requests and responses look like.\n\n## Insomnia\n\nTo explore our APIs with [Insomnia](https://insomnia.rest/), follow these steps:\n\n1. Open Insomnia and Import [our workspace](https://raw.githubusercontent.com/graphhopper/directions-api-doc/master/web/restclients/GraphHopper-Direction-API-Insomnia.json).\n2. Specify [your API key](https://graphhopper.com/dashboard/#/register) in your workspace: Manage Environments -> Base Environment -> `\"api_key\": your API key`\n3. Start exploring\n\n![Insomnia](./img/insomnia.png)\n\n## Postman\n\nTo explore our APIs with [Postman](https://www.getpostman.com/), follow these steps:\n\n1. Import our [request collections](https://raw.githubusercontent.com/graphhopper/directions-api-doc/master/web/restclients/graphhopper_directions_api.postman_collection.json) as well as our [environment file](https://raw.githubusercontent.com/graphhopper/directions-api-doc/master/web/restclients/graphhopper_directions_api.postman_environment.json).\n2. Specify [your API key](https://graphhopper.com/dashboard/#/register) in your environment: `\"api_key\": your API key`\n3. Start exploring\n\n![Postman](./img/postman.png)\n\n## API Client Libraries\n\nTo speed up development and make coding easier, we offer the following client libraries:\n\n * [JavaScript client](https://github.com/graphhopper/directions-api-js-client) - try the [live examples](https://graphhopper.com/api/1/examples/)\n * [Others](https://github.com/graphhopper/directions-api-clients) like C#, Ruby, PHP, Python, ... automatically created for the Route Optimization API\n\n### Bandwidth reduction\n\nIf you create your own client, make sure it supports http/2 and gzipped responses for best speed.\n\nIf you use the Matrix, the Route Optimization API or the Cluster API and want to solve large problems, we recommend you to reduce bandwidth\nby [compressing your POST request](https://gist.github.com/karussell/82851e303ea7b3459b2dea01f18949f4)\nand specifying the header as follows: `Content-Encoding: gzip`. This will also avoid the HTTP 413 error \"Request Entity Too Large\".\n\n## Contact Us\n\nIf you have problems or questions, please read the following information:\n\n- [FAQ](https://graphhopper.com/api/1/docs/FAQ/)\n- [Public forum](https://discuss.graphhopper.com/c/directions-api)\n- [Contact us](https://www.graphhopper.com/contact-form/)\n- [GraphHopper Status Page](https://status.graphhopper.com/)\n\nTo stay informed about the latest developments, you can\n\n- follow us on [twitter](https://twitter.com/graphhopper/),\n- read [our blog](https://graphhopper.com/blog/),\n- watch [our documentation repository](https://github.com/graphhopper/directions-api-doc),\n- sign up for our newsletter or\n- [our forum](https://discuss.graphhopper.com/c/directions-api).\n\nSelect the channel you like the most.\n\n\n# Map Data and Routing Profiles\n\nCurrently, our main data source is [OpenStreetMap](https://www.openstreetmap.org). We also integrated other network data providers.\nThis chapter gives an overview about the options you have.\n\n## OpenStreetMap\n\n#### Geographical Coverage\n\n[OpenStreetMap](https://www.openstreetmap.org) covers the whole world. If you want to see for yourself if we can provide data suitable for your region,\nplease visit [GraphHopper Maps](https://graphhopper.com/maps/).\nYou can edit and modify OpenStreetMap data if you find that important information is missing, e.g. a weight limit for a bridge.\n[Here](https://wiki.openstreetmap.org/wiki/Beginners%27_guide) is a beginner's guide that shows how to add data. If you have edited data, we usually consider your data after 1 week at the latest.\n\n#### Supported Vehicle Profiles\n\nThe Routing, Matrix and Route Optimization APIs support the following vehicle profiles:\n\nName       | Description           | Restrictions              | Icon\n-----------|:----------------------|:--------------------------|:---------------------------------------------------------\ncar        | Car mode              | car access                | ![car image](https://graphhopper.com/maps/img/car.png)\nsmall_truck| Small truck like a Mercedes Sprinter, Ford Transit or Iveco Daily | height=2.7m, width=2+0.4m, length=5.5m, weight=2080+1400 kg | ![small truck image](https://graphhopper.com/maps/img/small_truck.png)\ntruck      | Truck like a MAN or Mercedes-Benz Actros | height=3.7m, width=2.6+0.5m, length=12m, weight=13000 + 13000 kg, hgv=yes, 3 Axes | ![truck image](https://graphhopper.com/maps/img/truck.png)\nscooter    | Moped mode | Fast inner city, often used for food delivery, is able to ignore certain bollards, maximum speed of roughly 50km/h | ![scooter image](https://graphhopper.com/maps/img/scooter.png)\nfoot       | Pedestrian or walking without dangerous [SAC-scales](https://wiki.openstreetmap.org/wiki/Key:sac_scale) | foot access         | ![foot image](https://graphhopper.com/maps/img/foot.png)\nhike       | Pedestrian or walking with priority for more beautiful hiking tours and potentially a bit longer than `foot`. Walking duration is influenced by elevation differences.  | foot access         | ![hike image](https://graphhopper.com/maps/img/hike.png)\nbike       | Trekking bike avoiding hills | bike access  | ![bike image](https://graphhopper.com/maps/img/bike.png)\nmtb        | Mountainbike          | bike access         | ![Mountainbike image](https://graphhopper.com/maps/img/mtb.png)\nracingbike| Bike preferring roads | bike access         | ![racingbike image](https://graphhopper.com/maps/img/racingbike.png)\n\nPlease note:\n\n * all motor vehicles (`car`, `small_truck`, `truck` and `scooter`) support turn restrictions via `turn_costs=true`\n * the free package supports only the vehicle profiles `car`, `bike` or `foot`\n * up to 2 different vehicle profiles can be used in a single optimization request. The number of vehicles is unaffected and depends on your subscription.\n * we offer custom vehicle profiles with different properties, different speed profiles or different access options. To find out more about custom profiles, please [contact us](https://www.graphhopper.com/contact-form/).\n * a sophisticated `motorcycle` profile is available up on request. It is powered by the [Kurviger](https://kurviger.de/en) Routing API and favors curves and slopes while avoiding cities and highways.\n \n## TomTom\n\nIf you want to include traffic, you can purchase the TomTom Add-on.\nThis Add-on only uses TomTom's road network and historical traffic information.\nLive traffic is not yet considered. If you are interested to learn how we consider traffic information, we recommend that you read [this article](https://www.graphhopper.com/blog/2017/11/06/time-dependent-optimization/).\n\nPlease note the following:\n\n * Currently we only offer this for our [Route Optimization API](#tag/Route-Optimization-API).\n * In addition to our terms, you need to accept TomTom's [End User License Aggreement](https://www.graphhopper.com/tomtom-end-user-license-agreement/).\n * We do *not* use TomTom's web services. We only use their data with our software.\n \n[Contact us](https://www.graphhopper.com/contact-form/) for more details.\n\n#### Geographical Coverage\n\nWe offer\n\n- Europe including Russia\n- North, Central and South America\n- Saudi Arabia\n- United Arab Emirates\n- South Africa\n- Australia\n\n#### Supported Vehicle Profiles\n\nName       | Description           | Restrictions              | Icon\n-----------|:----------------------|:--------------------------|:---------------------------------------------------------\ncar        | Car mode              | car access                | ![car image](https://graphhopper.com/maps/img/car.png)\nsmall_truck| Small truck like a Mercedes Sprinter, Ford Transit or Iveco Daily | height=2.7m, width=2+0.4m, length=5.5m, weight=2080+1400 kg | ![small truck image](https://graphhopper.com/maps/img/small_truck.png)\n",
      "category": "AI & Machine Learning",
      "last_updated": "2025-08-03",
      "maintainer": "API Support",
      "documentation_url": "https://www.graphhopper.com/",
      "version": "1.0.0",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "GraphHopper Directions API",
      "paths_count": 14,
      "schemas_count": 56
    }
  },
  {
    "name": "greenwire_public_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/greenpeace.org/1.0.0/swagger.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "Greenpeace Greenwire allows you connect with other volunteers, activists and groups working on environmental campaigns all across the world!",
      "category": "AI & Machine Learning",
      "last_updated": "2025-08-03",
      "maintainer": "Greenpeace International contact",
      "documentation_url": "http://www.greenpeace.org/international/en/about/contactus/",
      "version": "1.0.0",
      "openapi_version": "2.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "Greenwire Public API",
      "paths_count": 6,
      "schemas_count": 21
    }
  },
  {
    "name": "gsmtasks_project_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/gsmtasks.com/2.4.13/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "The GSMtasks API is a RESTful web service for developers to programmatically interact with GSMtasks data, real-time delivery and task management and route optimization functionality.",
      "category": "Development Tools",
      "last_updated": "2025-08-03",
      "maintainer": "gsmtasks.com",
      "documentation_url": "https://gsmtasks.com",
      "version": "2.4.13",
      "openapi_version": "3.0.3",
      "quality_score": 100,
      "is_popular": false,
      "title": "GSMTasks Project API",
      "paths_count": 156,
      "schemas_count": 224
    }
  },
  {
    "name": "handwrytten_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/handwrytten.com/1.0.0/swagger.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "This is the Handwrytten API for sending cards written in the handwriting of your choice.\nUsing this api, you can send cards to users.  You can also customize cards with logos, which\ncan be saved and then used like any other card in the system.\nFor a \"sandbox\" account, please contact contact@handwrytten.com\nTo move from credit card per-transaction to monthly invoicing, also contact us.\n[https://www.handwrytten.com](https://www.handwrytten.com)\n",
      "category": "Development Tools",
      "last_updated": "2025-08-03",
      "maintainer": "handwrytten.com",
      "documentation_url": "https://handwrytten.com",
      "version": "1.0.0",
      "openapi_version": "2.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "Handwrytten API",
      "paths_count": 26,
      "schemas_count": 16
    }
  },
  {
    "name": "hhs_media_services_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/hhs.gov/2/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "<div class=\"swagger-ui-wrap extraFooter\"><h3>Common Features / Behaviors</h3> <div class=\"features\"> <ul> <li><strong>* \"sort\" param:</strong> supports multi column sorting through the use of commas as delimiters, and a hyphen to denote descending order. <br/> <strong><span>Examples:</span></strong> <ul> <li><span class=\"example\">name</span><span class=\"description\">sort results by name ascending</span></li> <li><span class=\"example\">-name</span><span class=\"description\">sort results by name descending</span></li> <li><span class=\"example\">-name,id</span><span class=\"description\">sort results by name descending and then by id ascending</span></li> <li><span class=\"example\">id,-dateContentAuthored</span><span class=\"description\">sort results by id ascending and then date descending</span></li> </ul> </li> <li><strong>Date formats:</strong> Date input format is expected to be based on <a href=\"http://www.ietf.org/rfc/rfc3339.txt\">RFC 3339</a>. <br/> <span><strong>Example:</strong></span> <ul><li>2013-11-18T18:43:01Z</li></ul> </li> </ul> </div> </div>",
      "category": "Development Tools",
      "last_updated": "2025-08-03",
      "maintainer": "hhs.gov",
      "documentation_url": "https://hhs.gov",
      "version": "2",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "HHS Media Services API",
      "paths_count": 31,
      "schemas_count": 47
    }
  },
  {
    "name": "httpbin_org",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/httpbin.org/0.9.2/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "A simple HTTP Request & Response Service.<br/> <br/> <b>Run locally: </b> <code>$ docker run -p 80:80 kennethreitz/httpbin</code>",
      "category": "General",
      "last_updated": "2025-08-03",
      "maintainer": "httpbin.org",
      "documentation_url": "https://kennethreitz.org",
      "version": "0.9.2",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "httpbin.org",
      "paths_count": 52,
      "schemas_count": 0
    }
  },
  {
    "name": "id4i_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/id4i.de/1.0.2/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "ID4i HTTP API",
      "category": "Development Tools",
      "last_updated": "2025-08-03",
      "maintainer": "BlueRain Software GmbH & Co. KG",
      "documentation_url": "http://bluerain.de",
      "version": "1.0.2",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "ID4i API",
      "paths_count": 70,
      "schemas_count": 78
    }
  },
  {
    "name": "api_reference_ideal_postcodes",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/ideal-postcodes.co.uk/3.7.0/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "# Getting Started\n\n## Overview\n\n### Access\n\nAll API methods are either a `GET`, `POST` or `OPTIONS` request.\n\nThe API communicates over both HTTPS and plain HTTP using IPv4 and IPv6.\n\nWe recommend using HTTPS only although HTTP is available.\n\nWe use appropriate HTTP status codes where possible to indicate the request status.\n\n### Rate Limiting\n\nEach IP address is rate limited at 30 requests per second. Tripping the rate limit will result in a 503 response.\n\nThe autocomplete API also has an additional rate limit.\n\nIf you expect to breach the limit please contact us and we can move you to an endpoint with a higher limit.\n\n### JSONP\n\n[JSONP](http://en.wikipedia.org/wiki/JSONP) requests are supported. Include a `callback=` in your request as a query parameter. Your results return wrapped in a function designated by your request.\n\n## Authentication\n\nMost requests require an **API key** for authentication. Authenticate by passing an `api_key` as part of the query string. For example:\n\n```\napi.ideal-postcodes.co.uk/v1/autocomplete/addresses?api_key=iddqd&q=parkside\n```\n\nAlternatively, authentication can be transmitted via the `Authorization` header using the following scheme:\n\n```\nAuthorization: api_key=\"iddqd\" [other_key=\"foo\"]\n```\n\n## Versioning\n\nThis API is versioned with a simple prefix in the URL. The current version is `/v1/`. We will maintain backwards-compatibility by releasing breaking changes under a new version.\n\nPlease note that the following changes are backwards-compatible:\n\n- Adding new properties to existing API responses\n- Adding new API endpoints\n- Adding new optional request parameters to existing API endpoints\n- Changing the order of properties in existing API responses\n- Changing the autocomplete address suggestion format\n\n## Error Handling\n\nA successful lookup is accompanied with a HTTP status code of 200 and a response code of 2000 (found in the body).\n\nAn error has occurred if the HTTP status code is not 200. Errors can range from a benign 404 (resource not found) to more urgent errors (your API Key ran out of credit, failed authentication, etc).\n\n## Testing\n\nEach new account comes with a free test balance. Contact us if you need more for testing and integration.\n\n### Community Key\n\nOur documentation and demos make heavy use of our community key `iddqd`. This allows for convenient access for trialing the API.\n\nMany restrictions on this key are relaxed to allow developers make test requests. This key has a limit of 15 lookups per IP address per day as well as a daily usage cap. If you hit any limit restrictions, you can continue testing the API by creating a key of your own and using our free test methods.\n\nPlease be kind with the community key. We're trusting everyone to use it responsibly so that other developers may trial the API. Thank you!\n\n## Metadata\n\nRequests that affect your balance may be annotated with arbitrary metadata. This data is stored along with your lookup history and can be queried at a later date via the API or the dashboard. We call the ability to label your requests [tagging](https://docs.ideal-postcodes.co.uk/docs/guides/tags).\n\n# Response Codes\n\nThe API returns two indicators to help you to determine the status of each HTTP request.\n\nThe first is the **HTTP Status**, which is found in the status-line of all HTTP requests. The API will return status codes that adhere to HTTP /1.1 Specifications wherever possible.\n\n`2XX` status codes indicates success while `4XX` and `5XX` indicate client and server errors respectively.\n\nThe second is the **API response code**, which can be found in the `code` property of the response body. This code will provide a more specific reason if a failure has occurred and can point you in the right direction when debugging.\n\nPlease use the glossary of code numbers and HTTP status codes below when debugging your requests.\n\n## 200 Request Success\n\n| HTTP Code | API Code | Description                                  |\n| --------- | -------- | -------------------------------------------- |\n| 200       | 2000     | Success. Request was completed successfully. |\n\n## 400 Bad Request\n\nThe request could not be understood due to some input error.\n\n| HTTP Code | API Code | Description                                                                                                                           |\n| --------- | -------- | ------------------------------------------------------------------------------------------------------------------------------------- |\n| 400       | 4000     | Invalid syntax submitted. Some part of your request was malformed or did not match our specifications.                                |\n| 400       | 4001     | Validation failed on your submitted data. Some of the data you provided did not meet our validation requirements, e.g. string length. |\n| 400       | 4005     | Invalid start date. Please ensure start dates are provided as a UTC Timestamp in milliseconds.                                        |\n| 400       | 4006     | Invalid end date. Please ensure end dates are provided as a UTC Timestamp in milliseconds.                                            |\n| 400       | 4007     | Invalid date range. Check if your start and end dates are in the right order.                                                         |\n| 400       | 4008     | Invalid date range. Check that your date range is 90 days or less.                                                                    |\n| 400       | 4009     | Too many tags. Please specify no more than 3 tags to query.                                                                           |\n\n## 401 Unauthorised\n\nAuthorization credentials are not valid.\n\n| HTTP Code | API Code | Description                                                                                                                                                        |\n| --------- | -------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| 401       | 4010     | Invalid Key. The `api_key` you provided is not valid.                                                                                                              |\n| 401       | 4011     | Requesting URL not on whitelist. The cross domain request is not coming from a whitelisted URL. You can update or disable your allowed URLs via your Key settings. |\n| 401       | 4012     | Failed user authentication. Invalid `user_token` presented.                                                                                                        |\n| 401       | 4013     | Licensee Key is required. Sublicensed keys require you need to present licensee credentials via the `licensee` parameter.                                          |\n\n## 402 Request Failed\n\nYour request is well-formed but are not able to complete your request for another reason.\n\n| HTTP Code | API Code | Description                                                                                                                                                                                                                                                        |\n| --------- | -------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| 402       | 4020     | Key balance depleted. You're out of lookups on your API Key.                                                                                                                                                                                                       |\n| 402       | 4021     | Limit reached. One of your lookup limits has been breached for today. This could either be your total daily limit on your key or the individual IP limit. You can either wait for for the limit to reset (after a day) or manually disable or increase your limit. |\n\n## 404 Resource Not Found\n\nThe resource you requested does not exist.\n\n| HTTP Code | API Code | Description                                                                                   |\n| --------- | -------- | --------------------------------------------------------------------------------------------- |\n| 404       | 4040     | Postcode not found. The postcode you have submitted does not exist.                           |\n| 404       | 4041     | User not found. Your user could not be identified given the credentials you presented.        |\n| 404       | 4042     | Key not found. Your key could not be identified given the credentials you presented.          |\n| 404       | 4044     | No UDPRN found. No address is associated with the UDPRN queried                               |\n| 404       | 4045     | No licensee found. Your licensee could not be identified given the credentials you presented. |\n| 404       | 4046     | No UMPRN found. No Multiple Residence premise is associated with the UMPRN queried.           |\n\n## 500 Server Error\n\nA error occurred on our server.\n\n| HTTP Code | API Code | Description                                                                                                                                                        |\n| --------- | -------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| 500       | 5000     | An error occurred on our end. These errors are logged and queued so we can understand what went wrong. However, if you need speedy resolution please email support |\n| 500       | 5001     | Akin to 5000.                                                                                                                                                      |\n| 500       | 5002     | The server took too long to process on our end, so we aborted the request. You may retry the request.                                                              |\n",
      "category": "AI & Machine Learning",
      "last_updated": "2025-08-03",
      "maintainer": "Support",
      "documentation_url": "https://docs.ideal-postcodes.co.uk",
      "version": "3.7.0",
      "openapi_version": "3.0.3",
      "quality_score": 100,
      "is_popular": false,
      "title": "API Reference - Ideal Postcodes",
      "paths_count": 20,
      "schemas_count": 194
    }
  },
  {
    "name": "instagram_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/instagram.com/1.0.0/swagger.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "Description of Instagram RESTful API.\n\nCurrent limitations:\n  * Instagram service does not support [cross origin headers](https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS)\n  for security reasons, therefore it is not possible to use Swagger UI and make API calls directly from browser.\n  * Modification API requests (`POST`, `DELETE`) require additional security [scopes](https://instagram.com/developer/authorization/)\n  that are available for Apps [created on or after Nov 17, 2015](http://instagram.com/developer/review/) and\n  started in [Sandbox Mode](http://instagram.com/developer/sandbox/).\n  * Consider the [Instagram limitations](https://instagram.com/developer/limits/) for API calls that depends on App Mode.\n\n**Warning:** For Apps [created on or after Nov 17, 2015](http://instagram.com/developer/changelog/) API responses\ncontaining media objects no longer return the `data` field in `comments` and `likes` nodes.\n\nLast update: 2015-11-28\n",
      "category": "AI & Machine Learning",
      "last_updated": "2025-08-03",
      "maintainer": "Instagram",
      "documentation_url": "https://instagram.com/developer",
      "version": "1.0.0",
      "openapi_version": "2.0",
      "quality_score": 100,
      "is_popular": true,
      "title": "Instagram API",
      "paths_count": 23,
      "schemas_count": 36
    }
  },
  {
    "name": "brain_web_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/intellifi.nl/2.23.4+0.gb463b49.dirty/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "This document describes the [Intellifi Brain](https://intellifi.zendesk.com/hc/en-us/categories/360000685454)\nWeb API specification using the [OpenAPI specification](https://github.com/OAI/OpenAPI-Specification).\n\nThe Brain Web API is a RESTful API that allows you to interact with the\n[Intellifi devices](https://intellifi.zendesk.com/hc/en-us/categories/360000685434) and\nservices in a powerful and simple way. Our end-to-end solution allows you to\nlocalize your items/assets based on technologies such as RFID and Bluetooth.\n\n# Try it out!\n\nThe API can be tried out and tested using the ['api-doc/tryitout' endpoint on this site](./tryitout/).\nThis UI allows anyone to visualize and interact with the API’s resources without having any of the implementation logic in place.\nIt’s automatically generated from this Specification, with the visual documentation making it easy for back end implementation and client side consumption.\n\n# Authentication\n\nApplications are required to provide some form of authentication to the API\nfor every secured endpoint. The Brain offers two forms of authentication.\n\n- API key (Via an HTTP request header or URL parameter)\n- Session cookie\n\n<!-- ReDoc-Inject: <security-definitions> -->\n\n# See also\n\n- About Intellifi and what we do: [intellifi.nl](https://intellifi.nl)\n- Technical and background information: [intellifi.zendesk.com](https://intellifi.zendesk.com)\n",
      "category": "AI & Machine Learning",
      "last_updated": "2025-08-03",
      "maintainer": "Support",
      "documentation_url": "https://intellifi.zendesk.com",
      "version": "2.23.4+0.gb463b49.dirty",
      "openapi_version": "3.0.1",
      "quality_score": 100,
      "is_popular": false,
      "title": "Brain Web API",
      "paths_count": 40,
      "schemas_count": 76
    }
  },
  {
    "name": "iqualify_management_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/iqualify.com/v1/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "The iQualify API offers management responses for building\nlearning experiences using your iQualify instance data.\n\nOnce you’ve registered with iQualify, you can request an API access token by\nnavigating to the API access section of the \"Account Settings\" area.\n\nFind out how to [Request your API access token](https://www.iqualify.com/help/connecting-iqualify-to-other-systems/api/how-to-access-and-manage-your-api-token)\non our Knowledge base.\n\nAll endpoints are only accessible via https and are located at\napi.iqualify.com. For instance: you can find your current offerings by\naccessing the following URL:\n\n    https://api.iqualify.com/v1/offerings/current\n\n",
      "category": "Development Tools",
      "last_updated": "2025-08-03",
      "maintainer": "iqualify.com",
      "documentation_url": "https://iqualify.com",
      "version": "v1",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "iQualify Management API",
      "paths_count": 74,
      "schemas_count": 70
    }
  },
  {
    "name": "api_isendpro",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/isendpro.com/1.1.1/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "[1] Liste des fonctionnalités :\n- envoi de SMS à un ou plusieurs destinataires,\n- lookup HLR,\n- récupération des récapitulatifs de campagne,\n- gestion des répertoires,\n- ajout en liste noire.\n- comptage du nombre de caractères des SMS\n\n[2] Pour utiliser cette API vous devez:\n- Créer un compte iSendPro sur https://isendpro.com/\n- Créditer votre compte \n    - Remarque: obtention d'un crédit de test possible sous conditions\n- Noter votre clé de compte (keyid)\n  - Elle vous sera indispensable à l'utilisation de l'API\n  - Vous pouvez la trouver dans le rubrique mon \"compte\", sous-rubrique \"mon API\"\n- Configurer le contrôle IP\n  - Le contrôle IP est configurable dans le rubrique mon \"compte\", sous-rubrique \"mon API\"\n  - Il s'agit d'un système de liste blanche, vous devez entrer les IP utilisées pour appeler l'API\n  - Vous pouvez également désactiver totalement le contrôle IP\n",
      "category": "AI & Machine Learning",
      "last_updated": "2025-08-03",
      "maintainer": "iSendPro Support Team",
      "documentation_url": "https://www.isendpro.com/",
      "version": "1.1.1",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "API iSendPro",
      "paths_count": 12,
      "schemas_count": 35
    }
  },
  {
    "name": "ix_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/ix-api.net/2.1.0/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "\nThis API allows to config/change/delete Internet Exchange services.\n\n# Filters\n\nWhen querying collections, the provided query parameters\nare validated. Unknown query parameters are ignored.\nProviding invalid filter values should yield a validation error.\n",
      "category": "Development Tools",
      "last_updated": "2025-08-03",
      "maintainer": "ix-api.net",
      "documentation_url": "https://ix-api.net",
      "version": "2.1.0",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "IX-API",
      "paths_count": 45,
      "schemas_count": 220
    }
  },
  {
    "name": "firebase_cloud_messaging_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/javatpoint.com/v1/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "FCM send API that provides a cross-platform messaging solution to reliably deliver messages at no cost.",
      "category": "Development Tools",
      "last_updated": "2025-08-03",
      "maintainer": "Google",
      "documentation_url": "https://firebase.google.com/docs/cloud-messaging",
      "version": "v1",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "Firebase Cloud Messaging API",
      "paths_count": 1,
      "schemas_count": 13
    }
  },
  {
    "name": "developer_documentation",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/journy.io/1.0.0/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "# Welcome\n\nImplementing a new tool can be daunting, but it doesn't have to. You can implement journy.io in a few different ways to ensure it fits with the rest of your tech stack seamlessly.\n\nWe welcome your feedback, ideas and suggestions. We really want to make your life easier, so if we’re falling short or should be doing something different, we want to hear about it. Send us an email at [hi@journy.io](mailto:hi@journy.io) or reach out via the chat on our website or on our platform.\n\nThere are multiple ways you can send us data about users and accounts. We have both frontend and backend APIs, which can be used together at the same time.\n\nIf you already use [Segment](https://segment.com/), you can [get up and running with journy.io in seconds](https://help.journy.io/en/articles/6488307-the-segment-connector).\n\n# Concepts\n\n## Users\n\nThe most basic entity is a user, a specific individual that completed an interaction with your product.\n\nWe support multiple types of users, often differentiated by it's external ID prefix. E.g. In the case you are building an ordering app, there could easily be an administrator (who updates products and checks for orders) and the end-customers who place orders. One could have a typical ADM-XXXXXXXX ID, while the other would be referenced by USR-XXXXXXXXX.\n\n## Accounts\n\nIn B2B SaaS, users can be part of multiple accounts. E.g. Imagine you're building a content scheduling app where an agency can manage the social media posts of their clients. Each client of the agency has its own account in the product.\n\nIf your app doesn't have the concept of a team or group of users, you can ignore accounts.\n\n## Events\n\nAn event is a data point that represents an interaction between a user and/or an account; and your product. Events can represents any range of interactions. E.g. Every time a customer creates an invoice in an invoicing app. Actions like creating an invoice can be tracked as an event in journy.io.\n\nIt's critical to track events properly. You'll need to provide either an account ID, or a user ID, or both; when tracking an event. E.g. If a user updates his personal settings, you can omit the account ID as the event would not be related to any account. In a same logic, an account could get a 'suspend account' event (with account ID) from an internal process, whereas no user would be associated. In most cases, events will be associated to both 1 user and 1 account.\n\nYou can optionally pass extra details as metadata (e.g. amount of the invoice). This gets particarly powerfull when creating computed properties on those event metadata. E.g. Our above ordering app could send journy.io 'Place Order' events with metadata 'price', on which journy.io very easily would compute a total order value (for each account) for the last 30 days.\n\n💡 Metadata does not update the properties of a user or account.\n\n# Frontend vs backend\n\nThe best implementations we see employ a hybrid approach to maximize data quality while maintaining the flexibility to easily collect the data they need.\n\nWe recommend using our JavaScript snippet to track screen views and our backend API to sync users, sync accounts and track events.\n\nWhen evaluating how to track a particular event, we suggest starting with server-side and only use frontend if it's not possible to collect purely server-side. This can be the case if you need to track interactions with your product that don't result in any natural server requests (such as a button click that opens a modal).\n\n# Frontend\n\n## Setup\n\n💡 You can find the JavaScript snippet in the website settings in the connections view.\n\nCopy the JavaScript snippet and place it in the head or body of your application.\n\nThe snippet automatically calls `journy(\"init\", { ... })` and `journy(\"pageview\")`.\n\n## Identify user\n\n💡 A user ID should be a robust, static, unique identifier that you recognize a user by in your own systems. Because these IDs are consistent across a customer’s lifetime, you should include a user ID in identify calls as often as you can. Ideally, the user ID should be a database ID.\n\n💡 journy.io does not recommend using simple email addresses or usernames as user ID, as these can change over time. journy.io recommends that you use static IDs instead, so the IDs never change. When you use a static ID, you can still recognize the user in your analytics tools, even if the user changes their email address.\n\n💡 The properties `full_name`, `first_name`, `last_name`, `phone` and `registered_at` will be used for creating contacts in destinations like Intercom, HubSpot, Salesforce, ...\n\n`journy(\"identify\")` allows you to identify the user that is currently using your product.\n\n```ts\njourny(\"identify\", {\n  // Email or user ID is required\n  email: \"john.doe@acme.com\",\n  // Unique identifier for the user in your database\n  userId: \"20\",\n\n  // Optional\n  // Hash of the user ID using a backend secret\n  // You can find the secret in the website settings\n  // Recommended to prevent spoofing\n  verification: \"hash\",\n\n  // Optional\n  properties: {\n    full_name: \"John Doe\",\n    // or\n    first_name: \"John\",\n    last_name: \"Doe\",\n\n    phone: \"123\",\n    registered_at: new Date(/* ... */),\n    is_admin: true,\n    key_with_empty_value: \"\",\n    this_property_will_be_deleted: null,\n  },\n});\n```\n\n## Identify account\n\n💡 An account ID should be a robust, static, unique identifier that you recognize an account by in your own systems. Ideally, the account ID should be a database ID.\n\n💡 The properties `name`, `mrr`, `plan` and `registered_at` will be used to create companies in destinations like Intercom, HubSpot, Salesforce, ...\n\n`journy(\"account\")` allows you to identify the business account (i.e. organization) using your product.\n\n```ts\njourny(\"account\", {\n  // Required\n  // Unique identifier for the account in your database\n  accountId: \"30\",\n\n  // Optional\n  // Hash of the account ID using a backend secret\n  // You can find the secret in the website settings\n  // Recommended to prevent spoofing\n  verification: \"hash\",\n\n  // Optional\n  properties: {\n    name: \"ACME, Inc\",\n    mrr: 399,\n    plan: \"Pro\",\n    registered_at: new Date(/* ... */),\n    is_paying: true,\n    key_with_empty_value: \"\",\n    this_property_will_be_deleted: null,\n  },\n});\n```\n\n## Send page view\n\n💡 In applications, we advise you to use screen views instead of page views.\n\nThe JavaScript snippet in the site settings includes a `pageview` by default.\n\n```ts\njourny(\"pageview\");\n```\n\nIf you have a B2B application, we recommend to set account ID for every page view that happens within the context of an account.\n\n💡 An account ID should be a robust, static, unique identifier that you recognize an account by in your own systems. Ideally, the account ID should be a database ID.\n\n```ts\njourny(\"pageview\", {\n  accountId: \"30\",\n\n  // Optional\n  // Hash of the account ID using a backend secret\n  // You can find the secret in the website settings\n  // Recommended to prevent spoofing\n  verification: \"hash\",\n});\n```\n\n## Send screen view\n\nIn applications, we strongly advise you to use screen views instead of page views.\n\nPage URLs in applications often include the account ID (e.g. https://app.acme.com/accountId/settings).\n\nThis makes it difficult to create signals, segments, ... based on those URLs.\n\nThat's what screen views solve. It allows you to set a name for the screen being viewed (e.g. Account settings).\n\n```ts\njourny(\"screen\", { name: \"Personal settings\" });\n```\n\nIf you have a B2B application, we recommend to set account ID for every screen view that happens within the context of an account.\n\nExample: \"Personal settings\" would be without account ID, \"Team settings\" would be with account ID.\n\n💡 An account ID should be a robust, static, unique identifier that you recognize an account by in your own systems. Ideally, the account ID should be a database ID.\n\n```ts\njourny(\"screen\", {\n  name: \"Account settings\",\n  accountId: \"30\",\n\n  // Optional\n  // Hash of the account ID using a backend secret\n  // You can find the secret in the website settings\n  // Recommended to prevent spoofing\n  verification: \"hash\",\n});\n```\n\n## Trigger an event\n\n💡 Use past tense for event names.\n\nUser events:\n\n```js\njourny(\"event\", {\n  // required\n  name: \"signed_in\",\n\n  // optional\n  metadata: {\n    key: \"value\",\n  },\n});\n```\n\nAccount events:\n\n💡 An account ID should be a robust, static, unique identifier that you recognize an account by in your own systems. Ideally, the account ID should be a database ID.\n\n```js\njourny(\"event\", {\n  // required\n  name: \"created_invoice\",\n  accountId: \"30\",\n\n  // Optional\n  // Hash of the account ID using a backend secret\n  // You can find the secret in the website settings\n  // Recommended to prevent spoofing\n  verification: \"hash\",\n\n  // optional\n  metadata: {\n    key: \"value\",\n    amount: 100,\n    allow_wire_transfer: true,\n  },\n});\n```\n\n## Identity verification\n\nIdentity verification ensures that one person can't impersonate another.\n\nIdentity verification requires you to add an hash (HMAC) (that you generate on your server using SHA256) to your installation snippet alongside your user ID and account ID.\n\njourny.io won't accept requests for a logged-in user without a valid hash. The hash is calculated using a secret key, which you should never share. Without this secret key, no third party can send journy.io a valid hash for one of your users, so they can't impersonate your users.\n\nThis is optional but highly recommended.\n\nYou can enable identify verification in the website settings in the connections view.\n\n```js\njourny(\"identify\", {\n  userId: \"userId\",\n  verification: \"USER_ID_HMAC_VALUE_HERE\"\n})\n\njourny(\"account\", {\n  accountId: \"accountId\",\n  verification: \"ACCOUNT_ID_HMAC_VALUE_HERE\"\n})\n\njourny(\"event\", {\n  accountId: \"accountId\",\n  verification: \"ACCOUNT_ID_HMAC_VALUE_HERE\"\n})\n```\n\n### PHP\n\n```php\n<?php\n\nhash_hmac(\n  'sha256', // hash function\n  id, // user or account ID\n  'secret' // secret key (keep safe!)\n);\n```\n\n### Node.js\n\n```js\nimport { createHmac } from \"crypto\"\n\ncreateHmac(\n  \"sha256\", // hash function\n  'secret' // secret key (keep safe!)\n).update(id).digest(\"hex\") // user or account ID\n```\n\n### Ruby\n\n```ruby\nOpenSSL::HMAC.hexdigest(\n  'sha256', # hash function\n  'secret', # secret key (keep safe!)\n  id.to_s # user or account ID\n)\n```\n\n### Python\n\n```\nimport hmac\nimport hashlib\n\nhmac.new(\n  b'secret', # secret key (keep safe!)\n  bytes(id, encoding='utf-8'), # user or account ID\n  digestmod=hashlib.sha256 # hash function\n).hexdigest()\n```\n\n## Single page application\n\nYou can use our JavaScript snippet inside single page applications.\n\nYou should call `journy(\"screen\")` (or `journy(\"pageview\")`) whenever a user in your application transitions to another page. You can do this by listening to router change events. The current page URL will always be resolved using `window.location.href`.\n\nYou can trigger events using `journy(\"event\")` whenever you need to.\n\n### Next.js\n\nWe built a demo app with Next.js. You can find the code [here](https://github.com/journy-io/js-sdk-demo-app).\n\nThis [component](https://github.com/journy-io/js-sdk-demo-app/blob/main/components/Journy.js) should be a great start.\n\nYou can use the `Script` component from Next.js to load the web snippet and call `init`.\n\nDon't forget to listen on route changes. You can use the `useRouter` hook for that.\n\n### React Router v6\n\nYou can use the [`useLocation`](https://reactrouter.com/docs/en/v6/api#uselocation) hook to listen for route changes:\n\n```js\nimport React, { useEffect } from \"react\";\nimport { useLocation } from 'react-router-dom';\n\nfunction App() {\n  const location = useLocation();\n\n  useEffect(() => {\n    journy(\"screen\", { name: \"name\" });\n    // or\n    journy(\"pageview\");\n  }, [location]);\n\n  return (\n      // ...\n  );\n}\n```\n\n### Vue Router\n\nYou can use [`router.afterEach`](https://router.vuejs.org/guide/advanced/navigation-guards.html#global-after-hooks) to listen for route changes:\n\n```js\nconst router = new VueRouter({ ... });\n\nrouter.afterEach((to, from) => {\n  journy(\"screen\", { name: \"name\" });\n  // or\n  journy(\"pageview\");\n});\n```\n\nNote: We don't accept a page URL argument for `journy(\"pageview\")`. The current page URL will always be resolved using `window.location.href`.\n\n## TypeScript\n\nWe published an [npm package](https://www.npmjs.com/package/@journyio/web-types) with type definitions to enable type-safe usage of our JavaScript snippet. The code and documentation is available on [GitHub](https://github.com/journy-io/web-types).\n\n## Localhost\n\nBy default a site doesn't allow page views from other domains than the registered domain. This makes it difficult to test your tracking implementation locally.\n\nYou can enable \"Allow any domain\" in the site settings to disable the domain check.\n\nThis will allow you to test the JavaScript snippet with localhost as hostname.\n\n# Backend\n\nThe journy.io API is organized around REST. Our API has predictable resource-oriented URLs, returns JSON-encoded responses, and uses standard HTTP response codes, authentication, and verbs.\n\nThe API is hosted on api.journy.io.\n\n## Official SDKs\n\nOur SDKs are designed to help you interact with our APIs with less friction. They are written in several different languages and help bridge the gap between your application and journy.io APIs. They take away the need to know the exact URL and HTTP method to use for each API call among other things leaving you more time to focus on making your application.\n\n| Language   | Package                                                                        | Source code                                                                |\n|------------|--------------------------------------------------------------------------------|----------------------------------------------------------------------------|\n| 💚 Node.js | [npm install @journyio/sdk ](https://www.npmjs.com/package/@journyio/sdk)      | [github.com/journy-io/js-sdk](https://github.com/journy-io/js-sdk)         |\n| 🐘 PHP     | [composer require journy-io/sdk](https://packagist.org/packages/journy-io/sdk) | [github.com/journy-io/php-sdk](https://github.com/journy-io/php-sdk)       |\n| 🐍 Python  | [pip install journyio-sdk](https://pypi.org/project/journyio-sdk/)             | [github.com/journy-io/python-sdk](https://github.com/journy-io/python-sdk) |\n| 💎 Ruby    | Coming soon                                                                    | Coming soon                                                                |\n\nYour favourite programming language not included? [Let us know!](mailto:hi@journy.io)\n\nIn the meanwhile, you can use [OpenAPI Generator](https://github.com/OpenAPITools/openapi-generator) to generate a client for your programming language.\n\n## Authentication\n\nThe journy.io API uses API keys to authenticate requests. You can view and manage your API keys in the [connections screen](https://system.journy.io).\n\nYour API keys carry many privileges, so be sure to keep them secure! Do not share your secret API keys in publicly accessible areas such as GitHub, client-side code, and so forth.\n\nAll API requests must be made over HTTPS. Calls made over plain HTTP will fail. API requests without authentication will also fail.\n\nFor every request send to the API we expect a header `X-Api-Key` to be set with the API Key.\n\n## Permissions\n\nWhen creating an API Key in [the application](https://system.journy.io) you will have the choice to give permissions to an API Key (which you can change later on). These permissions restrict the API Key from different actions. When an API Key tries to perform a certain action it doesn't have the permissions for, you will receive a `401: Unauthorized` response.\n\n## Rate limiting\n\nTo prevent abuse of the API there is a maximum throughput of 1800 requests per minute. If you need a higher throughput, please contact us.\n\nTo keep our platform healthy and stable, we'll block API keys that consistently hit our rate limits. Therefore, please consider taking this throughput into account.\n\nIn every response the headers `X-RateLimit-Limit` and `X-RateLimit-Remaining` will be set. The `X-RateLimit-Limit`-header will always contain the current limit of requests per minute. The `X-RateLimit-Remaining`-header will always contain the amount of requests you have left in the current sliding window.\n\n💡 The client-side tracking uses different rate limits.\n\n## Errors\n\njourny.io uses conventional HTTP response codes to indicate the success or failure of an API request. In general: Codes in the 2xx range indicate success. Codes in the 4xx range indicate an error that failed given the information provided (e.g. a required parameter was omitted). Codes in the 5xx range indicate an error with journy.io's servers (these are rare).\n\nWhen performing a `POST`- or `PUT`-request with a requestBody, or when including parameters, these parameters and fields will automatically be checked and validated against the API Spec. When any error occurs, you will get a response with an `errors`-field, structured as follows:\n\n```json\n{\n  \"errors\": {\n    \"parameters\": {\n      \"header\": {\n        \"headerParameterName\": \"Describe what's wrong with the header parameter.\",\n        ...\n      },\n      \"query\": {\n        \"queryParameterName\": \"Describe what's wrong with the query parameter.\",\n        ...\n      },\n      \"path\": {\n        \"pathParameterName\": \"Describe what's wrong with the path parameter.\",\n        ...\n      },\n    },\n    \"fields\": {\n      \"fieldName\": \"Describe what's wrong with the fieldName.\",\n      \"object.fieldName\": \"Describe what's wrong with the fieldName of the included object.\",\n       ...\n    }\n  }\n}\n```\n\n## Best practices\n\n### Track accounts & users immediately on creation\n\nWhen you create an account in your database, immediately sending data about that account to journy.io helps your team stay in sync. The same goes for users. Call [Upsert account](#operation/upsertAccount) as soon as possible, right after the account is first created in your database.\n\n### Update account data daily\n\nNot every account is active every day. But, you may have properties on the account that change through background processing. That's why we recommend updating every one of your accounts' data in a recurring daily process. This way, you know that your accounts are updated every day in journy.io.\n\n## Changelog\n\n### December 2021\n\n[POST /events](#operation/trackJourneyEvent) will be moved to [POST /track](#operation/trackEvent). [POST /events](#operation/trackJourneyEvent) is deprecated and will be removed in the future.",
      "category": "AI & Machine Learning",
      "last_updated": "2025-08-03",
      "maintainer": "Support",
      "documentation_url": "https://help.journy.io",
      "version": "1.0.0",
      "openapi_version": "3.0.3",
      "quality_score": 100,
      "is_popular": false,
      "title": "Developer documentation",
      "paths_count": 15,
      "schemas_count": 0
    }
  },
  {
    "name": "jumpseller_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/jumpseller.com/1.0.0/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "# Endpoint Structure\n\nAll URLs are in the format: \n\n```text\nhttps://api.jumpseller.com/v1/path.json?login=XXXXXX&authtoken=storetoken  \n```\n\nThe path is prefixed by the API version and the URL takes as parameters the login (your store specific API login) and your authentication token.\n<br/><br/>\n***\n\n# Version\n\nThe current version of the API is **v1**.  \nIf we change the API in backward-incompatible ways, we'll increase the version number and maintain stable support for the old urls.\n<br/><br/>\n***\n\n# Authentication\n\nThe API uses a token-based authentication with a combination of a login key and an auth token. **Both parameters can be found on the left sidebar of the Account section, accessed from the main menu of your Admin Panel**. The auth token of the user can be reset on the same page.\n\n![Store Login](/images/support/api/apilogin.png)\n\nThe auth token is a **32 characters** string.\n\nIf you are developing a Jumpseller App, the authentication should be done using [OAuth-2](/support/oauth-2). Please read the article [Build an App](/support/apps) for more information.\n<br/><br/>\n***\n\n# Curl Examples\n\nTo request all the products at your store, you would append the products index path to the base url to create an URL with the format:  \n\n```text\nhttps://api.jumpseller.com/v1/products.json?login=XXXXXX&authtoken=XXXXX\n```\n\nIn curl, you can invoque that URL with:  \n\n```text\ncurl -X GET \"https://api.jumpseller.com/v1/products.json?login=XXXXXX&authtoken=XXXXX\"\n```\n\nTo create a product, you will include the JSON data and specify the MIME Type:  \n\n```text\ncurl -X POST -d '{ \"product\" : {\"name\": \"My new Product!\", \"price\": 100} }' \"https://api.jumpseller.com/v1/products.json?login=XXXXXX&authtoken=XXXXX\" -H \"Content-Type:application/json\"\n```\n\nand to update the product identified with 123:  \n\n```text\ncurl -X PUT -d '{ \"product\" : {\"name\": \"My updated Product!\", \"price\": 99} }' \"https://api.jumpseller.com/v1/products/123.json?login=XXXXXX&authtoken=XXXXX\" -H \"Content-Type:application/json\"\n```\n\nor delete it:  \n\n```text\ncurl -X DELETE \"https://api.jumpseller.com/v1/products/123.json?login=XXXXXX&authtoken=XXXXX\" -H \"Content-Type:application/json\"\n```\n<br/><br/>\n***\n\n# PHP Examples\n\nCreate a new Product (POST method)\n\n```php\n$url = 'https://api.jumpseller.com/v1/products.json?login=XXXXX&authtoken=XXXXX;\n$ch = curl_init($url);\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\ncurl_setopt($ch, CURLOPT_HTTPHEADER, array('Content-Type: application/json'));\n\ncurl_setopt($ch, CURLOPT_CUSTOMREQUEST, \"POST\"); //post method\ncurl_setopt($ch, CURLOPT_POSTFIELDS, '{ \"product\" : {\"name\": \"My updated Product!\", \"price\": 99} }');\n\n$result = curl_exec($ch);\nprint_r($result);\ncurl_close($ch);\n```\n<br/><br/>\n***\n\n# Plain JSON only. No XML.\n\n* We only support JSON for data serialization.\n* Our node format has no root element.  \n* We use snake_case to describe attribute keys (like \"created_at\").  \n* All empty value are replaced with **null** strings.\n* All API URLs end in .json to indicate that they accept and return JSON.\n* POST and PUT methods require you to explicitly state the MIME type of your request's body content as **\"application/json\"**.\n<br/><br/>\n***\n\n# Rate Limit\nYou can perform a maximum of:\n\n+ 240 (two hundred forty) requests per minute and\n+ 8 (eight) requests per second \n\nIf you exceed this limit, you'll get a 403 Forbidden (Rate Limit Exceeded) response for subsequent requests.  \n\nThe rate limits apply by IP address and by store. This means that multiple requests on different stores are not counted towards the same rate limit.\n\nThis limits are necessary to ensure resources are correctly used. Your application should be aware of this limits and retry any unsuccessful request, check the following Ruby stub:\n\n```ruby\ntries = 0; max_tries = 3;\nbegin\n  HTTParty.send(method, uri) # perform an API call.\n  sleep 0.5\n  tries += 1\nrescue\n  unless tries >= max_tries\n    sleep 1.0 # wait the necessary time before retrying the call again.\n    retry\n  end\nend\n```\n\nFinally, you can review the Response Headers of each request:\n\n```text\nJumpseller-PerMinuteRateLimit-Limit: 60  \nJumpseller-PerMinuteRateLimit-Remaining: 59 # requests available on the per-second interval  \nJumpseller-PerSecondRateLimit-Limit: 2  \nJumpseller-PerSecondRateLimit-Remaining: 1 # requests available on the per-second interval\n``` \n\nto better model your application requests intervals.\n\nIn the event of getting your IP banned, the Response Header `Jumpseller-BannedByRateLimit-Reset` informs you the time when will your ban be reseted.\n<br/><br/>\n***\n\n# Pagination\n\nBy default we will return 50 objects (products, orders, etc) per page. There is a maximum of 100, using a query string `&limit=100`.\nIf the result set gets paginated it is your responsibility to check the next page for more objects -- you do this by using query strings `&page=2`, `&page=3` and so on.\n\n```text\nhttps://api.jumpseller.com/v1/products.json?login=XXXXXX&authtoken=XXXXX&page=3&limit=100\n```\n<br/><br/>\n***\n\n# More\n* [Jumpseller API wrapper](https://gitlab.com/jumpseller-api/ruby) provides a public Ruby abstraction over our API;\n* [Apps Page](/apps) showcases external integrations with Jumpseller done by technical experts;\n* [Imgbb API](https://api.imgbb.com/) provides an easy way to upload and temporaly host for images and files.\n<br/><br/>\n***\n<br/><br/>\n",
      "category": "AI & Machine Learning",
      "last_updated": "2025-08-03",
      "maintainer": "jumpseller.com",
      "documentation_url": "https://jumpseller.com",
      "version": "1.0.0",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "Jumpseller API",
      "paths_count": 82,
      "schemas_count": 148
    }
  },
  {
    "name": "just_eat_uk",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/just-eat.co.uk/1.0.0/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "# Just Eat API\nJust Eat offers services for our various business partners and our consumer applications.\nHow you interact with the API depends on the services you wish to interact with.\n## Security\n### HTTPS\nAll api calls and callbacks require HTTPS. Your service will need a valid SSL certificate and be accessible via the standard SSL port (port 443).\n## Making an API request\nSome API calls require an API key, to authenticate the partner calling the API.\n```\nPUT https://uk-partnerapi.just-eat.io/orders/abcd1234 HTTP/1.1\nAuthorization: JE-API-KEY abcd123456789\n```\nOther calls require a user token in the form of a JWT.\n```\nGET https://uk.api.just-eat.io/consumer/me/orders/uk HTTP/1.1\nAuthorization: Bearer abcd123456789\n```\n\n## Date Formats\n### Date and time formats\nAll dates and times should use the [ISO 8601 standard for representation of dates and times](https://en.wikipedia.org/wiki/ISO_8601).\n\n#### For instance:\n* DueDateWithUtcOffset: `\"2015-05-26T14:52:35.5444292+01:00\"`\n  - Local time: `14:52`\n  - UTC time: `13:52`\n  - UTC offset: `+1hr` (due to daylight time saving)\n* DueDateWithUtcOffset: `\"2015-02-03T11:10:00.0000000+00:00\"`\n  - Local time: `11:10`\n  - UTC time: `11:10`\n  - UTC offset: `0` (no daylight time saving, local time is equivalent to UTC)\n\nNote that the offset may be for a timezone different to your own, so you should alway convert to your own local time for display purposes (e.g. on receipts and terminals).\n\n### Callback timestamps\nTimestamps sent to Just Eat should be recorded as the current local time (including any changes needed to account for daylight saving) with an accompanying offset that shows the difference between the recorded local time and the current UTC time.\n\nIf it is not possible to record timestamps in local time, timestamps may be recorded in UTC time with a 00:00 offset.\n## Async Webhooks\nSome of the webhooks on the platform are configured as being 'async' webhooks. These are for long-running operations, and work as follows:\n  1. Your webhook is invoked with a `?callback={returnUrl}` query string parameter. The `returnUrl` is a unique URL that you will need to send the async response to.\n  2. Return an immediate `202 Accepted` response from the webhook endpoint, to indicate that you have received the request.\n  3. Perform the long-running operation. This can be deemed either a _success_; or a _failure_.\n  4. If the result is a _**success**_, return the following:\n  ```\n  POST {returnUrl} HTTP/1.1\n\n  {\n        \"status\": \"Success\",\n        \"message\": \"{successMessage}\",\n        \"data\": {}   // webhook-specific response object\n  }\n  ```\n  5. Otherwise, if the result is a _**failure**_, return the following:\n  ```\n  POST {returnUrl} HTTP/1.1\n\n  {\n        \"status\": \"Failure\",\n        \"message\": \"{failureMessage}\",\n        \"data\": {}   // webhook-specific response object\n  }\n  ```",
      "category": "AI & Machine Learning",
      "last_updated": "2025-08-03",
      "maintainer": "just-eat.co.uk",
      "documentation_url": "https://just-eat.co.uk",
      "version": "1.0.0",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "Just Eat UK",
      "paths_count": 85,
      "schemas_count": 671
    }
  },
  {
    "name": "keycloak_admin_rest_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/keycloak.local/1/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "This is a REST API reference for the Keycloak Admin",
      "category": "Development Tools",
      "last_updated": "2025-08-03",
      "maintainer": "keycloak.local",
      "documentation_url": "https://github.com/keycloak/keycloak/tree/6.0.1/core/src/main/java/org/keycloak/representations",
      "version": "1",
      "openapi_version": "3.0.2",
      "quality_score": 100,
      "is_popular": false,
      "title": "Keycloak Admin REST API",
      "paths_count": 192,
      "schemas_count": 65
    }
  },
  {
    "name": "kumpeapps_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/kumpeapps.com/5.0.0/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "KKid API. Due to security concerns all calls to this API requires authentication. If you have access then you may use your KumpeApps username/password to authenticate. To gain access please use the contact developer link below.",
      "category": "AI & Machine Learning",
      "last_updated": "2025-08-03",
      "maintainer": "kumpeapps.com",
      "documentation_url": "https://kumpeapps.com",
      "version": "5.0.0",
      "openapi_version": "3.0.1",
      "quality_score": 100,
      "is_popular": false,
      "title": "KumpeApps API",
      "paths_count": 13,
      "schemas_count": 21
    }
  },
  {
    "name": "launchdarkly_rest_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/launchdarkly.com/5.3.0/swagger.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "Build custom integrations with the LaunchDarkly REST API",
      "category": "Development Tools",
      "last_updated": "2025-08-03",
      "maintainer": "LaunchDarkly Support",
      "documentation_url": "https://support.launchdarkly.com",
      "version": "5.3.0",
      "openapi_version": "2.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "LaunchDarkly REST API",
      "paths_count": 64,
      "schemas_count": 107
    }
  },
  {
    "name": "lgtm_api_specification",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/lgtm.com/v1.0/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "The REST API for LGTM provides data so that you can customize how you integrate LGTM analysis into your workflow. It includes the following resources:\n  * `/` ([API root](https://lgtm.com/help/lgtm/api/api-v1#LGTM-API-specification-API-root))&mdash;get version information or download the specification in OpenAPI format.\n  * `/projects` ([Projects](https://lgtm.com/help/lgtm/api/api-v1#LGTM-API-specification-Projects))&mdash;list projects, get a summary of the current status for a project, or add new projects.\n  * `/analyses` ([Analyses](https://lgtm.com/help/lgtm/api/api-v1#LGTM-API-specification-Analyses))&mdash;get a summary of results, download all the alerts, or trigger analysis for a specific commit.\n  * `/codereviews` ([Code reviews](https://lgtm.com/help/lgtm/api/api-v1#LGTM-API-specification-Code-reviews))&mdash;trigger code review for a patch, and view the results.\n  * `/operations` ([Operations](https://lgtm.com/help/lgtm/api/api-v1#LGTM-API-specification-Operations))&mdash;get information about long-running tasks, for example, analyses or code reviews that you've requested.\n  * `/snapshots` ([Snapshots](https://lgtm.com/help/lgtm/api/api-v1#LGTM-API-specification-Snapshots))&mdash;download and upload databases representing a snapshot of a codebase.\n  * `/queryjobs` ([Query jobs](https://lgtm.com/help/lgtm/api/api-v1#LGTM-API-specification-Query-jobs))&mdash;submit queries to evaluate against existing projects, and download their results.\n  * `/system` ([System](https://lgtm.com/help/lgtm/api/api-v1#LGTM-API-specification-System))&mdash;get information on the health or usage of the system.\n\nFor an overview and getting started topics, see [API for LGTM](https://lgtm.com/help/lgtm/api/api-for-lgtm).\n",
      "category": "AI & Machine Learning",
      "last_updated": "2025-08-03",
      "maintainer": "lgtm.com",
      "documentation_url": "https://lgtm.com",
      "version": "v1.0",
      "openapi_version": "3.0.1",
      "quality_score": 100,
      "is_popular": false,
      "title": "LGTM API specification",
      "paths_count": 23,
      "schemas_count": 25
    }
  },
  {
    "name": "linode_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/linode.com/4.151.1/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "## Introduction\nThe Linode API provides the ability to programmatically manage the full\nrange of Linode products and services.\n\nThis reference is designed to assist application developers and system\nadministrators.  Each endpoint includes descriptions, request syntax, and\nexamples using standard HTTP requests. Response data is returned in JSON\nformat.\n\n\nThis document was generated from our OpenAPI Specification.  See the\n<a target=\"_top\" href=\"https://www.openapis.org\">OpenAPI website</a> for more information.\n\n<a target=\"_top\" href=\"/docs/api/openapi.yaml\">Download the Linode OpenAPI Specification</a>.\n\n\n## Changelog\n\n<a target=\"_top\" href=\"/docs/products/tools/api/release-notes/\">View our Changelog</a> to see release\nnotes on all changes made to our API.\n\n## Access and Authentication\n\nSome endpoints are publicly accessible without requiring authentication.\nAll endpoints affecting your Account, however, require either a Personal\nAccess Token or OAuth authentication (when using third-party\napplications).\n\n### Personal Access Token\n\nThe easiest way to access the API is with a Personal Access Token (PAT)\ngenerated from the\n<a target=\"_top\" href=\"https://cloud.linode.com/profile/tokens\">Linode Cloud Manager</a> or\nthe [Create Personal Access Token](/docs/api/profile/#personal-access-token-create) endpoint.\n\nAll scopes for the OAuth security model ([defined below](/docs/api/#oauth)) apply to this\nsecurity model as well.\n\n### Authentication\n\n| Security Scheme Type: | HTTP |\n|-----------------------|------|\n| **HTTP Authorization Scheme** | bearer |\n\n## OAuth\n\nIf you only need to access the Linode API for personal use,\nwe recommend that you create a [personal access token](/docs/api/#personal-access-token).\nIf you're designing an application that can authenticate with an arbitrary Linode user, then\nyou should use the OAuth 2.0 workflows presented in this section.\n\nFor a more detailed example of an OAuth 2.0 implementation, see our guide on [How to Create an OAuth App with the Linode Python API Library](/docs/products/tools/api/guides/create-an-oauth-app-with-the-python-api-library/#oauth-2-authentication-exchange).\n\nBefore you implement OAuth in your application, you first need to create an OAuth client. You can do this [with the Linode API](/docs/api/account/#oauth-client-create) or [via the Cloud Manager](https://cloud.linode.com/profile/clients):\n\n  - When creating the client, you'll supply a `label` and a `redirect_uri` (referred to as the Callback URL in the Cloud Manager).\n  - The response from this endpoint will give you a `client_id` and a `secret`.\n  - Clients can be public or private, and are private by default. You can choose to make the client public when it is created.\n    - A private client is used with applications which can securely store the client secret (that is, the secret returned to you when you first created the client). For example, an application running on a secured server that only the developer has access to would use a private OAuth client. This is also called a confidential client in some OAuth documentation.\n    - A public client is used with applications where the client secret is not guaranteed to be secure. For example, a native app running on a user's computer may not be able to keep the client secret safe, as a user could potentially inspect the source of the application. So, native apps or apps that run in a user's browser should use a public client.\n    - Public and private clients follow different workflows, as described below.\n\n### OAuth Workflow\n\nThe OAuth workflow is a series of exchanges between your third-party app and Linode. The workflow is used\nto authenticate a user before an application can start making API calls on the user's behalf.\n\nNotes:\n\n- With respect to the diagram in [section 1.2 of RFC 6749](https://tools.ietf.org/html/rfc6749#section-1.2), login.linode.com (referred to in this section as the *login server*)\nis the Resource Owner and the Authorization Server; api.linode.com (referred to here as the *api server*) is the Resource Server.\n- The OAuth spec refers to the private and public workflows listed below as the [authorization code flow](https://tools.ietf.org/html/rfc6749#section-1.3.1) and [implicit flow](https://tools.ietf.org/html/rfc6749#section-1.3.2).\n\n| PRIVATE WORKFLOW | PUBLIC WORKFLOW |\n|------------------|------------------|\n| 1.  The user visits the application's website and is directed to login with Linode. | 1.  The user visits the application's website and is directed to login with Linode. |\n| 2.  Your application then redirects the user to Linode's [login server](https://login.linode.com) with the client application's `client_id` and requested OAuth `scope`, which should appear in the URL of the login page. | 2.  Your application then redirects the user to Linode's [login server](https://login.linode.com) with the client application's `client_id` and requested OAuth `scope`, which should appear in the URL of the login page. |\n| 3.  The user logs into the login server with their username and password. | 3.  The user logs into the login server with their username and password. |\n| 4.  The login server redirects the user to the specificed redirect URL with a temporary authorization `code` (exchange code) in the URL. | 4.  The login server redirects the user back to your application with an OAuth `access_token` embedded in the redirect URL's hash. This is temporary and expires in two hours. No `refresh_token` is issued. Therefore, once the `access_token` expires, a new one will need to be issued by having the user log in again. |\n| 5.  The application issues a POST request (*see additional details below*) to the login server with the exchange code, `client_id`, and the client application's `client_secret`. | |\n| 6.  The login server responds to the client application with a new OAuth `access_token` and `refresh_token`. The `access_token` is set to expire in two hours. | |\n| 7.  The `refresh_token` can be used by contacting the login server with the `client_id`, `client_secret`, `grant_type`, and `refresh_token` to get a new OAuth `access_token` and `refresh_token`. The new `access_token` is good for another two hours, and the new `refresh_token` can be used to extend the session again by this same method (*see additional details below*). | |\n\n#### OAuth Private Workflow - Additional Details\n\nThe following information expands on steps 5 through 7 of the private workflow:\n\nOnce the user has logged into Linode and you have received an exchange code,\nyou will need to trade that exchange code for an `access_token` and `refresh_token`. You\ndo this by making an HTTP POST request to the following address:\n\n```\nhttps://login.linode.com/oauth/token\n```\n\nMake this request as `application/x-www-form-urlencoded` or as\n`multipart/form-data` and include the following parameters in the POST body:\n\n| PARAMETER | DESCRIPTION |\n|-----------|-------------|\n| client_id | Your app's client ID. |\n| client_secret | Your app's client secret. |\n| code | The code you just received from the redirect. |\n\nYou'll get a response like this:\n\n```json\n{\n  \"scope\": \"linodes:read_write\",\n  \"access_token\": \"03d084436a6c91fbafd5c4b20c82e5056a2e9ce1635920c30dc8d81dc7a6665c\",\n  \"refresh_token\": \"f2ec9712e616fdb5a2a21aa0e88cfadea7502ebc62cf5bd758dbcd65e1803bad\",\n  \"token_type\": \"bearer\",\n  \"expires_in\": 7200\n}\n```\n\nIncluded in the response is an `access_token`. With this token, you can proceed to make\nauthenticated HTTP requests to the API by adding this header to each request:\n\n```\nAuthorization: Bearer 03d084436a6c91fbafd5c4b20c82e5056a2e9ce1635920c30dc8d81dc7a6665c\n```\n\nThis `access_token` is set to expire in two hours. To refresh access prior to expiration, make another request to the same URL with the following parameters in the POST body:\n\n| PARAMETER | DESCRIPTION |\n|-----------|-------------|\n| grant_type | The grant type you're using. Use \"refresh_token\" when refreshing access. |\n| client_id | Your app's client ID. |\n| client_secret | Your app's client secret. |\n| refresh_token | The `refresh_token` received from the previous response. |\n\nYou'll get another response with an updated `access_token` and `refresh_token`, which can then be used to refresh access again.\n\n### OAuth Reference\n\n| Security Scheme Type | OAuth 2.0 |\n|-----------------------|--------|\n| **Authorization URL** | `https://login.linode.com/oauth/authorize` |\n| **Token URL** | `https://login.linode.com/oauth/token` |\n| **Scopes** | <ul><li>`account:read_only` - Allows access to GET information about your Account.</li><li>`account:read_write` - Allows access to all endpoints related to your Account.</li><li>`databases:read_only` - Allows access to GET Managed Databases on your Account.</li><li>`databases:read_write` - Allows access to all endpoints related to your Managed Databases.</li><li>`domains:read_only` - Allows access to GET Domains on your Account.</li><li>`domains:read_write` - Allows access to all Domain endpoints.</li><li>`events:read_only` - Allows access to GET your Events.</li><li>`events:read_write` - Allows access to all endpoints related to your Events.</li><li>`firewall:read_only` - Allows access to GET information about your Firewalls.</li><li>`firewall:read_write` - Allows access to all Firewall endpoints.</li><li>`images:read_only` - Allows access to GET your Images.</li><li>`images:read_write` - Allows access to all endpoints related to your Images.</li><li>`ips:read_only` - Allows access to GET your ips.</li><li>`ips:read_write` - Allows access to all endpoints related to your ips.</li><li>`linodes:read_only` - Allows access to GET Linodes on your Account.</li><li>`linodes:read_write` - Allow access to all endpoints related to your Linodes.</li><li>`lke:read_only` - Allows access to GET LKE Clusters on your Account.</li><li>`lke:read_write` - Allows access to all endpoints related to LKE Clusters on your Account.</li><li>`longview:read_only` - Allows access to GET your Longview Clients.</li><li>`longview:read_write` - Allows access to all endpoints related to your Longview Clients.</li><li>`nodebalancers:read_only` - Allows access to GET NodeBalancers on your Account.</li><li>`nodebalancers:read_write` - Allows access to all NodeBalancer endpoints.</li><li>`object_storage:read_only` - Allows access to GET information related to your Object Storage.</li><li>`object_storage:read_write` - Allows access to all Object Storage endpoints.</li><li>`stackscripts:read_only` - Allows access to GET your StackScripts.</li><li>`stackscripts:read_write` - Allows access to all endpoints related to your StackScripts.</li><li>`volumes:read_only` - Allows access to GET your Volumes.</li><li>`volumes:read_write` - Allows access to all endpoints related to your Volumes.</li></ul><br/>|\n\n## Requests\n\nRequests must be made over HTTPS to ensure transactions are encrypted. Data included in requests must be supplied in json format unless otherwise specified in the command description.\n\nThe following request methods are supported:\n\n| METHOD  | USAGE |\n|---------|-------|\n| GET     | Retrieves data about collections and individual resources. |\n| POST    | For collections, creates a new resource of that type. Also used to perform actions on action endpoints. |\n| PUT     | Updates an existing resource. |\n| DELETE  | Deletes a resource. This is a destructive action. |\n| HEAD    | Returns only the response header information of a GET request |\n| OPTIONS | Provides permitted communication options for a command |\n\n## Responses\n\n### Response Status Codes\n\nActions will return one of the following HTTP response status codes:\n\n| STATUS  | DESCRIPTION |\n|---------|-------------|\n| 200 OK  | The request was successful. |\n| 202 Accepted | The request was successful, but processing has not been completed. The response body includes a \"warnings\" array containing the details of incomplete processes. |\n| 204 No Content | The server successfully fulfilled the request and there is no additional content to send. |\n| 299 Deprecated | The request was successful, but involved a deprecated endpoint. The response body includes a \"warnings\" array containing warning messages. |\n| 400 Bad Request | You submitted an invalid request (missing parameters, etc.). |\n| 401 Unauthorized | You failed to authenticate for this resource. |\n| 403 Forbidden | You are authenticated, but don't have permission to do this. |\n| 404 Not Found | The resource you're requesting does not exist. |\n| 429 Too Many Requests | You've hit a rate limit. |\n| 500 Internal Server Error | Please [open a Support Ticket](/docs/api/support/#support-ticket-open). |\n\n### Response Headers\n\nThere are many ways to access response header information for individual command URLs, depending on how you are accessing the Linode API. For example, to view HTTP response headers for the `/regions` endpoint when making requests with `curl`, use the `-I` or `--head` option as follows:\n\n```Shell\ncurl -I https://api.linode.com/v4/regions\n```\n\nResponses may include the following headers:\n\n| HEADER | DESCRIPTION | EXAMPLE |\n|--------|-------------|---------|\n| Access-Control-Allow-Credentials | Responses to credentialed requests are exposed to frontend JavaScript code. | true |\n| Access-Control-Allow-Headers | All permissible request headers for this endpoint. | Authorization, Origin, X-Requested-With, Content-Type, Accept, X-Filter |\n| Access-Control-Allow-Methods | Permissible HTTP methods for this endpoint | HEAD, GET, OPTIONS, POST, PUT, DELETE |\n| Access-Control-Allow-Origin | Indicates origin access permissions. The wildcard character `*` means any origin can access the resource. | * |\n| Access-Control-Expose-Headers | Available headers to include in response to cross-origin requests. | X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Status |\n| Cache-Control | Controls caching in browsers and shared caches such as CDNs. | private, max-age=60, s-maxage=60 |\n| Content-Security-Policy | Controls which resources are allowed to load. By default, resources do not load. | default-src 'none' |\n| Content-Type | All responses are in json format. | application/json |\n| Content-Warning | A message containing instructions for successful requests that were not able to be completed. | Please contact support for assistance. |\n| Retry-After | The remaining time in seconds until the current [rate limit](#rate-limiting) window resets. | 60 |\n| Strict-Transport-Security | Enforces HTTPS-only access until the returned time in seconds. | max-age=31536000 |\n| Vary | Optional request headers that affected the response content. | Authorization, X-Filter |\n| X-Accepted-OAuth-Scopes | Required [scopes](#oauth-reference) for accessing the requested command. | linodes:read_only |\n| X-Customer-UUID | A unique identifier for the account owning the the [personal access token](#personal-access-token) that was used for the request. | ABCDEF01-3456-789A-BCDEF0123456789A |\n| X-OAuth-Scopes | Allowed [scopes](#oauth-reference) associated with the [personal access token](#personal-access-token) that was used for the request. A value of `*` indicates read/write access for all scope categories. | images:read_write linodes:read_only |\n| X-RateLimit-Limit | The maximum number of permitted requests during the [rate limit](#rate-limiting) window for this endpoint. | 800 |\n| X-RateLimit-Remaining | The remaining number of permitted requests in the current [rate limit](#rate-limiting) window. | 798 |\n| X-RateLimit-Reset | The time when the current [rate limit](#rate-limiting) window rests in UTC epoch seconds. | 1674747739 |\n| X-Spec-Version | The current API version that handled the request. | 4.150.0 |\n\n## Errors\n\nSuccess is indicated via <a href=\"https://en.wikipedia.org/wiki/List_of_HTTP_status_codes\" target=\"_top\">Standard HTTP status codes</a>.\n`2xx` codes indicate success, `4xx` codes indicate a request error, and\n`5xx` errors indicate a server error. A\nrequest error might be an invalid input, a required parameter being omitted,\nor a malformed request. A server error means something went wrong processing\nyour request. If this occurs, please\n[open a Support Ticket](/docs/api/support/#support-ticket-open)\nand let us know. Though errors are logged and we work quickly to resolve issues,\nopening a ticket and providing us with reproducable steps and data is always helpful.\n\nThe `errors` field is an array of the things that went wrong with your request.\nWe will try to include as many of the problems in the response as possible,\nbut it's conceivable that fixing these errors and resubmitting may result in\nnew errors coming back once we are able to get further along in the process\nof handling your request.\n\nWithin each error object, the `field` parameter will be included if the error\npertains to a specific field in the JSON you've submitted. This will be\nomitted if there is no relevant field. The `reason` is a human-readable\nexplanation of the error, and will always be included.\n\n## Pagination\n\nResource lists are always paginated. The response will look similar to this:\n\n```json\n{\n    \"data\": [ ... ],\n    \"page\": 1,\n    \"pages\": 3,\n    \"results\": 300\n}\n```\n\n* Pages start at 1. You may retrieve a specific page of results by adding\n`?page=x` to your URL (for example, `?page=4`). If the value of `page`\nexceeds `2^64/page_size`, the last possible page will be returned.\n\n\n* Page sizes default to 100,\nand can be set to return between 25 and 500. Page size can be set using\n`?page_size=x`.\n\n## Filtering and Sorting\n\nCollections are searchable by fields they include, marked in the spec as\n`x-linode-filterable: true`. Filters are passed\nin the `X-Filter` header and are formatted as JSON objects. Here is a request\ncall for Linode Types in our \"standard\" class:\n\n```Shell\ncurl \"https://api.linode.com/v4/linode/types\" \\\n  -H 'X-Filter: { \"class\": \"standard\" }'\n```\n\nThe filter object's keys are the keys of the object you're filtering,\nand the values are accepted values. You can add multiple filters by\nincluding more than one key. For example, filtering for \"standard\" Linode\nTypes that offer one vcpu:\n\n```Shell\n curl \"https://api.linode.com/v4/linode/types\" \\\n  -H 'X-Filter: { \"class\": \"standard\", \"vcpus\": 1 }'\n```\n\nIn the above example, both filters are combined with an \"and\" operation.\nHowever, if you wanted either Types with one vcpu or Types in our \"standard\"\nclass, you can add an operator:\n\n ```Shell\ncurl \"https://api.linode.com/v4/linode/types\" \\\n  -H 'X-Filter: { \"+or\": [ { \"vcpus\": 1 }, { \"class\": \"standard\" } ] }'\n```\n\nEach filter in the `+or` array is its own filter object, and all conditions\nin it are combined with an \"and\" operation as they were in the previous example.\n\nOther operators are also available. Operators are keys of a Filter JSON\nobject. Their value must be of the appropriate type, and they are evaluated\nas described below:\n\n| OPERATOR | TYPE   | DESCRIPTION                       |\n|----------|--------|-----------------------------------|\n| +and     | array  | All conditions must be true.       |\n| +or      | array  | One condition must be true.        |\n| +gt      | number | Value must be greater than number. |\n| +gte     | number | Value must be greater than or equal to number. |\n| +lt      | number | Value must be less than number. |\n| +lte     | number | Value must be less than or equal to number. |\n| +contains | string | Given string must be in the value. |\n| +neq      | string | Does not equal the value.          |\n| +order_by | string | Attribute to order the results by - must be filterable. |\n| +order    | string | Either \"asc\" or \"desc\". Defaults to \"asc\". Requires `+order_by`. |\n\nFor example, filtering for [Linode Types](/docs/api/linode-types/)\nthat offer memory equal to or higher than 61440:\n\n```Shell\ncurl \"https://api.linode.com/v4/linode/types\" \\\n  -H '\n    X-Filter: {\n      \"memory\": {\n        \"+gte\": 61440\n      }\n    }'\n```\n\nYou can combine and nest operators to construct arbitrarily-complex queries.\nFor example, give me all [Linode Types](/docs/api/linode-types/)\nwhich are either `standard` or `highmem` class, or\nhave between 12 and 20 vcpus:\n\n```Shell\ncurl \"https://api.linode.com/v4/linode/types\" \\\n  -H '\n    X-Filter: {\n      \"+or\": [\n        {\n          \"+or\": [\n            {\n              \"class\": \"standard\"\n            },\n            {\n              \"class\": \"highmem\"\n            }\n          ]\n        },\n        {\n          \"+and\": [\n            {\n              \"vcpus\": {\n                \"+gte\": 12\n              }\n            },\n            {\n              \"vcpus\": {\n                \"+lte\": 20\n              }\n            }\n          ]\n        }\n      ]\n    }'\n```\n## Time Values\n\nAll times returned by the API are in UTC, regardless of the timezone configured within your user's profile (see `timezone` property within [Profile View](/docs/api/profile/#profile-view__responses)).\n\n## Rate Limiting\n\nRate limits on API requests help maintain the health and stability of the Linode API. Accordingly, every endpoint of the Linode API applies a rate limit on a per user basis as determined by OAuth token for authenticated requests or IP address for public endpoints.\n\nEach rate limit consists of a total number of requests and a time window. For example, if an endpoint has a rate limit of 800 requests per minute, then up to 800 requests over a one minute window are permitted. Subsequent requests to an endpoint after hitting a rate limit return a 429 error. You can successfully remake requests to that endpoint after the rate limit window resets.\n\n### Linode APIv4 Rate Limits\n\nWith the Linode API, you can generally make up to 1,600 general API requests every two minutes. Additionally, all endpoints have a rate limit of 800 requests per minute unless otherwise specified below.\n\n**Note:** There may be rate limiting applied at other levels outside of the API, for example, at the load balancer.\n\nCreating Linodes has a dedicated rate limit of 10 requests per 30 seconds. That endpoint is:\n\n* [Linode Create](/docs/api/linode-instances/#linode-create)\n\n`/stats` endpoints have their own dedicated rate limits of 100 requests per minute. These endpoints are:\n\n* [View Linode Statistics](/docs/api/linode-instances/#linode-statistics-view)\n* [View Linode Statistics (year/month)](/docs/api/linode-instances/#statistics-yearmonth-view)\n* [View NodeBalancer Statistics](/docs/api/nodebalancers/#nodebalancer-statistics-view)\n* [List Managed Stats](/docs/api/managed/#managed-stats-list)\n\nObject Storage endpoints have a dedicated rate limit of 750 requests per second. The Object Storage endpoints are:\n\n* [Object Storage Endpoints](/docs/api/object-storage/)\n\nOpening Support Tickets has a dedicated rate limit of 2 requests per minute. That endpoint is:\n\n* [Open Support Ticket](/docs/api/support/#support-ticket-open)\n\nAccepting Service Transfers has a dedicated rate limit of 2 requests per minute. That endpoint is:\n\n* [Service Transfer Accept](/docs/api/account/#service-transfer-accept)\n\n### Rate Limit HTTP Response Headers\n\nThe Linode API includes the following HTTP response headers which are designed to help you avoid hitting rate limits which might disrupt your applications:\n\n* **X-RateLimit-Limit**: The maximum number of permitted requests during the rate limit window for this endpoint.\n* **X-RateLimit-Remaining**: The remaining number of permitted requests in the current rate limit window.\n* **X-RateLimit-Reset**: The time when the current rate limit window rests in UTC epoch seconds.\n* **Retry-After**: The remaining time in seconds until the current rate limit window resets.\n\n## CLI (Command Line Interface)\n\nThe <a href=\"https://github.com/linode/linode-cli\" target=\"_top\">Linode CLI</a> allows you to easily\nwork with the API using intuitive and simple syntax. It requires a\n[Personal Access Token](/docs/api/#personal-access-token)\nfor authentication, and gives you access to all of the features and functionality\nof the Linode API that are documented here with CLI examples.\n\nEndpoints that do not have CLI examples are currently unavailable through the CLI, but\ncan be accessed via other methods such as Shell commands and other third-party applications.\n",
      "category": "AI & Machine Learning",
      "last_updated": "2025-08-03",
      "maintainer": "Linode",
      "documentation_url": "https://linode.com",
      "version": "4.151.1",
      "openapi_version": "3.0.1",
      "quality_score": 100,
      "is_popular": false,
      "title": "Linode API",
      "paths_count": 226,
      "schemas_count": 114
    }
  },
  {
    "name": "linqr",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/linqr.app/2.0/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "This is LinQR QR Code API documentation. This API allows you to generate custom, visually attractive QR Codes. The cloud infrastructure guarantees high availability and autoscalability of the service. You can generate hundreds of thousands of images this way and use them however you like.\n\nWe realize that your API use case may require custom solutions, and perhaps we lack functionality that is very important to you. In that case feel free to write an email to our support and tell us about it. We have repeatedly added new functions of our service directly after the requests of our users.\n\n**General remarks:**\n - maximum request size is fixed at 32MB.\n - request timeout is fixed at 180 seconds.",
      "category": "AI & Machine Learning",
      "last_updated": "2025-08-03",
      "maintainer": "LinQR",
      "documentation_url": "https://linqr.app",
      "version": "2.0",
      "openapi_version": "3.0.2",
      "quality_score": 100,
      "is_popular": false,
      "title": "LinQR",
      "paths_count": 12,
      "schemas_count": 72
    }
  },
  {
    "name": "listen_api_podcast_search_directory_and_insights_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/listennotes.com/2.0/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "Simple & no-nonsense podcast search & directory API. Search all podcasts and episodes by people, places, or topics.\n",
      "category": "Development Tools",
      "last_updated": "2025-08-03",
      "maintainer": "Listen Notes",
      "documentation_url": "https://www.listennotes.com/api/",
      "version": "2.0",
      "openapi_version": "3.1.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "Listen API: Podcast Search, Directory, and Insights API",
      "paths_count": 23,
      "schemas_count": 102
    }
  },
  {
    "name": "api_docs_logoraisr_com",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/logoraisr.com/v1/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "<p style=\"font-size:110%;\">Dig into our logoraisr API reference documentation. We also offer an OpenAPI specification to allow easy integration into your systems. You can download the json file by clicking on the download button.<p><br><p style=\"font-size:110%; font-weight:bold\">OpenAPI 2.0 Validation Status</p><img src=\"https://online.swagger.io/validator?url=https://docs.logoraisr.com/\">",
      "category": "AI & Machine Learning",
      "last_updated": "2025-08-03",
      "maintainer": "logoraisr.com",
      "documentation_url": "https://logoraisr.com",
      "version": "v1",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "API docs | logoraisr.com",
      "paths_count": 8,
      "schemas_count": 12
    }
  },
  {
    "name": "mandrill",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/mandrillapp.com/1.0/swagger.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "Mandrill is a reliable, scalable, and secure delivery API for transactional emails from websites and applications. It's ideal for sending data-driven transactional emails, including targeted e-commerce and personalized one-to-one messages.\n",
      "category": "AI & Machine Learning",
      "last_updated": "2025-08-03",
      "maintainer": "mandrillapp.com",
      "documentation_url": "https://mandrillapp.com/api/docs/",
      "version": "1.0",
      "openapi_version": "2.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "Mandrill",
      "paths_count": 90,
      "schemas_count": 95
    }
  },
  {
    "name": "rat_genome_database_rest_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/mcw.edu/1.1/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "The RGD REST API provides programmatic access to information and annotation stored in the Rat Genome Database",
      "category": "Development Tools",
      "last_updated": "2025-08-03",
      "maintainer": "Rat Genome Database",
      "documentation_url": "http://rgd.mcw.edu",
      "version": "1.1",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "Rat Genome Database REST API",
      "paths_count": 100,
      "schemas_count": 24
    }
  },
  {
    "name": "medium_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/medium.com/1.0/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "Medium API helps you to quickly extract data from Medium's Website (https://medium.com). \n\nYou can gather data related to users, publications, articles (including its textual content), latest posts &amp; top writers within a topic/niche, etc…\n",
      "category": "Development Tools",
      "last_updated": "2025-08-03",
      "maintainer": "Nishu Jain",
      "documentation_url": "https://github.com/Medium/medium-api-docs",
      "version": "1.0",
      "openapi_version": "3.0.2",
      "quality_score": 100,
      "is_popular": false,
      "title": "Medium API",
      "paths_count": 32,
      "schemas_count": 0
    }
  },
  {
    "name": "meraki_dashboard_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/meraki.com/1.32.0/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.\n\n> Date: 05 April, 2023\n>\n> [Recent Updates](https://meraki.io/whats-new/)\n\n---\n\n[API Documentation](https://meraki.io/api)\n\n[Community Support](https://meraki.io/community)\n\n[Meraki Homepage](https://www.meraki.com)\n",
      "category": "Development Tools",
      "last_updated": "2025-08-03",
      "maintainer": "Meraki Developer Community",
      "documentation_url": "https://meraki.io/community",
      "version": "1.32.0",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "Meraki Dashboard API",
      "paths_count": 388,
      "schemas_count": 0
    }
  },
  {
    "name": "meshery_api",
    "provider_type": "http",
    "http_method": "GET",
    "url": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/meshery.local/0.4.27/openapi.yaml",
    "content_type": "application/x-yaml",
    "metadata": {
      "description": "the purpose of this application is to provide an application\nthat is using plain go code to define an API\n\nThis should demonstrate all the possible comment annotations\nthat are available to turn go code into a fully compliant swagger 2.0 spec",
      "category": "AI & Machine Learning",
      "last_updated": "2025-08-03",
      "maintainer": "meshery.local",
      "documentation_url": "https://meshery.local",
      "version": "0.4.27",
      "openapi_version": "3.0.0",
      "quality_score": 100,
      "is_popular": false,
      "title": "Meshery API.",
      "paths_count": 51,
      "schemas_count": 136
    }
  }
]